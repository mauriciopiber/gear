    public function __construct()
    {
        $this->chroot();

        $zf2ModulePaths = array(
            dirname(dirname(realpath(__DIR__ . '/../../')))
        );

        if (($path = $this->findParentPath('vendor'))) {
            $zf2ModulePaths[***REMOVED*** = $path;
        }

        if (($path = $this->findParentPath('module')) !== $zf2ModulePaths[0***REMOVED***) {
            $zf2ModulePaths[***REMOVED*** = $path;
        }

        $this->initAutoloader();

        $env = getenv('APP_ENV') ?  : 'test';

        $applicationConfig = include __DIR__.'/../../../config/application.config.php';

        $config = array(
            'module_listener_options' => array(
                'module_paths' => $zf2ModulePaths,
                'config_glob_paths' => array(
                    sprintf('config/autoload/{,*.}{global,%s,local}.php', $env)
                )
            ),
            'modules' => $applicationConfig['modules'***REMOVED***
        );


        $serviceLocator = new ServiceManager(new ServiceManagerConfig());
        $serviceLocator->setService('ApplicationConfig', $config);
        $serviceLocator->get('ModuleManager')->loadModules();
        $this->serviceLocator = $serviceLocator;
    }
