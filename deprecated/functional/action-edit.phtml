namespace <?php echo $this->module;?>\Functional;

use <?php echo $this->module;?>\FunctionalTester;
use <?php echo $this->module;?>\FunctionalTester\EditSteps;

/**
 * @SuppressWarnings(PHPMD)
 * @group <?php echo $this->class.PHP_EOL;?>
 * @group Edit
*/
class <?php echo $this->class;?>EditCest extends \<?php echo $this->module;?>\Functional\AbstractCest
{
    protected $fixture;

// @codingStandardsIgnoreStart
    public function _before(EditSteps $I)
    {
// @codingStandardsIgnoreEnd
<?php echo $this->preFixture;?>

        $this->fixture = $I->haveInDatabase(
            '<?php echo $this->classUnderline;?>',
            array(
<?php echo $this->fixture;?>
                'created' => '<?php echo $this->created->format('Y-m-d H:i:s');?>',
                'created_by' => 2
            )
        );
        parent::_before($I);
    }

    public function onPageEdit<?php echo $this->class;?>(EditSteps $I)
    {
        $I->wantTo('Test return to list when try to edit without id');
        $I->amOnPage(\<?php echo $this->module;?>\Pages\<?php echo $this->class;?>EditPage::$URL.'/'.$this->fixture);
        $I->see(
            'Editar <?php echo $this->classLabel;?>',
            \<?php echo $this->module;?>\Pages\<?php echo $this->class;?>EditPage::$title
        );
    }

    public function breadcrumbEdit<?php echo $this->class;?>(EditSteps $I)
    {
        $I->amOnPage(\<?php echo $this->module;?>\Pages\<?php echo $this->class;?>EditPage::$URL.'/'.$this->fixture);
        $I->verifyBreadcrumb(
            '\<?php echo $this->module;?>\Pages\<?php echo $this->class;?>EditPage',
            '<?php echo $this->moduleLabel;?>',
            '<?php echo $this->classLabel;?>',
            'Editar'
        );
    }
}
