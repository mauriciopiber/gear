namespace <?php echo $this->module;?>\Pages;

/**
 * @SuppressWarnings(PHPMD)
 */
class ListLayoutPage extends LayoutPage
{
    public static $filterBtn = '#filterBtn';

    public static $createBtn = '#createBtn';

    public static $filterSearchBtn = '#filterSearchBtn';

    public static $filterClearBtn = '#filterClearBtn';

    public static $filterLikeField = '#likeField';

    public static $paginatorCount = '#paginatorCount';

    public static $paginatorPages = '#paginatorPages';

    public static $paginator = '#paginatorPages > div > ul > li';

    public static function getPaginatorByIndex($index)
    {
        return static::$paginator.':nth-child('.$index.')';
    }

    public static function getTableHeadColumnByIndex($index)
    {
        return static::$tableHeadRow.':nth-child('.$index.')';
    }

    public static function getTableRowActions($row)
    {
        return sprintf(static::$tableBodyRowColumn, $row).':last-child';
    }

    public static function getTableBodyRowByIndex($index)
    {
        return static::$tableBodyRow.':nth-child('.$index.')';
    }

    public static function getTableBodyRowColumnByIndex($row, $column)
    {
        return sprintf(static::$tableBodyRowColumn, $row).':nth-child('.$column.')';
    }

    public static function getTableItem($item = 1)
    {
        return sprintf(static::$tableBodyItem, $item);
    }

    public static function getTableRowColumn($row, $column)
    {
        return sprintf(static::$tableBodyRowColumn, $row, $column);
    }
}
