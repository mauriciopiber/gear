<?php
namespace SchemaModuleTest\RepositoryTest;

use GearBaseTest\AbstractTestCase;
use SchemaModule\Repository\MyRepositoryExtendsDependencyTrait;

/**
 * @group Repository
 */
class MyRepositoryExtendsDependencyTest extends AbstractTestCase
{
    use MyRepositoryExtendsDependencyTrait;

    /**
     * @group SchemaModule
     * @group MyRepositoryExtendsDependency
     */
    public function testServiceLocator()
    {
        $serviceLocator = $this->getMyRepositoryExtendsDependency()->getServiceLocator();
        $this->assertInstanceOf('Zend\ServiceManager\ServiceManager', $serviceLocator);
    }

    /**
     * @group SchemaModule
     * @group MyRepositoryExtendsDependency
    */
    public function testGet()
    {
        $myRepositoryExtends = $this->getMyRepositoryExtendsDependency();
        $this->assertInstanceOf('SchemaModule\Repository\MyRepositoryExtendsDependency', $myRepositoryExtends);
    }

    /**
     * @group SchemaModule
     * @group MyRepositoryExtendsDependency
    */
    public function testSet()
    {
        $mockMyRepository = $this->getMockSingleClass(
            'SchemaModule\Repository\MyRepositoryExtendsDependency'
        );
        $this->setMyRepositoryExtendsDependency($mockMyRepository);
        $this->assertEquals($mockMyRepository, $this->getMyRepositoryExtendsDependency());
    }
    public function testSetOtherRepository()
    {
        $mockOtherRepository = $this->getMockSingleClass('SchemaModule\Repository\OtherRepository');
        $this->getMyRepositoryExtendsDependency()->setOtherRepository($mockOtherRepository);
        $this->assertEquals($mockOtherRepository, $this->getMyRepositoryExtendsDependency()->getOtherRepository());
    }

    public function testGetOtherRepository()
    {
        $this->assertInstanceOf(
            'SchemaModule\Repository\OtherRepository',
            $this->getMyRepositoryExtendsDependency()->getOtherRepository()
        );
    }
}
