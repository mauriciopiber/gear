<?php
namespace MyModule\Greatest;

use MyModule\ColumnInterface\RepositoryBeforeInterface;
use MyModule\ColumnInterface\RepositoryAfterInterface;
use MyModule\Repository\MyDependencyOneTrait;
use MyModule\Logic\MyDependencyTwoTrait;
use MyModule\Mvc\MyDependencyThreeTrait;
use MyModule\Repository\AbstractRepository;
use MyModule\Repository\MyDependencyOne;
use MyModule\Logic\MyDependencyTwo;
use MyModule\Mvc\MyDependencyThree;

abstract class AbstractCompleteFactoriesRepository extends AbstractRepository implements
    RepositoryBeforeInterface,
    RepositoryAfterInterface
{
    use MyDependencyOneTrait;

    use MyDependencyTwoTrait;

    use MyDependencyThreeTrait;

    public function __construct(
        MyDependencyOne $myDependencyOne,
        MyDependencyTwo $myDependencyTwo,
        MyDependencyThree $myDependencyThree
    ) {
        $this->myDependencyOne = $myDependencyOne;
        $this->myDependencyTwo = $myDependencyTwo;
        $this->myDependencyThree = $myDependencyThree;
    }
}
