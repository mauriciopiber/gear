<?php
namespace MyModuleTest\ControllerTest;

use PHPUnit\Framework\TestCase;
use MyModule\Controller\BasicDependenciesFactoryFirstConsole;
use Zend\Console\Request;
use Zend\Mvc\MvcEvent;
use Zend\Router\RouteMatch;

/**
 * @group BasicDependenciesFactoryFirstConsole
 * @group Controller
 */
class BasicDependenciesFactoryFirstConsoleTest extends TestCase
{

    protected $controller;
    protected $request;
    protected $response;
    protected $routeMatch;
    protected $event;

    public function setUp() : void
    {
        parent::setUp();

        $this->myRepositoryOne = $this->prophesize('MyModule\Repository\MyRepositoryOne');
        $this->myRepositoryTwo = $this->prophesize('MyModule\Repository\MyRepositoryTwo');
        $this->myRepositoryThree = $this->prophesize('MyModule\Repository\MyRepositoryThree');

        $this->controller = new BasicDependenciesFactoryFirstConsole(
            $this->myRepositoryOne->reveal(),
            $this->myRepositoryTwo->reveal(),
            $this->myRepositoryThree->reveal()
        );

        $this->request    = new Request();
        $this->routeMatch = new RouteMatch(array('controller' => 'BasicDependenciesFactoryFirstConsole'));
        $this->event      = new MvcEvent();
        $this->event->setRouteMatch($this->routeMatch);
        $this->controller->setEvent($this->event);
    }

    public function test404()
    {
        $this->routeMatch->setParam('action', 'action-that-doesnt-exist');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(404, $response->getStatusCode());
    }

    public function testFirstActionAction()
    {
        $this->routeMatch->setParam('action', 'first-action');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ConsoleModel', $result);
    }
}
