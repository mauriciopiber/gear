<?php
namespace MyModuleTest\FormTest;

use PHPUnit\Framework\TestCase;
use MyModule\Form\MyFormFactory;

/**
 * @group MyModule
 * @group MyForm
 * @group Form
 */
class MyFormFactoryTest extends TestCase
{
    public function setUp() : void
    {
        parent::setUp();

        $this->container = $this->prophesize('Zend\ServiceManager\ContainerInterface');
        $this->entityManager = $this->prophesize('Doctrine\ORM\EntityManager');
        $this->filter = $this->prophesize('MyModule\Filter\MyFilter');
        $this->request = $this->prophesize('Zend\Http\Request');
        $this->translator = $this->prophesize('Zend\Mvc\I18n\Translator');
        $this->uri = $this->prophesize('Zend\Uri\Uri');
        $this->adapter = $this->prophesize('Zend\Db\Adapter\Adapter');
    }

    public function testCreateFactory()
    {
        $this->uri->getPath()->willReturn('my-module/my/edit/30');
        $this->request->getUri()->willReturn($this->uri->reveal());

        $this->filter->setAdapter($this->adapter->reveal())->shouldBeCalled();
        $this->filter->getInputFilter(30)->willReturn($this->filter->reveal());

        $this->container->get('doctrine.entitymanager.orm_default')
          ->willReturn($this->entityManager->reveal())
          ->shouldBeCalled();

        $this->container->get('MyModule\Filter\MyFilter')
          ->willReturn($this->filter->reveal())
          ->shouldBeCalled();

        $this->container->get('Zend\Db\Adapter\Adapter')->willReturn($this->adapter->reveal());
        $this->container->get('Request')->willReturn($this->request->reveal())->shouldBeCalled();
        $this->container->get('Translator')->willReturn($this->translator->reveal())->shouldBeCalled();

        $factory = new MyFormFactory();

        $instance = $factory->__invoke($this->container->reveal(), null);

        $this->assertInstanceOf('MyModule\Form\MyForm', $instance);
    }
}
