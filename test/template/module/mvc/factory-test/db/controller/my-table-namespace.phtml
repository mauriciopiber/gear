<?php
namespace MyModuleTest\CustomTest\CustomNamespaceTest;

use PHPUnit\Framework\TestCase;
use Zend\Mvc\Controller\ControllerManager;
use Zend\ServiceManager\ServiceManager;
use MyModule\Custom\CustomNamespace\MyTableNamespaceControllerFactory;
use MyModule\Custom\CustomNamespace\MyTableNamespaceController;
use MyModule\Custom\CustomNamespace\MyTableService;
use MyModule\Custom\CustomNamespace\MyTableForm;
use MyModule\Custom\CustomNamespace\MyTableSearchForm;

/**
 * @group MyModule
 * @group MyTableNamespaceController
 * @group Controller
 */
class MyTableNamespaceControllerFactoryTest extends TestCase
{
    public function testMyTableNamespaceControllerFactory()
    {
        $this->controllerManager = $this->prophesize(ControllerManager::class);

        $this->serviceLocator = $this->prophesize(ServiceManager::class);

        $this->serviceLocator->get(MyTableService::class)
            ->willReturn($this->prophesize(MyTableService::class)->reveal())
            ->shouldBeCalled();

        $this->serviceLocator->get(MyTableForm::class)
            ->willReturn($this->prophesize(MyTableForm::class)->reveal())
            ->shouldBeCalled();

        $this->serviceLocator->get(MyTableSearchForm::class)
            ->willReturn($this->prophesize(MyTableSearchForm::class)->reveal())
            ->shouldBeCalled();

        $this->controllerManager->getServiceLocator()->willReturn($this->serviceLocator->reveal());

        $factory = new MyTableNamespaceControllerFactory();

        $instance = $factory->createService($this->controllerManager->reveal());

        $this->assertInstanceOf(MyTableNamespaceController::class, $instance);
    }
}
