<?php
namespace MyModuleTest\BestNamespaceTest;

use PHPUnit\Framework\TestCase;
use Zend\ServiceManager\ServiceLocatorInterface;
use MyModule\BestNamespace\MySrcWithSpecialDependencyFactory;
use MyModule\BestNamespace\MySrcWithSpecialDependency;
use Gear\Util\String\StringService;
use Zend\Console\Adapter\Posix;
use Zend\Db\Adapter\Adapter;

/**
 * @group MyModule
 * @group MySrcWithSpecialDependency
 * @group Service
 */
class MySrcWithSpecialDependencyFactoryTest extends TestCase
{
    public function testMySrcWithSpecialDependencyFactory()
    {
        $this->serviceLocator = $this->prophesize(ServiceLocatorInterface::class);

        $this->serviceLocator->get('Gear\Util\String\StringService')
            ->willReturn($this->prophesize(StringService::class)->reveal())
            ->shouldBeCalled();

        $this->serviceLocator->get('console')
            ->willReturn($this->prophesize(Posix::class)->reveal())
            ->shouldBeCalled();

        $this->serviceLocator->get(Adapter::class)
            ->willReturn($this->prophesize(Adapter::class)->reveal())
            ->shouldBeCalled();

        $factory = new MySrcWithSpecialDependencyFactory();

        $instance = $factory->createService($this->serviceLocator->reveal());

        $this->assertInstanceOf(MySrcWithSpecialDependency::class, $instance);
    }
}
