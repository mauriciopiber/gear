<?php
namespace MyModuleTest\CustomTest\CustomNamespaceTest;

use Zend\Test\PHPUnit\Controller\AbstractHttpControllerTestCase as TestCase;
use MyModule\Custom\CustomNamespace\MyVeryLongTableNameExampleController;
use Zend\Http\Request;
use Zend\Mvc\MvcEvent;
use Zend\Mvc\Router\RouteMatch;
use GearBaseTest\Assertions\AclAssertTrait;

/**
 * @group MyModule
 * @group MyVeryLongTableNameExample
 * @group Controller
 * @group MyVeryLongTableNameExampleController
 */
class MyVeryLongTableNameExampleControllerTest extends TestCase
{
    use AclAssertTrait;

    public function setUp()
    {
        $this->setApplicationConfig(
            include \GearBase\Module::getProjectFolder().'/config/application.config.php'
        );
        parent::setUp();

        $this->myVeryLongTableNameExampleService = $this->prophesize('MyModule\Custom\CustomNamespace\MyVeryLongTableNameExampleService');
        $this->myVeryLongTableNameExampleForm = $this->prophesize('MyModule\Custom\CustomNamespace\MyVeryLongTableNameExampleForm');
        $this->myVeryLongTableNameExampleSearchForm = $this->prophesize('MyModule\Custom\CustomNamespace\MyVeryLongTableNameExampleSearchForm');
        $this->imageService = $this->prophesize('GearImage\Service\ImageService');

        $this->controller = new MyVeryLongTableNameExampleController(
            $this->myVeryLongTableNameExampleService->reveal(),
            $this->myVeryLongTableNameExampleForm->reveal(),
            $this->myVeryLongTableNameExampleSearchForm->reveal(),
            $this->imageService->reveal()
        );

        $this->request    = new Request();
        $this->routeMatch = new RouteMatch(array('controller' => 'MyVeryLongTableNameExampleController'));
        $this->event      = new MvcEvent();

        $this->event->setRouteMatch($this->routeMatch);
        $this->controller->setEvent($this->event);

        $requestPlugin = new \GearBase\Controller\Plugin\RequestPlugin();
        $this->controller->getPluginManager()->setService('getRequestPlugin', $requestPlugin);

        $this->url = $this->prophesize('Zend\Mvc\Controller\Plugin\Url');
        $this->controller->getPluginManager()->setService('url', $this->url->reveal());

        $this->appendUploadImage = $this->prophesize('GearImage\Controller\Plugin\ImageControllerPlugin');
        $this->controller->getPluginManager()->setService('appendUploadImagePlugin', $this->appendUploadImage->reveal());

        $this->schema = (new \MyModule\Module())->getLocation().'/../schema/module.json';
    }

    protected function tearDown()
    {
        $refl = new \ReflectionObject($this);
        foreach ($refl->getProperties() as $prop) {
            if (!$prop->isStatic() && 0 !== strpos($prop->getDeclaringClass()->getName(), 'PHPUnit_')) {
                $prop->setAccessible(true);
                $prop->setValue($this, null);
            }
        }
    }

    /**
     * @group controller.create
     */
    public function testEnterCreatePage()
    {
        $this->assertAcl(
            $this->schema,
            'MyModule',
            'MyVeryLongTableNameExampleController',
            'Custom\CustomNamespace',
            'Create'
        );

        $this->routeMatch->setParam('action', 'create');

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }

    /**
     * @group controller.create
     */
    public function testSendPostToCreatePageRedirectToGet()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::CREATE)->willReturn(MyVeryLongTableNameExampleController::CREATE);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'create');
        $this->request->setMethod('POST');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(303, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.create
     */
    public function testSendPostToCreateShowValidation()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::CREATE)->willReturn(MyVeryLongTableNameExampleController::CREATE);
        $this->url->setController($this->controller)->shouldBeCalled();

        $prg = $this->prophesize('Zend\Mvc\Controller\Plugin\PostRedirectGet');
        $prg->setController($this->controller)->shouldBeCalled();
        $prg->__invoke('my-module/my-very-long-table-name-example/create', true)->willReturn([***REMOVED***);

        $this->controller->getPluginManager()->setService('postredirectget', $prg->reveal());

        $this->routeMatch->setParam('action', 'create');
        $this->request->setMethod('POST');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }
    /**
     * @group controller.create
     */
    public function testCreateSuccessful()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::CREATE)->willReturn(MyVeryLongTableNameExampleController::CREATE);
        $this->url->fromRoute("my-module/my-very-long-table-name-example/edit", ["id" => 31, "success" => 1***REMOVED***, [***REMOVED***, false)
          ->willReturn(MyVeryLongTableNameExampleController::EDIT.'/31/1');

        $this->url->setController($this->controller)->shouldBeCalled();

        $data = array(
        );

        $this->prg = $this->prophesize('Zend\Mvc\Controller\Plugin\PostRedirectGet');
        $this->prg->setController($this->controller)->shouldBeCalled();

        $this->prg->__invoke('my-module/my-very-long-table-name-example/create', true)->willReturn($data);

        $this->controller->getPluginManager()->setService('postredirectget', $this->prg->reveal());

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');
        $this->entity->getIdMyVeryLongTableNameExample()->willReturn(31)->shouldBeCalled();

        $this->myVeryLongTableNameExampleForm->setData($data)->shouldBeCalled();
        $this->myVeryLongTableNameExampleForm->isValid()->willReturn(true)->shouldBeCalled();
        $this->myVeryLongTableNameExampleForm->getData()->willReturn($data)->shouldBeCalled();
        $this->myVeryLongTableNameExampleService->create($data)->willReturn($this->entity)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'create');
        $this->request->setMethod('POST');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.edit
     */
    public function testWhenEditDisplaySuccessful()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'edit');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.edit
     */
    public function testWhenEditRedirectWithInvalidIdToListing()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->myVeryLongTableNameExampleService->selectById(6000)->willReturn(null);

        $this->routeMatch->setParam('action', 'edit');
        $this->routeMatch->setParam('id', 6000);
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.edit
     */
    public function testDisplayEditSuccessful()
    {
        $this->assertAcl(
            $this->schema,
            'MyModule',
            'MyVeryLongTableNameExampleController',
            'Custom\CustomNamespace',
            'Edit'
        );

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');

        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity);

        $this->routeMatch->setParam('action', 'edit');
        $this->routeMatch->setParam('id', 31);

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }

    /**
     * @group controller.edit
     */
    public function testWhenListRedirectSuccessfulPRGWithValidId()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::EDIT, ['id' => 31***REMOVED***)->willReturn(MyVeryLongTableNameExampleController::EDIT);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');

        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity);

        $this->routeMatch->setParam('action', 'edit');
        $this->routeMatch->setParam('id', 31);

        $this->request->setMethod('POST');

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(303, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.edit
     */
    public function testWhenListRedirectSuccessfulPRGWithValidIdReturnValidation()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::EDIT, ['id' => 31***REMOVED***)->willReturn(MyVeryLongTableNameExampleController::EDIT.'/31');
        $this->url->setController($this->controller)->shouldBeCalled();

        $prg = $this->prophesize('Zend\Mvc\Controller\Plugin\PostRedirectGet');
        $prg->setController($this->controller)->shouldBeCalled();
        $prg->__invoke('my-module/my-very-long-table-name-example/edit/31', true)->willReturn([***REMOVED***);

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');

        $this->controller->getPluginManager()->setService('postredirectget', $prg->reveal());

        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity);

        $this->routeMatch->setParam('action', 'edit');
        $this->routeMatch->setParam('id', 31);

        $this->request->setMethod('POST');

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }

    /**
     * @group controller.edit
     */
    public function testEditSuccessfull()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::EDIT, ['id' => 31***REMOVED***)->willReturn(MyVeryLongTableNameExampleController::EDIT);
        $this->url->fromRoute("my-module/my-very-long-table-name-example/edit", ["id" => 31, "success" => 1***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::EDIT.'/31/1');
        $this->url->setController($this->controller)->shouldBeCalled();

        $data = array(
        );

        $this->prg = $this->prophesize('Zend\Mvc\Controller\Plugin\PostRedirectGet');
        $this->prg->setController($this->controller)->shouldBeCalled();

        $this->prg->__invoke('my-module/my-very-long-table-name-example/edit', true)->willReturn($data);

        $this->controller->getPluginManager()->setService('postredirectget', $this->prg->reveal());

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');
        $this->entity->getIdMyVeryLongTableNameExample()->willReturn(31)->shouldBeCalled();

        $this->myVeryLongTableNameExampleForm->setData($data)->shouldBeCalled();
        $this->myVeryLongTableNameExampleForm->isValid()->willReturn(true)->shouldBeCalled();
        $this->myVeryLongTableNameExampleForm->getData()->willReturn($data)->shouldBeCalled();
        $this->myVeryLongTableNameExampleService->update(31, $data)->willReturn($this->entity)->shouldBeCalled();
        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity);

        $this->routeMatch->setParam('action', 'edit');
        $this->routeMatch->setParam('id', 31);

        $this->request->setMethod('POST');

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.list
     */
    public function testWhenListDisplaySuccessful()
    {
        $this->assertAcl(
            $this->schema,
            'MyModule',
            'MyVeryLongTableNameExampleController',
            'Custom\CustomNamespace',
            'List'
        );

        $this->myVeryLongTableNameExampleService->selectAll()->willReturn([***REMOVED***)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'list');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }

    /**
     * @group controller.view
     */
    public function testWhenViewDisplaySuccessfulWithValidId()
    {
        $this->assertAcl(
            $this->schema,
            'MyModule',
            'MyVeryLongTableNameExampleController',
            'Custom\CustomNamespace',
            'View'
        );

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');
        //$this->entity->getIdMyVeryLongTableNameExample()->willReturn(31)->shouldBeCalled();

        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity->reveal());
        $this->myVeryLongTableNameExampleService->extract($this->entity->reveal())->willReturn([***REMOVED***);

        $this->routeMatch->setParam('action', 'view');
        $this->routeMatch->setParam('id', 31);

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }

    /**
     * @group controller.view
     */
    public function testViewSucessfullAndRedirectToListWithFailNotFound()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->myVeryLongTableNameExampleService->selectById(6000)->willReturn(null);

        $this->routeMatch->setParam('action', 'view');
        $this->routeMatch->setParam('id', 6000);

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.view
     */
    public function testWhenViewDisplaySuccessful()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'view');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.delete
     */
    public function testDeleteSucessfullAndRedirectToListWithFailNotFound()
    {
        $this->assertAcl(
            $this->schema,
            'MyModule',
            'MyVeryLongTableNameExampleController',
            'Custom\CustomNamespace',
            'Delete'
        );

        $this->myVeryLongTableNameExampleService->delete(6000)->willReturn(['success' => false, 'error' => 'EntityNotFound'***REMOVED***);

        $this->routeMatch->setParam('action', 'delete');
        $this->routeMatch->setParam('id', 6000);

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\JsonModel', $result);
    }

    /**
     * @group controller.delete
     */
    public function testDeleteSucessfullAndRedirectToListWithSuccessful()
    {
        $this->myVeryLongTableNameExampleService->delete(6000)->willReturn(['success' => true***REMOVED***);

        $this->routeMatch->setParam('action', 'delete');
        $this->routeMatch->setParam('id', 6000);

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\JsonModel', $result);
    }

    /**
     * @group controller.delete
     */
    public function testWhenDeleteDisplaySuccessful()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'delete');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.upload-image
     */
    public function testAccessUploadImageWithoutIdReturnToList()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'upload-image');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.upload-image
     */
    public function testAccessUploadImageWithInvalidIdReturnToList()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::LISTS, [***REMOVED***, [***REMOVED***, false)->willReturn(MyVeryLongTableNameExampleController::LISTS);
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->myVeryLongTableNameExampleService->selectById(6000)->willReturn(null)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'upload-image');
        $this->routeMatch->setParam('id', 6000);

        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(302, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.upload-image
     */
    public function testPostUploadImageReturnPRGPlugin()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::IMAGE, ['id' => 31***REMOVED***)->willReturn(MyVeryLongTableNameExampleController::IMAGE.'/31');
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');

        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity)->shouldBeCalled();

        $this->routeMatch->setParam('action', 'upload-image');
        $this->routeMatch->setParam('id', 31);
        $this->request->setMethod('POST');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();
        $this->assertEquals(303, $response->getStatusCode());
        $this->assertInstanceOf('Zend\Http\PhpEnvironment\Response', $result);
    }

    /**
     * @group controller.upload-image
     */
    public function testPostUploadImageProcessSuccess()
    {
        $this->url->fromRoute(MyVeryLongTableNameExampleController::IMAGE, ['id' => 31***REMOVED***)->willReturn(MyVeryLongTableNameExampleController::IMAGE.'/31');
        $this->url->setController($this->controller)->shouldBeCalled();

        $this->entity = $this->prophesize('MyModule\Entity\MyVeryLongTableNameExample');

        $this->myVeryLongTableNameExampleService->selectById(31)->willReturn($this->entity)->shouldBeCalled();

        $this->imageService->updateImages('my-very-long-table-name-example', 31)->willReturn(true)->shouldBeCalled();
        $this->imageService->updateImageInfo([***REMOVED***)->willReturn(true)->shouldBeCalled();
        $this->imageService->clearCache()->shouldBeCalled();

        $prg = $this->prophesize('Zend\Mvc\Controller\Plugin\PostRedirectGet');
        $prg->setController($this->controller)->shouldBeCalled();
        $prg->__invoke('my-module/my-very-long-table-name-example/upload-image/31', true)->willReturn([***REMOVED***);

        $this->controller->getPluginManager()->setService('postredirectget', $prg->reveal());

        $this->routeMatch->setParam('action', 'upload-image');
        $this->routeMatch->setParam('id', 31);

        $this->request->setMethod('POST');
        $result = $this->controller->dispatch($this->request);
        $response = $this->controller->getResponse();

        $this->assertEquals(200, $response->getStatusCode());
        $this->assertInstanceOf('Zend\View\Model\ViewModel', $result);
    }
}
