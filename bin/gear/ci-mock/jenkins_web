#!groovy
@Library('gear-jenkins-library') _

pipeline {
    agent any
    parameters {
        string(name: 'increment', defaultValue: '--hotfix', description: 'What type of increment should be?')
        booleanParam(name: 'publish', defaultValue: false, description: 'Should be published?')
    }
    stages {
        stage('Prepare') {
            steps {
                notifyBuild()
                checkout scm
                sh 'script/deploy-testing.sh'
                sh '/usr/bin/ant prepare'
                sh '/usr/bin/ant parallel-lint'
            }
        }
        stage('Quality') {
            steps {
                sh '/usr/bin/ant phpcs-ci phpmd-ci phpcpd-ci jshint-ci'
            }
        }
        stage('Unit PHP') {
            post {
                failure {
                    postAction()
                }
            }
            steps {
                sh '/usr/bin/ant phpunit-ci'
            }
        }
        stage('Unit JS') {
            post {
                failure {
                    postKarma()
                    postAction()
                }
            }
            steps {
                sh '/usr/bin/ant karma'
            }
        }
        stage('Integration') {
            post {
                failure {
                    postProtractor()
                    postKarma()
                    postAction()
                }
            }
            steps {
                sh '/usr/bin/ant protractor'
            }
        }
        stage('Report') {
            steps {
                postKarma()
                postProtractor()
                postAction()
            }
        }
    }
    post {
        always {
            notifyBuild(currentBuild.result)
            sh 'sudo chmod -R 777 data'
            deleteDir() /* clean up our workspace */
        }
    }
}