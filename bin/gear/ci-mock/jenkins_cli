#!groovy
@Library('gear-jenkins-library') _

pipeline {
    agent any
    stages {
        stage('Prepare') {
            steps {
                notifyBuild()
                checkout scm
                sh 'script/deploy-testing.sh'
                sh '/usr/bin/ant prepare'
                sh '/usr/bin/ant parallel-lint'
            }
        }
        stage('Quality') {
            steps {
                sh '/usr/bin/ant phpcs-ci phpmd-ci phpcpd-ci'
            }
        }
        stage('Unit PHP') {
            post {
                failure {
                    postAction()
                }
            }
            steps {
                sh '/usr/bin/ant phpunit-ci'
            }
        }
        stage('Report') {
            steps {
                postAction()
            }
        }
    }
    post {
        always {
            notifyBuild(currentBuild.result)
            deleteDir() /* clean up our workspace */
        }
    }
}