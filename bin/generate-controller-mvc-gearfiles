#!/usr/bin/env php
<?php


chdir(dirname(__DIR__));

// Decline static file requests back to the PHP built-in webserver
if (php_sapi_name() === 'cli-server') {
    $path = realpath(__DIR__ . parse_url($_SERVER['REQUEST_URI'***REMOVED***, PHP_URL_PATH));
    if (__FILE__ !== $path && is_file($path)) {
        return false;
    }
    unset($path);
}

require __DIR__.'/generate-functions';

$string = new GearBase\Util\String\StringService();
$column = new Gear\Integration\Util\Columns\Columns();
$names = new Gear\Integration\Util\ResolveNames\ResolveNames($string);

$location = new Gear\Integration\Util\Location\Location();
$persist = new Gear\Integration\Util\Persist\Persist($location);

$arrayService = new Gear\Util\Vector\ArrayService();
    
$migrationFile = new Gear\Integration\Component\MigrationFile\MigrationFile(
    $persist,
    $string,
    $arrayService    
);

$gearfile = new Gear\Integration\Component\GearFile\GearFile(
    $persist,
    $string
);
        
$testFile = new Gear\Integration\Component\TestFile\TestFile($persist, $string);

$superTestFile = new Gear\Integration\Component\SuperTestFile\SuperTestFile($persist, $string);
 
$controllerGenerator = new Gear\Integration\Suite\ControllerMvc\ControllerMvcGenerator\ControllerMvcGenerator(
    $gearfile, 
    $testFile, 
    $names, 
    $column
);

$controllerSuite = new Gear\Integration\Suite\ControllerMvc\ControllerMvcSuite\ControllerMvcSuite($controllerGenerator, $superTestFile);


//columns
$controllerSuite->runControllerMvcSuite(
    'controller-mvc',
    [
        'mvc-basic',
    ***REMOVED***,    
    ['all'***REMOVED***,
    [null***REMOVED***,
    [null, 'upload_image'***REMOVED***
);
