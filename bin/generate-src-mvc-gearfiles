#!/usr/bin/env php
<?php


chdir(dirname(__DIR__));

// Decline static file requests back to the PHP built-in webserver
if (php_sapi_name() === 'cli-server') {
    $path = realpath(__DIR__ . parse_url($_SERVER['REQUEST_URI'***REMOVED***, PHP_URL_PATH));
    if (__FILE__ !== $path && is_file($path)) {
        return false;
    }
    unset($path);
}

require __DIR__.'/generate-functions';
require __DIR__.'/generate-columns';


function MvcDependency()
{
    return [
        'Entity' => null,
        'Fixture' => ['Entity'***REMOVED***,
        'Repository' => ['Entity'***REMOVED***,
        'Service' => ['Entity', 'Repository'***REMOVED***,
        'Filter' => ['Entity'***REMOVED***,
        'Form' => ['Filter', 'Entity'***REMOVED***,
        'SearchForm' => ['Entity'***REMOVED***,
        'Controller' => ['Entity', 'Fixture', 'Repository', 'Service', 'Filter', 'Form', 'SearchForm'***REMOVED***
    ***REMOVED***;
}

function runSrcMvcSuite($types, $suiteColumns, $suiteUserTypes, $suiteConstraints, $suiteTables)
{
    
    $string = new GearBase\Util\String\StringService();
    
    $superType = [***REMOVED***;
    
    foreach ($types as $type) {
        
        
        $srcMvcMinor = new Gear\Integration\Suite\SrcMvc\SrcMvcMinorSuite($type);
    
        $superType[***REMOVED*** = generateSrcMvc($srcMvcMinor);
    }
}


function generateSrcMvc(Gear\Integration\Suite\SrcMvc\SrcMvcMinorSuite $srcMvcMinor) 
{
    

    createSrcMvcGearfile($srcMvcMinor);
    
    if ($srcMvcMinor->getType() == 'Entity') {
        createSrcMvcMigrationFile($srcMvcMinor);
    }
    
    createSrcMvcTestFile($srcMvcMinor);
}

function createSrcMvcMigrationFile(Gear\Integration\Suite\SrcMvc\SrcMvcMinorSuite $srcMvcMinor)
{
    $resolveNames = createResolveNames();
    
    $i = 0;
    
    $migrationsTables = [***REMOVED***;
    
    foreach ($columns as $column) {
        foreach ($userTypes as $usertype) {
            foreach ($constraints as $constraint) {
                foreach ($tables as $table) {
                
                    
                    $tableName = sprintf(
                        '%s%s',
                        'SrcMvc',
                        implode('', $resolveNames->createTableAliase($column, $usertype, $constraint, $table))
                    );
                    
                    $srcMvcMinor->setTableName($tableName);
                    
                    
                    
                    /**
                    $srcMvcSuite = new Gear\Integration\Suite\SrcMvc\SrcMvcMinorSuite(
                        'src-mvc', 
                        $usertype, 
                        $column, 
                        $constraint, 
                        $table,
                        $type
                    );
                    */
                    
                    //$migrationsTables[$srcMvcSuite->getTableName()***REMOVED*** = createSrcMvcMigrationFile($srcMvcSuite);
                }
            }
        }
    }
    
    
}

function createSrcMvcGearFile(Gear\Integration\Suite\SrcMvc\SrcMvcMinorSuite $srcMvcMinor)
{

}
function createSrcMvcTestFile(Gear\Integration\Suite\SrcMvc\SrcMvcMinorSuite $srcMvcMinor)
{
    
}


runSrcMvcSuite(
    ['Service', 'Repository', 'Form', 'Filter', 'SearchForm', 'Entity', 'Fixture'***REMOVED***,
    [
        'complete',
        'basic',
    ***REMOVED***,    
    ['all', 'low-strict', 'strict'***REMOVED***,
    [null, ['unique'***REMOVED***, ['nullable'***REMOVED***, ['unique', 'nullable'***REMOVED******REMOVED***,
    [null, 'upload_image'***REMOVED***        
);



