#!/usr/bin/env php
<?php


chdir(dirname(__DIR__));

// Decline static file requests back to the PHP built-in webserver
if (php_sapi_name() === 'cli-server') {
    $path = realpath(__DIR__ . parse_url($_SERVER['REQUEST_URI'***REMOVED***, PHP_URL_PATH));
    if (__FILE__ !== $path && is_file($path)) {
        return false;
    }
    unset($path);
}


// Setup autoloading
require __DIR__.'/generate-functions';

$data = [***REMOVED***;

if (in_array($type, ['Service', 'Repository'***REMOVED***)) {

    $implements = [***REMOVED***;
    $implements[***REMOVED*** = [
        'name' => '%sImplementable%s%s',
        'type' => 'Interface'
    ***REMOVED***;

    $data = array_merge($data, generateGearfiles($implements, ['0' => ''***REMOVED***, $type, $repeat, $numberMap));

}
$invokables = [***REMOVED***;

$invokables[***REMOVED*** = [
    'name' => '%sExtendable%s%s',
    'type' => $type
***REMOVED***;

$invokables[***REMOVED*** = [
    'name' => '%s%s%s',
    'type' => $type
***REMOVED***;

$invokables[***REMOVED*** = [
    'name' => '%sNamespace%s%s',
    'type' => $type,
    'namespace' => '%s'
***REMOVED***;

//implements
if (in_array($type, ['Service', 'Repository'***REMOVED***)) {

    $invokables[***REMOVED*** = [
        'name' => '%sImplements%s%s',
        'implements' => createMultiplesInterfaces($type, 1, $numberMap),
        'type' => $type
    ***REMOVED***;

    $invokables[***REMOVED*** = [
        'name' => '%sImplementsMany%s%s',
        'implements' => createMultiplesInterfaces($type, $repeat, $numberMap),
        'type' => $type
    ***REMOVED***;
}



$invokables[***REMOVED*** = [
    'name' => '%sExtends%s%s',
    'extends' => '%s\%sExtendable%s%s',
    'type' => $type
***REMOVED***;


$invokables[***REMOVED*** = [
    'name' => '%sFull%s%s',
    'extends' => '%s\%sExtendable%s%s',
    'namespace' => '%s',
    'implements' => createMultiplesInterfaces($type, $repeat, $numberMap),
    'type' => $type
***REMOVED***;

$config = ['invokables', 'factories'***REMOVED***;

if (in_array($type, ['Service', 'Repository'***REMOVED***)) {
    $config[***REMOVED*** = 'abstract';
}


$data = array_merge($data, generateGearfiles($invokables, $config, $type, $repeat, $numberMap));

$dependencies = [***REMOVED***;

//to max dependency based on repeat number. interfaces too.
if (in_array($type, ['Service', 'Repository'***REMOVED***)) {

    $dependencies[***REMOVED*** = [
        'name' => '%sDependency%s%s',
        'type' => $type,
        'dependency' => '%s\%sInvokables%s'
    ***REMOVED***;

    $dependencies[***REMOVED*** = [
        'name' => '%sDependencies%s%s',
        'type' => $type,
        'dependency' => ['%s\%sInvokables%s', '%s\%sExtendsInvokables%s', '%s\%sImplementsInvokables%s'***REMOVED*** 
    ***REMOVED***;


    $dependencies[***REMOVED*** = [
        'name' => '%sDependencyFull%s%s',
        'extends' => '%s\%sExtendable%s%s',
        'namespace' => '%s',
        'implements' => createMultiplesInterfaces($type, 1, $numberMap),
        'type' => $type,
        'dependency' => '%s\%sInvokables%s'
    ***REMOVED***;

    $dependencies[***REMOVED*** = [
        'name' => '%sDependenciesFull%s%s',
        'extends' => '%s\%sExtendable%s%s',
        'namespace' => '%s',
        'implements' => createMultiplesInterfaces($type, $repeat, $numberMap),
        'type' => $type,
        'dependency' => ['%s\%sInvokables%s', '%s\%sExtendsInvokables%s', '%s\%sImplementsInvokables%s'***REMOVED***
    ***REMOVED***;

    $config = ['factories', 'abstract'***REMOVED***;


    $data = array_merge($data, generateGearfiles($dependencies, $config, $type, $repeat, $numberMap));

}

output($data, $type);

return;
