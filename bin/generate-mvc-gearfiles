#!/usr/bin/env php
<?php


chdir(dirname(__DIR__));

// Decline static file requests back to the PHP built-in webserver
if (php_sapi_name() === 'cli-server') {
    $path = realpath(__DIR__ . parse_url($_SERVER['REQUEST_URI'***REMOVED***, PHP_URL_PATH));
    if (__FILE__ !== $path && is_file($path)) {
        return false;
    }
    unset($path);
}

require __DIR__.'/generate-functions';



function getDateColumns($constraints)
{

}

function getVarcharColumns($constraints)
{

}

function getTextColumn($constraints)
{

}

function getNumericColumns($constraints)
{
    
}

function getAllColumns($constraints)
{
    return array_merge(
        getTextColumns($constraints),
        getNumericColumns($constraints),
        getDateColumns($constraints),
        getVarcharColumns($constraints)
    );
}

function listAvailableMvc()
{
    $availableTypes = ['column', 'usertype', 'constraints', 'table'***REMOVED***;


    $availableSubtypes = [
        'column' => [
            'date',
            'varchar',
            'text',
            'numeric'
        ***REMOVED***,
        'constraints' => [
            '',
            'not-null',
            'null',
            'unique'
        ***REMOVED***,
        'table' => [
            '',
            'upload-image'
        ***REMOVED***,
        'usertype' => ['all', 'low-strict', 'strict'***REMOVED***,
    ***REMOVED***;


    $data = [***REMOVED***;

    foreach ($availableSubtypes['column'***REMOVED*** as $columnName) {

        foreach ($availableSubtypes['constraints'***REMOVED*** as $constraint) {
        
            foreach ($availableSubtypes['table'***REMOVED*** as $table) {
            
                foreach ($availableSubtypes['usertype'***REMOVED*** as $usertype) {
            
                    $string = $columnName;
                    
                    if (strlen($constraint)>0) {
                        $string .= '-'.$constraint;
                    }
                    
                    if (strlen($table)>0) {
                        $string .= '-'.$table;
                    }
                    
                    if (strlen($usertype)>0) {
                        $string .= '-'.$usertype;
                    }
                        
                    $data[***REMOVED*** = $string;
                    
                }
                
            }
            
        }
    }

    foreach ($data as $item) {
        echo $item."\n";
    }
    echo "Total ".count($data)."\n";

}


function generateMigration($date, $name)
{
    $arrayService = new Gear\Util\Vector\ArrayService();
    
    $template = file_get_contents(__DIR__.'/migration-template.php');
    
    $tables = '    const TABLES = '.$arrayService->varExport54(['test' => true***REMOVED***, '    ').';';
    
    
    $template = preg_replace('#    const TABLES = \[\***REMOVED***;#', $tables, $template);
    

    $migrationName = getMigrationName($date, $name);
    
    file_put_contents(__DIR__.'/'.$migrationName, $template);
    //var_dump($template); 
}

function getMigrationName($date, $name)
{
    return sprintf('%s_%s.php', $date, $name);
}

function updateMigration($date, $name)
{
    $migrationName = getMigrationName($date, $name);

    $template = file_get_contents(__DIR__.'/test.sh');
    
    $text = sprintf('migration="%s"', $migrationName);
    
    $newFile = preg_replace('#migration="[0-9a-z_***REMOVED****\.php"#', $text, $template);
    
    file_put_contents(__DIR__.'/test.sh', $template);    
}


$name = 'test';
$date = (new DateTime)->format('YmdHis');
    
generateMigration($date, $name);
updateMigration($date, $name);