<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="./src/Gear/Table" file="UploadImage.php" realpath="/var/www/gear-package/gear/src/Gear/Table/UploadImage.php" size="8041" time="2016-03-03T16:21:40+00:00" unixtime="1457022100" sha1="23d980728c83648122172202de41492e8d274637" relative="Gear/Table/UploadImage.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Gear</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Table</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="3"/>
  <line no="4">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Gear</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Service</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">AbstractJsonService</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="5"/>
  <line no="6">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">UploadImage</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">AbstractJsonService</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Gear</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Column</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ImplementsInterface</token>
  </line>
  <line no="7">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="8">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getImplements</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$codeName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="9">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="10">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="11">
    <token name="T_WHITESPACE">            </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Fixture'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="12">
    <token name="T_WHITESPACE">                </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'ImagemFixtureTrait'</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_DOUBLE_ARROW">=&gt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'GearImage\Fixture'</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">            </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">***REMOVED***</token>
  </line>
  <line no="14">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_SQUARE">***REMOVED***</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="15"/>
  <line no="16">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$implements</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$codeName</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">***REMOVED***</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="17"/>
  <line no="18">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="19"/>
  <line no="20">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFixtureUse</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="22">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="23">
    <token name="T_ENCAPSED_AND_WHITESPACE">use GearImage\Fixture as ImagemFixtureTrait;</token>
  </line>
  <line no="24"/>
  <line no="25">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="27"/>
  <line no="28">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFixtureAttribute</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="29">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="30"/>
  <line no="31">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="32">
    <token name="T_ENCAPSED_AND_WHITESPACE">    use ImagemFixtureTrait;</token>
  </line>
  <line no="33"/>
  <line no="34">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="36"/>
  <line no="37">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFunctionalUploadImageTest</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="38">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="41">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function verifyShowImages(FunctionalTester \$I)</token>
  </line>
  <line no="42">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="43">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$I-&gt;amOnPage(</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">UploadImagePage::\$URL.'/'.\$this-&gt;fixture);</token>
  </line>
  <line no="44">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$I-&gt;seeNumberOfElements('.template-download', 3);</token>
  </line>
  <line no="45">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="46"/>
  <line no="47">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="48">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="49"/>
  <line no="50">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFunctionalViewTest</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="54"/>
  <line no="55">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function verifyImages(FunctionalTester \$I)</token>
  </line>
  <line no="56">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="57">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$I-&gt;amOnPage(</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">ViewPage::\$URL.'/'.\$this-&gt;fixture);</token>
  </line>
  <line no="58">
    <token name="T_ENCAPSED_AND_WHITESPACE">        foreach (\$this-&gt;uploadImageFiles as \$image) {</token>
  </line>
  <line no="59">
    <token name="T_ENCAPSED_AND_WHITESPACE">            \$I-&gt;seeElement(</token>
  </line>
  <line no="60">
    <token name="T_ENCAPSED_AND_WHITESPACE">                '//img[@src="'.sprintf(\$image, 'pre').'"***REMOVED***'</token>
  </line>
  <line no="61">
    <token name="T_ENCAPSED_AND_WHITESPACE">            );</token>
  </line>
  <line no="62">
    <token name="T_ENCAPSED_AND_WHITESPACE">        }</token>
  </line>
  <line no="63">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="64"/>
  <line no="65">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="67"/>
  <line no="68">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">makeFixture</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fixtures</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$term</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'upload-image-table'</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$fixtureSuite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="71"/>
  <line no="72">
    <token name="T_WHITESPACE">        </token>
    <token name="T_FOREACH">foreach</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$fixtures</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_AS">as</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fixture</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="73"/>
  <line no="74">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$fixtureFix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">str_replace</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'insert'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$term</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fixture</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="75"/>
  <line no="76">
    <token name="T_WHITESPACE">            </token>
    <token name="T_VARIABLE">$fixtureSuite</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONCAT_EQUAL">.=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="77">
    <token name="T_VARIABLE">$fixtureFix</token>
  </line>
  <line no="78">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">        </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$fixtureSuite</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="82"/>
  <line no="83"/>
  <line no="84">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getControllerUnitTest</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="85">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="86"/>
  <line no="87">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModuleName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModuleName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="89"/>
  <line no="90">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="92"/>
  <line no="93">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="94"/>
  <line no="95">
    <token name="T_ENCAPSED_AND_WHITESPACE">    /**</token>
  </line>
  <line no="96">
    <token name="T_ENCAPSED_AND_WHITESPACE">     * @group UploadImage</token>
  </line>
  <line no="97">
    <token name="T_ENCAPSED_AND_WHITESPACE">     */</token>
  </line>
  <line no="98">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function testAccessUploadImageWithoutIdReturnToList()</token>
  </line>
  <line no="99">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="100">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;mockUser();</token>
  </line>
  <line no="101">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;dispatch('/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image');</token>
  </line>
  <line no="102">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertResponseStatusCode(302);</token>
  </line>
  <line no="103">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertRedirectTo('/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/listar/page//orderBy');</token>
  </line>
  <line no="104">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertModuleName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="105">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Controller\\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="106">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertActionName('upload-image');</token>
  </line>
  <line no="107">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerClass('</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Controller');</token>
  </line>
  <line no="108">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertMatchedRouteName('</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image');</token>
  </line>
  <line no="109">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="110"/>
  <line no="111">
    <token name="T_ENCAPSED_AND_WHITESPACE">    /**</token>
  </line>
  <line no="112">
    <token name="T_ENCAPSED_AND_WHITESPACE">     * @group UploadImage</token>
  </line>
  <line no="113">
    <token name="T_ENCAPSED_AND_WHITESPACE">     */</token>
  </line>
  <line no="114">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function testAccessUploadImageWithInvalidIdReturnToList()</token>
  </line>
  <line no="115">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="116">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;mockUser();</token>
  </line>
  <line no="117">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;dispatch('/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image/6000');</token>
  </line>
  <line no="118">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertResponseStatusCode(302);</token>
  </line>
  <line no="119">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertRedirectTo('/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/listar/page//orderBy');</token>
  </line>
  <line no="120"/>
  <line no="121">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertModuleName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="122">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Controller\\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="123">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertActionName('upload-image');</token>
  </line>
  <line no="124">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerClass('</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Controller');</token>
  </line>
  <line no="125">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertMatchedRouteName('</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image');</token>
  </line>
  <line no="126">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="127"/>
  <line no="128">
    <token name="T_ENCAPSED_AND_WHITESPACE">    /**</token>
  </line>
  <line no="129">
    <token name="T_ENCAPSED_AND_WHITESPACE">     * @depends testCreateSuccess</token>
  </line>
  <line no="130">
    <token name="T_ENCAPSED_AND_WHITESPACE">     * @group UploadImage</token>
  </line>
  <line no="131">
    <token name="T_ENCAPSED_AND_WHITESPACE">     */</token>
  </line>
  <line no="132">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function testPostUploadImageReturnPRGPlugin(\$resultSet)</token>
  </line>
  <line no="133">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="134">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;mockUser();</token>
  </line>
  <line no="135">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;dispatch(</token>
  </line>
  <line no="136">
    <token name="T_ENCAPSED_AND_WHITESPACE">            '/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image/'.\$resultSet-&gt;getId</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">(),</token>
  </line>
  <line no="137">
    <token name="T_ENCAPSED_AND_WHITESPACE">            'POST',</token>
  </line>
  <line no="138">
    <token name="T_ENCAPSED_AND_WHITESPACE">            array()</token>
  </line>
  <line no="139">
    <token name="T_ENCAPSED_AND_WHITESPACE">        );</token>
  </line>
  <line no="140"/>
  <line no="141">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertResponseStatusCode(303);</token>
  </line>
  <line no="142">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertRedirectTo(</token>
  </line>
  <line no="143">
    <token name="T_ENCAPSED_AND_WHITESPACE">            '/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image/'.\$resultSet-&gt;getId</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">()</token>
  </line>
  <line no="144">
    <token name="T_ENCAPSED_AND_WHITESPACE">        );</token>
  </line>
  <line no="145"/>
  <line no="146">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertModuleName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="147">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Controller\\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="148">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertActionName('upload-image');</token>
  </line>
  <line no="149">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerClass('</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Controller');</token>
  </line>
  <line no="150">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertMatchedRouteName('</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image');</token>
  </line>
  <line no="151">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="152"/>
  <line no="153">
    <token name="T_ENCAPSED_AND_WHITESPACE">    /**</token>
  </line>
  <line no="154">
    <token name="T_ENCAPSED_AND_WHITESPACE">     * @depends testCreateSuccess</token>
  </line>
  <line no="155">
    <token name="T_ENCAPSED_AND_WHITESPACE">     * @group UploadImage</token>
  </line>
  <line no="156">
    <token name="T_ENCAPSED_AND_WHITESPACE">     */</token>
  </line>
  <line no="157">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function testPostUploadImageProcessSuccess(\$resultSet)</token>
  </line>
  <line no="158">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="159"/>
  <line no="160">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;mockUser();</token>
  </line>
  <line no="161">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;mockPluginPostRedirectGet(array());</token>
  </line>
  <line no="162">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;dispatch(</token>
  </line>
  <line no="163">
    <token name="T_ENCAPSED_AND_WHITESPACE">            '/</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image/'.\$resultSet-&gt;getId</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">(),</token>
  </line>
  <line no="164">
    <token name="T_ENCAPSED_AND_WHITESPACE">            'POST',</token>
  </line>
  <line no="165">
    <token name="T_ENCAPSED_AND_WHITESPACE">            array()</token>
  </line>
  <line no="166">
    <token name="T_ENCAPSED_AND_WHITESPACE">        );</token>
  </line>
  <line no="167"/>
  <line no="168">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertResponseStatusCode(200);</token>
  </line>
  <line no="169">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertModuleName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="170">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerName('</token>
    <token name="T_VARIABLE">$moduleClass</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Controller\\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">');</token>
  </line>
  <line no="171">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertActionName('upload-image');</token>
  </line>
  <line no="172">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertControllerClass('</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">Controller');</token>
  </line>
  <line no="173">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;assertMatchedRouteName('</token>
    <token name="T_VARIABLE">$moduleUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">/upload-image');</token>
  </line>
  <line no="174">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="175"/>
  <line no="176">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="177">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="178"/>
  <line no="179">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getAcceptanceViewTest</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="181">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="182">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="183"/>
  <line no="184">
    <token name="T_ENCAPSED_AND_WHITESPACE">    public function verifyImages(AcceptanceTester \$I)</token>
  </line>
  <line no="185">
    <token name="T_ENCAPSED_AND_WHITESPACE">    {</token>
  </line>
  <line no="186">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$I-&gt;amOnPage(</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">ViewPage::\$URL.'/'.\$this-&gt;fixture);</token>
  </line>
  <line no="187">
    <token name="T_ENCAPSED_AND_WHITESPACE">        foreach (\$this-&gt;uploadImageFiles as \$image) {</token>
  </line>
  <line no="188">
    <token name="T_ENCAPSED_AND_WHITESPACE">            \$I-&gt;seeElement(</token>
  </line>
  <line no="189">
    <token name="T_ENCAPSED_AND_WHITESPACE">                '//img[@src="'.sprintf(\$image, 'pre').'"***REMOVED***'</token>
  </line>
  <line no="190">
    <token name="T_ENCAPSED_AND_WHITESPACE">            );</token>
  </line>
  <line no="191">
    <token name="T_ENCAPSED_AND_WHITESPACE">        }</token>
  </line>
  <line no="192">
    <token name="T_ENCAPSED_AND_WHITESPACE">    }</token>
  </line>
  <line no="193"/>
  <line no="194">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="195">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="196"/>
  <line no="197">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="198">
    <token name="T_DOC_COMMENT">     * USADO NOS TESTES DE ACEITACAO</token>
  </line>
  <line no="199">
    <token name="T_DOC_COMMENT">     * @param unknown $table</token>
  </line>
  <line no="200">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="201">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="202">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getPosFixture</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="203">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="204">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="205">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="206">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModuleName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="207"/>
  <line no="208"/>
  <line no="209">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="210"/>
  <line no="211">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$this-&gt;uploadImageFiles = \$I-&gt;setUploadImageTableFixture(</token>
  </line>
  <line no="212">
    <token name="T_ENCAPSED_AND_WHITESPACE">            '</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">',</token>
  </line>
  <line no="213">
    <token name="T_ENCAPSED_AND_WHITESPACE">            '</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Entity\\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableClass</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">',</token>
  </line>
  <line no="214">
    <token name="T_ENCAPSED_AND_WHITESPACE">            \$this-&gt;fixture,</token>
  </line>
  <line no="215">
    <token name="T_ENCAPSED_AND_WHITESPACE">            '</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Entity\UploadImage'</token>
  </line>
  <line no="216">
    <token name="T_ENCAPSED_AND_WHITESPACE">        );</token>
  </line>
  <line no="217"/>
  <line no="218">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="219">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="220"/>
  <line no="221">
    <token name="T_WHITESPACE">    </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="222">
    <token name="T_DOC_COMMENT">     * USADO NAS FIXTURES</token>
  </line>
  <line no="223">
    <token name="T_DOC_COMMENT">     * @param unknown $table</token>
  </line>
  <line no="224">
    <token name="T_DOC_COMMENT">     * @return string</token>
  </line>
  <line no="225">
    <token name="T_DOC_COMMENT">     */</token>
  </line>
  <line no="226">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFixtureLoad</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="227">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="228"/>
  <line no="229">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModuleName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="230">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'var-lenght'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="231">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="232">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$url</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$table</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="233"/>
  <line no="234">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="235">
    <token name="T_ENCAPSED_AND_WHITESPACE">            \$this-&gt;createUploadImageTableFixture(</token>
  </line>
  <line no="236">
    <token name="T_ENCAPSED_AND_WHITESPACE">                '</token>
    <token name="T_VARIABLE">$url</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">',</token>
  </line>
  <line no="237">
    <token name="T_ENCAPSED_AND_WHITESPACE">                \$</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$var</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">,</token>
  </line>
  <line no="238">
    <token name="T_ENCAPSED_AND_WHITESPACE">                \$imageEntity,</token>
  </line>
  <line no="239">
    <token name="T_ENCAPSED_AND_WHITESPACE">                \$userReferenced,</token>
  </line>
  <line no="240">
    <token name="T_ENCAPSED_AND_WHITESPACE">                new \\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$module</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Module()</token>
  </line>
  <line no="241">
    <token name="T_ENCAPSED_AND_WHITESPACE">            );</token>
  </line>
  <line no="242"/>
  <line no="243">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="244">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="245"/>
  <line no="246">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getFixturePreLoad</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="247">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="248">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="249">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$imageEntity = '\\</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModule</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getModuleName</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">\Entity\UploadImage';</token>
  </line>
  <line no="250"/>
  <line no="251">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="252">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="253"/>
  <line no="254">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getControllerViewView</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="255">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="256">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="257">
    <token name="T_ENCAPSED_AND_WHITESPACE">                    'images' =&gt; \$images,</token>
  </line>
  <line no="258">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="259">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="260"/>
  <line no="261">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getControllerViewQuery</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="262">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="263"/>
  <line no="264">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'url'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="265">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'class'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="266"/>
  <line no="267">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableId</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'var-lenght'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="268"/>
  <line no="269">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="270">
    <token name="T_ENCAPSED_AND_WHITESPACE">        \$images = \$this-&gt;getImagemService()-&gt;query('</token>
    <token name="T_VARIABLE">$tableUrl</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">', array(), \$</token>
    <token name="T_CURLY_OPEN">{</token>
    <token name="T_VARIABLE">$tableId</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">);</token>
  </line>
  <line no="271"/>
  <line no="272">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="273"/>
  <line no="274">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="275"/>
  <line no="276">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getViewView</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="277">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="278">
    <token name="T_WHITESPACE">        </token>
    <token name="T_VARIABLE">$tableLabel</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">str</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'label'</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tableName</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="279">
    <token name="T_WHITESPACE">        </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_START_HEREDOC">&lt;&lt;&lt;EOS</token>
  </line>
  <line no="280">
    <token name="T_ENCAPSED_AND_WHITESPACE">        &lt;?php if (count(\$this-&gt;images) &gt; 0) :?&gt;</token>
  </line>
  <line no="281">
    <token name="T_ENCAPSED_AND_WHITESPACE">        &lt;div class="form-group"&gt;</token>
  </line>
  <line no="282">
    <token name="T_ENCAPSED_AND_WHITESPACE">            &lt;h4&gt;&lt;?php echo \$this-&gt;translate('Images of');?&gt; </token>
    <token name="T_VARIABLE">$tableLabel</token>
    <token name="T_ENCAPSED_AND_WHITESPACE">&lt;/h4&gt;</token>
  </line>
  <line no="283">
    <token name="T_ENCAPSED_AND_WHITESPACE">            &lt;?php foreach (\$this-&gt;images as \$image) :?&gt;</token>
  </line>
  <line no="284">
    <token name="T_ENCAPSED_AND_WHITESPACE">                &lt;a class="fancybox" rel="group" href="&lt;?php echo sprintf(\$image-&gt;getUploadImage(), 'lg');?&gt;"&gt;</token>
  </line>
  <line no="285">
    <token name="T_ENCAPSED_AND_WHITESPACE">                    &lt;img src="&lt;?php echo sprintf(\$image-&gt;getUploadImage(), 'pre');?&gt;" alt="" /&gt;</token>
  </line>
  <line no="286">
    <token name="T_ENCAPSED_AND_WHITESPACE">                &lt;/a&gt;</token>
  </line>
  <line no="287">
    <token name="T_ENCAPSED_AND_WHITESPACE">            &lt;?php endforeach;?&gt;</token>
  </line>
  <line no="288">
    <token name="T_ENCAPSED_AND_WHITESPACE">        &lt;/div&gt;</token>
  </line>
  <line no="289">
    <token name="T_ENCAPSED_AND_WHITESPACE">        &lt;?php endif;?&gt;</token>
  </line>
  <line no="290"/>
  <line no="291">
    <token name="T_END_HEREDOC">EOS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="292"/>
  <line no="293">
    <token name="T_WHITESPACE">    </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="294">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="295"/>
</source>
