<?xml version="1.0" encoding="UTF-8"?>
<crap_result>
  <project></project>
  <timestamp>2015-04-09 12:38:34</timestamp>
  <stats>
    <name>Method Crap Stats</name>
    <methodCount>1643</methodCount>
    <crapMethodCount>48</crapMethodCount>
    <crapLoad>310</crapLoad>
    <totalCrap>6884.41</totalCrap>
    <crapMethodPercent>2.92</crapMethodPercent>
  </stats>
  <methods>
    <method>
      <package></package>
      <className>AcceptanceTestServiceTrait</className>
      <methodName>getAcceptanceTestService</methodName>
      <methodSignature>getAcceptanceTestService()</methodSignature>
      <fullMethod>getAcceptanceTestService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestServiceTrait</className>
      <methodName>setAcceptanceTestService</methodName>
      <methodSignature>setAcceptanceTestService($acceptanceTestService)</methodSignature>
      <fullMethod>setAcceptanceTestService($acceptanceTestService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AclServiceTrait</className>
      <methodName>setAclService</methodName>
      <methodSignature>setAclService($aclService)</methodSignature>
      <fullMethod>setAclService($aclService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AclServiceTrait</className>
      <methodName>getAclService</methodName>
      <methodSignature>getAclService()</methodSignature>
      <fullMethod>getAclService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setModule</methodName>
      <methodSignature>setModule(BasicModuleStructure $module)</methodSignature>
      <fullMethod>setModule(BasicModuleStructure $module)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getModule</methodName>
      <methodSignature>getModule()</methodSignature>
      <fullMethod>getModule()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setStringService</methodName>
      <methodSignature>setStringService(StringService $fileWriter)</methodSignature>
      <fullMethod>setStringService(StringService $fileWriter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getStringService</methodName>
      <methodSignature>getStringService()</methodSignature>
      <fullMethod>getStringService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>str</methodName>
      <methodSignature>str($type, $message)</methodSignature>
      <fullMethod>str($type, $message)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setDirService</methodName>
      <methodSignature>setDirService(DirService $dirWriter)</methodSignature>
      <fullMethod>setDirService(DirService $dirWriter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getDirService</methodName>
      <methodSignature>getDirService()</methodSignature>
      <fullMethod>getDirService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setFileService</methodName>
      <methodSignature>setFileService(FileService $fileWriter)</methodSignature>
      <fullMethod>setFileService(FileService $fileWriter)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getFileService</methodName>
      <methodSignature>getFileService()</methodSignature>
      <fullMethod>getFileService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setClassService</methodName>
      <methodSignature>setClassService(ClassService $fileWriter)</methodSignature>
      <fullMethod>setClassService(ClassService $fileWriter)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getClassService</methodName>
      <methodSignature>getClassService()</methodSignature>
      <fullMethod>getClassService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setConfig</methodName>
      <methodSignature>setConfig(Config $config)</methodSignature>
      <fullMethod>setConfig(Config $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getConfig</methodName>
      <methodSignature>getConfig()</methodSignature>
      <fullMethod>getConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>getIndent</methodName>
      <methodSignature>getIndent($indent, $patters = 4)</methodSignature>
      <fullMethod>getIndent($indent, $patters = 4)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BaseAbstract</className>
      <methodName>powerline</methodName>
      <methodSignature>powerline($indent, $text, $params = array(), $newline = false)</methodSignature>
      <fullMethod>powerline($indent, $text, $params = array(), $newline = false)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildTrait</className>
      <methodName>getBuildService</methodName>
      <methodSignature>getBuildService()</methodSignature>
      <fullMethod>getBuildService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildTrait</className>
      <methodName>setBuildService</methodName>
      <methodSignature>setBuildService(BuildService $buildService)</methodSignature>
      <fullMethod>setBuildService(BuildService $buildService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassServiceTrait</className>
      <methodName>getClassService</methodName>
      <methodSignature>getClassService()</methodSignature>
      <fullMethod>getClassService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassServiceTrait</className>
      <methodName>setClassService</methodName>
      <methodSignature>setClassService(ClassService $classService)</methodSignature>
      <fullMethod>setClassService(ClassService $classService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerServiceTrait</className>
      <methodName>getComposerService</methodName>
      <methodSignature>getComposerService()</methodSignature>
      <fullMethod>getComposerService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerServiceTrait</className>
      <methodName>setComposerService</methodName>
      <methodSignature>setComposerService(ComposerService $composerService)</methodSignature>
      <fullMethod>setComposerService(ComposerService $composerService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigServiceTrait</className>
      <methodName>getConfigService</methodName>
      <methodSignature>getConfigService()</methodSignature>
      <fullMethod>getConfigService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigServiceTrait</className>
      <methodName>setConfigService</methodName>
      <methodSignature>setConfigService($configService)</methodSignature>
      <fullMethod>setConfigService($configService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerServiceTrait</className>
      <methodName>getControllerService</methodName>
      <methodSignature>getControllerService()</methodSignature>
      <fullMethod>getControllerService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerServiceTrait</className>
      <methodName>setControllerService</methodName>
      <methodSignature>setControllerService($controllerService)</methodSignature>
      <fullMethod>setControllerService($controllerService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestServiceTrait</className>
      <methodName>getControllerTestService</methodName>
      <methodSignature>getControllerTestService()</methodSignature>
      <fullMethod>getControllerTestService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestServiceTrait</className>
      <methodName>setControllerTestService</methodName>
      <methodSignature>setControllerTestService($controllerTestService)</methodSignature>
      <fullMethod>setControllerTestService($controllerTestService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployServiceTrait</className>
      <methodName>setDeployService</methodName>
      <methodSignature>setDeployService($deployService)</methodSignature>
      <fullMethod>setDeployService($deployService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployServiceTrait</className>
      <methodName>getDeployService</methodName>
      <methodSignature>getDeployService()</methodSignature>
      <fullMethod>getDeployService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirServiceTrait</className>
      <methodName>getDirService</methodName>
      <methodSignature>getDirService()</methodSignature>
      <fullMethod>getDirService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirServiceTrait</className>
      <methodName>setDirService</methodName>
      <methodSignature>setDirService(DirService $dirService)</methodSignature>
      <fullMethod>setDirService(DirService $dirService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityServiceTrait</className>
      <methodName>getEntityService</methodName>
      <methodSignature>getEntityService()</methodSignature>
      <fullMethod>getEntityService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityServiceTrait</className>
      <methodName>setEntityService</methodName>
      <methodSignature>setEntityService(EntityService $entityService)</methodSignature>
      <fullMethod>setEntityService(EntityService $entityService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestServiceTrait</className>
      <methodName>getEntityTestService</methodName>
      <methodSignature>getEntityTestService()</methodSignature>
      <fullMethod>getEntityTestService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestServiceTrait</className>
      <methodName>setEntityTestService</methodName>
      <methodSignature>setEntityTestService($entityTestService)</methodSignature>
      <fullMethod>setEntityTestService($entityTestService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryServiceTrait</className>
      <methodName>getFactoryService</methodName>
      <methodSignature>getFactoryService()</methodSignature>
      <fullMethod>getFactoryService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryServiceTrait</className>
      <methodName>setFactoryService</methodName>
      <methodSignature>setFactoryService($factoryService)</methodSignature>
      <fullMethod>setFactoryService($factoryService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryTestServiceTrait</className>
      <methodName>getFactoryTestService</methodName>
      <methodSignature>getFactoryTestService()</methodSignature>
      <fullMethod>getFactoryTestService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryTestServiceTrait</className>
      <methodName>setFactoryTestService</methodName>
      <methodSignature>setFactoryTestService($factoryService)</methodSignature>
      <fullMethod>setFactoryTestService($factoryService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileServiceTrait</className>
      <methodName>getFileService</methodName>
      <methodSignature>getFileService()</methodSignature>
      <fullMethod>getFileService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileServiceTrait</className>
      <methodName>setFileService</methodName>
      <methodSignature>setFileService(FileService $fileService)</methodSignature>
      <fullMethod>setFileService(FileService $fileService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterServiceTrait</className>
      <methodName>getFilterService</methodName>
      <methodSignature>getFilterService()</methodSignature>
      <fullMethod>getFilterService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterServiceTrait</className>
      <methodName>setFilterService</methodName>
      <methodSignature>setFilterService($filterService)</methodSignature>
      <fullMethod>setFilterService($filterService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterTestServiceTrait</className>
      <methodName>getFilterTestService</methodName>
      <methodSignature>getFilterTestService()</methodSignature>
      <fullMethod>getFilterTestService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterTestServiceTrait</className>
      <methodName>setFilterTestService</methodName>
      <methodSignature>setFilterTestService($filterService)</methodSignature>
      <fullMethod>setFilterTestService($filterService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureServiceTrait</className>
      <methodName>getFixtureService</methodName>
      <methodSignature>getFixtureService()</methodSignature>
      <fullMethod>getFixtureService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureServiceTrait</className>
      <methodName>setFixtureService</methodName>
      <methodSignature>setFixtureService($fixtureService)</methodSignature>
      <fullMethod>setFixtureService($fixtureService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormServiceTrait</className>
      <methodName>getFormService</methodName>
      <methodSignature>getFormService()</methodSignature>
      <fullMethod>getFormService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormServiceTrait</className>
      <methodName>setFormService</methodName>
      <methodSignature>setFormService($formService)</methodSignature>
      <fullMethod>setFormService($formService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormTestServiceTrait</className>
      <methodName>getFormTestService</methodName>
      <methodSignature>getFormTestService()</methodSignature>
      <fullMethod>getFormTestService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormTestServiceTrait</className>
      <methodName>setFormTestService</methodName>
      <methodSignature>setFormTestService($formTestService)</methodSignature>
      <fullMethod>setFormTestService($formTestService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestServiceTrait</className>
      <methodName>getFunctionalTestService</methodName>
      <methodSignature>getFunctionalTestService()</methodSignature>
      <fullMethod>getFunctionalTestService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestServiceTrait</className>
      <methodName>setFunctionalTestService</methodName>
      <methodSignature>setFunctionalTestService($functionalTestService)</methodSignature>
      <fullMethod>setFunctionalTestService($functionalTestService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonServiceTrait</className>
      <methodName>getJsonService</methodName>
      <methodSignature>getJsonService()</methodSignature>
      <fullMethod>getJsonService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonServiceTrait</className>
      <methodName>setJsonService</methodName>
      <methodSignature>setJsonService(JsonService $jsonService)</methodSignature>
      <fullMethod>setJsonService(JsonService $jsonService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageServiceTrait</className>
      <methodName>getLanguageService</methodName>
      <methodSignature>getLanguageService()</methodSignature>
      <fullMethod>getLanguageService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageServiceTrait</className>
      <methodName>setLanguageService</methodName>
      <methodSignature>setLanguageService($languageService)</methodSignature>
      <fullMethod>setLanguageService($languageService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleTrait</className>
      <methodName>getModuleService</methodName>
      <methodSignature>getModuleService()</methodSignature>
      <fullMethod>getModuleService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleTrait</className>
      <methodName>setModuleService</methodName>
      <methodSignature>setModuleService(ModuleService $moduleService)</methodSignature>
      <fullMethod>setModuleService(ModuleService $moduleService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestServiceTrait</className>
      <methodName>getPageTestService</methodName>
      <methodSignature>getPageTestService()</methodSignature>
      <fullMethod>getPageTestService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestServiceTrait</className>
      <methodName>setPageTestService</methodName>
      <methodSignature>setPageTestService($pageTestService)</methodSignature>
      <fullMethod>setPageTestService($pageTestService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectServiceTrait</className>
      <methodName>setProjectService</methodName>
      <methodSignature>setProjectService($projectService)</methodSignature>
      <fullMethod>setProjectService($projectService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectServiceTrait</className>
      <methodName>getProjectService</methodName>
      <methodSignature>getProjectService()</methodSignature>
      <fullMethod>getProjectService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryServiceTrait</className>
      <methodName>getRepositoryService</methodName>
      <methodSignature>getRepositoryService()</methodSignature>
      <fullMethod>getRepositoryService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryServiceTrait</className>
      <methodName>setRepositoryService</methodName>
      <methodSignature>setRepositoryService($repositoryService)</methodSignature>
      <fullMethod>setRepositoryService($repositoryService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryTestServiceTrait</className>
      <methodName>getRepositoryTestService</methodName>
      <methodSignature>getRepositoryTestService()</methodSignature>
      <fullMethod>getRepositoryTestService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryTestServiceTrait</className>
      <methodName>setRepositoryTestService</methodName>
      <methodSignature>setRepositoryTestService($repositoryTestService)</methodSignature>
      <fullMethod>setRepositoryTestService($repositoryTestService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolServiceTrait</className>
      <methodName>getSchemaToolService</methodName>
      <methodSignature>getSchemaToolService()</methodSignature>
      <fullMethod>getSchemaToolService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolServiceTrait</className>
      <methodName>setSchemaToolService</methodName>
      <methodSignature>setSchemaToolService(SchemaToolService $schemaToolService)</methodSignature>
      <fullMethod>setSchemaToolService(SchemaToolService $schemaToolService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SearchServiceTrait</className>
      <methodName>getSearchService</methodName>
      <methodSignature>getSearchService()</methodSignature>
      <fullMethod>getSearchService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SearchServiceTrait</className>
      <methodName>setSearchService</methodName>
      <methodSignature>setSearchService($searchService)</methodSignature>
      <fullMethod>setSearchService($searchService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceServiceTrait</className>
      <methodName>getServiceService</methodName>
      <methodSignature>getServiceService()</methodSignature>
      <fullMethod>getServiceService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceServiceTrait</className>
      <methodName>setServiceService</methodName>
      <methodSignature>setServiceService($serviceService)</methodSignature>
      <fullMethod>setServiceService($serviceService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceTestServiceTrait</className>
      <methodName>getServiceTestService</methodName>
      <methodSignature>getServiceTestService()</methodSignature>
      <fullMethod>getServiceTestService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceTestServiceTrait</className>
      <methodName>setServiceTestService</methodName>
      <methodSignature>setServiceTestService($serviceTestService)</methodSignature>
      <fullMethod>setServiceTestService($serviceTestService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SpecialityServiceTrait</className>
      <methodName>getSpecialityService</methodName>
      <methodSignature>getSpecialityService()</methodSignature>
      <fullMethod>getSpecialityService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SpecialityServiceTrait</className>
      <methodName>setSpecialityService</methodName>
      <methodSignature>setSpecialityService(SpecialityService $specialityService)</methodSignature>
      <fullMethod>setSpecialityService(SpecialityService $specialityService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringServiceTrait</className>
      <methodName>getStringService</methodName>
      <methodSignature>getStringService()</methodSignature>
      <fullMethod>getStringService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringServiceTrait</className>
      <methodName>setStringService</methodName>
      <methodSignature>setStringService(StringService $stringService)</methodSignature>
      <fullMethod>setStringService(StringService $stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableServiceTrait</className>
      <methodName>getTableService</methodName>
      <methodSignature>getTableService()</methodSignature>
      <fullMethod>getTableService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableServiceTrait</className>
      <methodName>setTableService</methodName>
      <methodSignature>setTableService(TableService $tableService)</methodSignature>
      <fullMethod>setTableService(TableService $tableService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TemplateServiceTrait</className>
      <methodName>getTemplateService</methodName>
      <methodSignature>getTemplateService()</methodSignature>
      <fullMethod>getTemplateService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TemplateServiceTrait</className>
      <methodName>setTemplateService</methodName>
      <methodSignature>setTemplateService(TemplateService $templateService)</methodSignature>
      <fullMethod>setTemplateService(TemplateService $templateService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestServiceTrait</className>
      <methodName>getTestService</methodName>
      <methodSignature>getTestService()</methodSignature>
      <fullMethod>getTestService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestServiceTrait</className>
      <methodName>setTestService</methodName>
      <methodSignature>setTestService(TestService $testService)</methodSignature>
      <fullMethod>setTestService(TestService $testService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewServiceTrait</className>
      <methodName>getViewService</methodName>
      <methodSignature>getViewService()</methodSignature>
      <fullMethod>getViewService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewServiceTrait</className>
      <methodName>setViewService</methodName>
      <methodSignature>setViewService($viewService)</methodSignature>
      <fullMethod>setViewService($viewService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorController</className>
      <methodName>controllerAction</methodName>
      <methodSignature>controllerAction()</methodSignature>
      <fullMethod>controllerAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorController</className>
      <methodName>actionAction</methodName>
      <methodSignature>actionAction()</methodSignature>
      <fullMethod>actionAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorController</className>
      <methodName>srcAction</methodName>
      <methodSignature>srcAction()</methodSignature>
      <fullMethod>srcAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorController</className>
      <methodName>dbAction</methodName>
      <methodSignature>dbAction()</methodSignature>
      <fullMethod>dbAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorController</className>
      <methodName>viewAction</methodName>
      <methodSignature>viewAction()</methodSignature>
      <fullMethod>viewAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorController</className>
      <methodName>testAction</methodName>
      <methodSignature>testAction()</methodSignature>
      <fullMethod>testAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>createColumnAction</methodName>
      <methodSignature>createColumnAction()</methodSignature>
      <fullMethod>createColumnAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>dropTableAction</methodName>
      <methodSignature>dropTableAction()</methodSignature>
      <fullMethod>dropTableAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>autoincrementTableAction</methodName>
      <methodSignature>autoincrementTableAction()</methodSignature>
      <fullMethod>autoincrementTableAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>autoincrementDatabaseAction</methodName>
      <methodSignature>autoincrementDatabaseAction()</methodSignature>
      <fullMethod>autoincrementDatabaseAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>clearTableAction</methodName>
      <methodSignature>clearTableAction()</methodSignature>
      <fullMethod>clearTableAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>analyseDatabaseAction</methodName>
      <methodSignature>analyseDatabaseAction()</methodSignature>
      <fullMethod>analyseDatabaseAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>analyseTableAction</methodName>
      <methodSignature>analyseTableAction()</methodSignature>
      <fullMethod>analyseTableAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>fixTableAction</methodName>
      <methodSignature>fixTableAction()</methodSignature>
      <fullMethod>fixTableAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>fixDatabaseAction</methodName>
      <methodSignature>fixDatabaseAction()</methodSignature>
      <fullMethod>fixDatabaseAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>getOrderAction</methodName>
      <methodSignature>getOrderAction()</methodSignature>
      <fullMethod>getOrderAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>mysqlDumpAction</methodName>
      <methodSignature>mysqlDumpAction()</methodSignature>
      <fullMethod>mysqlDumpAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbController</className>
      <methodName>mysqlLoadAction</methodName>
      <methodSignature>mysqlLoadAction()</methodSignature>
      <fullMethod>mysqlLoadAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GearController</className>
      <methodName>versionAction</methodName>
      <methodSignature>versionAction()</methodSignature>
      <fullMethod>versionAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GearController</className>
      <methodName>getVersionService</methodName>
      <methodSignature>getVersionService()</methodSignature>
      <fullMethod>getVersionService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GearController</className>
      <methodName>setVersionService</methodName>
      <methodSignature>setVersionService(VersionService $versionService)</methodSignature>
      <fullMethod>setVersionService(VersionService $versionService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>createAction</methodName>
      <methodSignature>createAction()</methodSignature>
      <fullMethod>createAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>fixtureAction</methodName>
      <methodSignature>fixtureAction()</methodSignature>
      <fullMethod>fixtureAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>deleteAction</methodName>
      <methodSignature>deleteAction()</methodSignature>
      <fullMethod>deleteAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>lightAction</methodName>
      <methodSignature>lightAction()</methodSignature>
      <fullMethod>lightAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>loadAction</methodName>
      <methodSignature>loadAction()</methodSignature>
      <fullMethod>loadAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>unloadAction</methodName>
      <methodSignature>unloadAction()</methodSignature>
      <fullMethod>unloadAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>pushAction</methodName>
      <methodSignature>pushAction()</methodSignature>
      <fullMethod>pushAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>buildAction</methodName>
      <methodSignature>buildAction()</methodSignature>
      <fullMethod>buildAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>entityAction</methodName>
      <methodSignature>entityAction()</methodSignature>
      <fullMethod>entityAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>entitiesAction</methodName>
      <methodSignature>entitiesAction()</methodSignature>
      <fullMethod>entitiesAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleController</className>
      <methodName>dumpAction</methodName>
      <methodSignature>dumpAction()</methodSignature>
      <fullMethod>dumpAction()</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Gear</className>
      <methodName>setRequest</methodName>
      <methodSignature>setRequest(Request $request)</methodSignature>
      <fullMethod>setRequest(Request $request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Gear</className>
      <methodName>getRequest</methodName>
      <methodSignature>getRequest()</methodSignature>
      <fullMethod>getRequest()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Gear</className>
      <methodName>loopActivity</methodName>
      <methodSignature>loopActivity($service, $data = array(), $serviceName = __FUNCTION__)</methodSignature>
      <fullMethod>loopActivity($service, $data = array(), $serviceName = __FUNCTION__)</fullMethod>
      <crap>91.68</crap>
      <complexity>18</complexity>
      <coverage>38.96</coverage>
      <crapLoad>12</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Gear</className>
      <methodName>loopResult</methodName>
      <methodSignature>loopResult($service, $element, $serviceName, $destroy = false)</methodSignature>
      <fullMethod>loopResult($service, $element, $serviceName, $destroy = false)</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GearFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>fixtureAction</methodName>
      <methodSignature>fixtureAction()</methodSignature>
      <fullMethod>fixtureAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>projectAction</methodName>
      <methodSignature>projectAction()</methodSignature>
      <fullMethod>projectAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>mysql2sqliteAction</methodName>
      <methodSignature>mysql2sqliteAction()</methodSignature>
      <fullMethod>mysql2sqliteAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>deployAction</methodName>
      <methodSignature>deployAction()</methodSignature>
      <fullMethod>deployAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>globalAction</methodName>
      <methodSignature>globalAction()</methodSignature>
      <fullMethod>globalAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>localAction</methodName>
      <methodSignature>localAction()</methodSignature>
      <fullMethod>localAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>environmentAction</methodName>
      <methodSignature>environmentAction()</methodSignature>
      <fullMethod>environmentAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>configAction</methodName>
      <methodSignature>configAction()</methodSignature>
      <fullMethod>configAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>sqliteAction</methodName>
      <methodSignature>sqliteAction()</methodSignature>
      <fullMethod>sqliteAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>mysqlAction</methodName>
      <methodSignature>mysqlAction()</methodSignature>
      <fullMethod>mysqlAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectController</className>
      <methodName>composerAction</methodName>
      <methodSignature>composerAction()</methodSignature>
      <fullMethod>composerAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($fileService, $templateService)</methodSignature>
      <fullMethod>__construct($fileService, $templateService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>render</methodName>
      <methodSignature>render()</methodSignature>
      <fullMethod>render()</fullMethod>
      <crap>6.6</crap>
      <complexity>5</complexity>
      <coverage>60</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>debug</methodName>
      <methodSignature>debug()</methodSignature>
      <fullMethod>debug()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>renderViewModel</methodName>
      <methodSignature>renderViewModel($viewModel)</methodSignature>
      <fullMethod>renderViewModel($viewModel)</fullMethod>
      <crap>28.67</crap>
      <complexity>7</complexity>
      <coverage>23.81</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getRenderView</methodName>
      <methodSignature>getRenderView()</methodSignature>
      <fullMethod>getRenderView()</fullMethod>
      <crap>7.46</crap>
      <complexity>4</complexity>
      <coverage>40</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>addChildView</methodName>
      <methodSignature>addChildView($view)</methodSignature>
      <fullMethod>addChildView($view)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getChildView</methodName>
      <methodSignature>getChildView()</methodSignature>
      <fullMethod>getChildView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setTemplate</methodName>
      <methodSignature>setTemplate($template)</methodSignature>
      <fullMethod>setTemplate($template)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getView</methodName>
      <methodSignature>getView()</methodSignature>
      <fullMethod>getView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setView</methodName>
      <methodSignature>setView($view)</methodSignature>
      <fullMethod>setView($view)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getOptions</methodName>
      <methodSignature>getOptions()</methodSignature>
      <fullMethod>getOptions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setOptions</methodName>
      <methodSignature>setOptions($config)</methodSignature>
      <fullMethod>setOptions($config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getFileName</methodName>
      <methodSignature>getFileName()</methodSignature>
      <fullMethod>getFileName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setFileName</methodName>
      <methodSignature>setFileName($fileName)</methodSignature>
      <fullMethod>setFileName($fileName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setLocation</methodName>
      <methodSignature>setLocation($location)</methodSignature>
      <fullMethod>setLocation($location)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>attach</methodName>
      <methodSignature>attach(EventManagerInterface $events)</methodSignature>
      <fullMethod>attach(EventManagerInterface $events)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>detach</methodName>
      <methodSignature>detach(EventManagerInterface $events)</methodSignature>
      <fullMethod>detach(EventManagerInterface $events)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>getMessageById</methodName>
      <methodSignature>getMessageById($messageId)</methodSignature>
      <fullMethod>getMessageById($messageId)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>outputCommandLine</methodName>
      <methodSignature>outputCommandLine(EventInterface $event)</methodSignature>
      <fullMethod>outputCommandLine(EventInterface $event)</fullMethod>
      <crap>5.35</crap>
      <complexity>5</complexity>
      <coverage>76</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>outputCommandLineEndMessage</methodName>
      <methodSignature>outputCommandLineEndMessage(EventInterface $event)</methodSignature>
      <fullMethod>outputCommandLineEndMessage(EventInterface $event)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>setWorkingInstance</methodName>
      <methodSignature>setWorkingInstance(EventInterface $event)</methodSignature>
      <fullMethod>setWorkingInstance(EventInterface $event)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaListener</className>
      <methodName>getWorkingInstance</methodName>
      <methodSignature>getWorkingInstance(EventInterface $event)</methodSignature>
      <fullMethod>getWorkingInstance(EventInterface $event)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ArrayToYmlHelperFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $viewManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $viewManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConstructorControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileCreatorFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GearControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MetadataFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleServiceFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectControllerFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $controllerManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $controllerManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RouteConstraint</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $viewManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $viewManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcFactory</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator(\Zend\ServiceManager\ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator(\Zend\ServiceManager\ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcFactory</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcFactory</className>
      <methodName>getServiceService</methodName>
      <methodSignature>getServiceService()</methodSignature>
      <fullMethod>getServiceService()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcFactory</className>
      <methodName>setServiceService</methodName>
      <methodSignature>setServiceService($serviceService)</methodSignature>
      <fullMethod>setServiceService($serviceService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StrHelperFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $viewManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $viewManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GloballyFilter</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LocalFilter</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>valid</methodName>
      <methodSignature>valid($data)</methodSignature>
      <fullMethod>valid($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionIntoControllerStrategy</className>
      <methodName>hydrate</methodName>
      <methodSignature>hydrate($value)</methodSignature>
      <fullMethod>hydrate($value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionIntoControllerStrategy</className>
      <methodName>extract</methodName>
      <methodSignature>extract($value)</methodSignature>
      <fullMethod>extract($value)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassInitializer</className>
      <methodName>initialize</methodName>
      <methodSignature>initialize($instance, ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>initialize($instance, ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigInitializer</className>
      <methodName>initialize</methodName>
      <methodSignature>initialize($instance, ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>initialize($instance, ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>3.03</crap>
      <complexity>3</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirInitializer</className>
      <methodName>initialize</methodName>
      <methodSignature>initialize($instance, ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>initialize($instance, ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleInitializer</className>
      <methodName>initialize</methodName>
      <methodSignature>initialize($instance, ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>initialize($instance, ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>3.01</crap>
      <complexity>3</complexity>
      <coverage>90</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TemplateInitializer</className>
      <methodName>initialize</methodName>
      <methodSignature>initialize($instance, ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>initialize($instance, ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2.86</crap>
      <complexity>2</complexity>
      <coverage>40</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(TableObject $table)</methodSignature>
      <fullMethod>__construct(TableObject $table)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getPrimaryKeyConstraint</methodName>
      <methodSignature>getPrimaryKeyConstraint()</methodSignature>
      <fullMethod>getPrimaryKeyConstraint()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getReverseForeignKey</methodName>
      <methodSignature>getReverseForeignKey($tableName)</methodSignature>
      <fullMethod>getReverseForeignKey($tableName)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getPrimaryKey</methodName>
      <methodSignature>getPrimaryKey()</methodSignature>
      <fullMethod>getPrimaryKey()</fullMethod>
      <crap>3.71</crap>
      <complexity>3</complexity>
      <coverage>57.14</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getPrimaryKeyColumns</methodName>
      <methodSignature>getPrimaryKeyColumns()</methodSignature>
      <fullMethod>getPrimaryKeyColumns()</fullMethod>
      <crap>3.47</crap>
      <complexity>3</complexity>
      <coverage>62.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getForeignKeyFromColumnObject</methodName>
      <methodSignature>getForeignKeyFromColumnObject($columnToCheck)</methodSignature>
      <fullMethod>getForeignKeyFromColumnObject($columnToCheck)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getForeignKeyFromColumn</methodName>
      <methodSignature>getForeignKeyFromColumn($columnToCheck)</methodSignature>
      <fullMethod>getForeignKeyFromColumn($columnToCheck)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getConstraintForeignKeyFromColumn</methodName>
      <methodSignature>getConstraintForeignKeyFromColumn($columnCheck)</methodSignature>
      <fullMethod>getConstraintForeignKeyFromColumn($columnCheck)</fullMethod>
      <crap>5.4</crap>
      <complexity>4</complexity>
      <coverage>55.56</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getUniqueConstraintFromColumn</methodName>
      <methodSignature>getUniqueConstraintFromColumn($columnCheck)</methodSignature>
      <fullMethod>getUniqueConstraintFromColumn($columnCheck)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setModuleManager</methodName>
      <methodSignature>setModuleManager($moduleManager)</methodSignature>
      <fullMethod>setModuleManager($moduleManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getModuleManager</methodName>
      <methodSignature>getModuleManager()</methodSignature>
      <fullMethod>getModuleManager()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>loadFixtures</methodName>
      <methodSignature>loadFixtures($event)</methodSignature>
      <fullMethod>loadFixtures($event)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setUpAcl</methodName>
      <methodSignature>setUpAcl($event)</methodSignature>
      <fullMethod>setUpAcl($event)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setUpSecurity</methodName>
      <methodSignature>setUpSecurity($event)</methodSignature>
      <fullMethod>setUpSecurity($event)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setUpModule</methodName>
      <methodSignature>setUpModule($event)</methodSignature>
      <fullMethod>setUpModule($event)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>onBootstrap</methodName>
      <methodSignature>onBootstrap(MvcEvent $event)</methodSignature>
      <fullMethod>onBootstrap(MvcEvent $event)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>anonymous function</methodName>
      <methodSignature>anonymous function()</methodSignature>
      <fullMethod>anonymous function()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>init</methodName>
      <methodSignature>init(ModuleManager $moduleManager)</methodSignature>
      <fullMethod>init(ModuleManager $moduleManager)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getConsoleUsage</methodName>
      <methodSignature>getConsoleUsage(Console $console)</methodSignature>
      <fullMethod>getConsoleUsage(Console $console)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getViewHelperConfig</methodName>
      <methodSignature>getViewHelperConfig()</methodSignature>
      <fullMethod>getViewHelperConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getAutoloaderConfig</methodName>
      <methodSignature>getAutoloaderConfig()</methodSignature>
      <fullMethod>getAutoloaderConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getConfig</methodName>
      <methodSignature>getConfig()</methodSignature>
      <fullMethod>getConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getDiagnostics</methodName>
      <methodSignature>getDiagnostics()</methodSignature>
      <fullMethod>getDiagnostics()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(Config $config, ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>__construct(Config $config, ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>init</methodName>
      <methodSignature>init()</methodSignature>
      <fullMethod>init()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getSpecialityArray</methodName>
      <methodSignature>getSpecialityArray($db, $arrayToValidate = null)</methodSignature>
      <fullMethod>getSpecialityArray($db, $arrayToValidate = null)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getSpecialityByColumnName</methodName>
      <methodSignature>getSpecialityByColumnName($columnName, $tableName)</methodSignature>
      <fullMethod>getSpecialityByColumnName($columnName, $tableName)</fullMethod>
      <crap>7.01</crap>
      <complexity>7</complexity>
      <coverage>94.12</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getDbByName</methodName>
      <methodSignature>getDbByName($name)</methodSignature>
      <fullMethod>getDbByName($name)</fullMethod>
      <crap>3.33</crap>
      <complexity>3</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>checkSchemaAlreadySet</methodName>
      <methodSignature>checkSchemaAlreadySet($db, $srcSet, $controllers)</methodSignature>
      <fullMethod>checkSchemaAlreadySet($db, $srcSet, $controllers)</fullMethod>
      <crap>13.04</crap>
      <complexity>8</complexity>
      <coverage>57.14</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>findIntoSrc</methodName>
      <methodSignature>findIntoSrc($name)</methodSignature>
      <fullMethod>findIntoSrc($name)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>findIntoController</methodName>
      <methodSignature>findIntoController($name)</methodSignature>
      <fullMethod>findIntoController($name)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>findIntoDb</methodName>
      <methodSignature>findIntoDb($name)</methodSignature>
      <fullMethod>findIntoDb($name)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getReplaceLocation</methodName>
      <methodSignature>getReplaceLocation($type, $name)</methodSignature>
      <fullMethod>getReplaceLocation($type, $name)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>replaceIntoLocation</methodName>
      <methodSignature>replaceIntoLocation($type, $location, $object)</methodSignature>
      <fullMethod>replaceIntoLocation($type, $location, $object)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>updateDb</methodName>
      <methodSignature>updateDb($db)</methodSignature>
      <fullMethod>updateDb($db)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>toCamelcase</methodName>
      <methodSignature>toCamelcase($word)</methodSignature>
      <fullMethod>toCamelcase($word)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>hasImageDependency</methodName>
      <methodSignature>hasImageDependency($dbToInsert)</methodSignature>
      <fullMethod>hasImageDependency($dbToInsert)</fullMethod>
      <crap>6.24</crap>
      <complexity>6</complexity>
      <coverage>81.25</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>makeController</methodName>
      <methodSignature>makeController($db)</methodSignature>
      <fullMethod>makeController($db)</fullMethod>
      <crap>3.01</crap>
      <complexity>3</complexity>
      <coverage>90.48</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>makeSrc</methodName>
      <methodSignature>makeSrc($db)</methodSignature>
      <fullMethod>makeSrc($db)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>appendDb</methodName>
      <methodSignature>appendDb(\Gear\ValueObject\Db $dbToInsert)</methodSignature>
      <fullMethod>appendDb(\Gear\ValueObject\Db $dbToInsert)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>94.44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getAdapter</methodName>
      <methodSignature>getAdapter()</methodSignature>
      <fullMethod>getAdapter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getImageTable</methodName>
      <methodSignature>getImageTable($tableName = 'upload_image')</methodSignature>
      <fullMethod>getImageTable($tableName = 'upload_image')</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getControllerByDb</methodName>
      <methodSignature>getControllerByDb(\Gear\ValueObject\Db $db)</methodSignature>
      <fullMethod>getControllerByDb(\Gear\ValueObject\Db $db)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getSrcByDb</methodName>
      <methodSignature>getSrcByDb(\Gear\ValueObject\Db $db, $type)</methodSignature>
      <fullMethod>getSrcByDb(\Gear\ValueObject\Db $db, $type)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>persistSchema</methodName>
      <methodSignature>persistSchema($schema)</methodSignature>
      <fullMethod>persistSchema($schema)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>insertDb</methodName>
      <methodSignature>insertDb(\Gear\ValueObject\Db $dbToInsert)</methodSignature>
      <fullMethod>insertDb(\Gear\ValueObject\Db $dbToInsert)</fullMethod>
      <crap>5.06</crap>
      <complexity>5</complexity>
      <coverage>86.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>__extractObject</methodName>
      <methodSignature>__extractObject($type)</methodSignature>
      <fullMethod>__extractObject($type)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>__extract</methodName>
      <methodSignature>__extract($type)</methodSignature>
      <fullMethod>__extract($type)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>overwrite</methodName>
      <methodSignature>overwrite($toOverwrite)</methodSignature>
      <fullMethod>overwrite($toOverwrite)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>replaceWithOverwrite</methodName>
      <methodSignature>replaceWithOverwrite($serviceName, $object, $place)</methodSignature>
      <fullMethod>replaceWithOverwrite($serviceName, $object, $place)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>replaceController</methodName>
      <methodSignature>replaceController(\Gear\ValueObject\Controller $controller)</methodSignature>
      <fullMethod>replaceController(\Gear\ValueObject\Controller $controller)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getControllerByName</methodName>
      <methodSignature>getControllerByName($controllerName)</methodSignature>
      <fullMethod>getControllerByName($controllerName)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getJsonFromFile</methodName>
      <methodSignature>getJsonFromFile()</methodSignature>
      <fullMethod>getJsonFromFile()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>setFileFromJson</methodName>
      <methodSignature>setFileFromJson($json)</methodSignature>
      <fullMethod>setFileFromJson($json)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>insertSrc</methodName>
      <methodSignature>insertSrc($singleJson)</methodSignature>
      <fullMethod>insertSrc($singleJson)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>insertController</methodName>
      <methodSignature>insertController($json, $singleJson, $context = 'controller')</methodSignature>
      <fullMethod>insertController($json, $singleJson, $context = 'controller')</fullMethod>
      <crap>17.09</crap>
      <complexity>8</complexity>
      <coverage>47.83</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getJson</methodName>
      <methodSignature>getJson()</methodSignature>
      <fullMethod>getJson()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>encode</methodName>
      <methodSignature>encode($json)</methodSignature>
      <fullMethod>encode($json)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>decode</methodName>
      <methodSignature>decode($json)</methodSignature>
      <fullMethod>decode($json)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getConfig</methodName>
      <methodSignature>getConfig()</methodSignature>
      <fullMethod>getConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>setConfig</methodName>
      <methodSignature>setConfig($config)</methodSignature>
      <fullMethod>setConfig($config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Schema</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator($serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>render</methodName>
      <methodSignature>render()</methodSignature>
      <fullMethod>render()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>renderViewModel</methodName>
      <methodSignature>renderViewModel($viewModel)</methodSignature>
      <fullMethod>renderViewModel($viewModel)</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>getRenderView</methodName>
      <methodSignature>getRenderView()</methodSignature>
      <fullMethod>getRenderView()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>addChildView</methodName>
      <methodSignature>addChildView($view)</methodSignature>
      <fullMethod>addChildView($view)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>getChildView</methodName>
      <methodSignature>getChildView()</methodSignature>
      <fullMethod>getChildView()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>getView</methodName>
      <methodSignature>getView()</methodSignature>
      <fullMethod>getView()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>setView</methodName>
      <methodSignature>setView($view)</methodSignature>
      <fullMethod>setView($view)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>getConfigVars</methodName>
      <methodSignature>getConfigVars()</methodSignature>
      <fullMethod>getConfigVars()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>setConfigVars</methodName>
      <methodSignature>setConfigVars($config)</methodSignature>
      <fullMethod>setConfigVars($config)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>getFileName</methodName>
      <methodSignature>getFileName()</methodSignature>
      <fullMethod>getFileName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>setFileName</methodName>
      <methodSignature>setFileName($fileName)</methodSignature>
      <fullMethod>setFileName($fileName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFileCreator</className>
      <methodName>setLocation</methodName>
      <methodSignature>setLocation($location)</methodSignature>
      <fullMethod>setLocation($location)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getSelectOneByForUnitTest</methodName>
      <methodSignature>getSelectOneByForUnitTest()</methodSignature>
      <fullMethod>getSelectOneByForUnitTest()</fullMethod>
      <crap>6.04</crap>
      <complexity>6</complexity>
      <coverage>89.47</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getOrderByForUnitTest</methodName>
      <methodSignature>getOrderByForUnitTest()</methodSignature>
      <fullMethod>getOrderByForUnitTest()</fullMethod>
      <crap>6.53</crap>
      <complexity>6</complexity>
      <coverage>75.47</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getValuesForUnitTest</methodName>
      <methodSignature>getValuesForUnitTest()</methodSignature>
      <fullMethod>getValuesForUnitTest()</fullMethod>
      <crap>9</crap>
      <complexity>8</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getInsertArrayByColumnForeignKey</methodName>
      <methodSignature>getInsertArrayByColumnForeignKey($column)</methodSignature>
      <fullMethod>getInsertArrayByColumnForeignKey($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getInsertAssertByColumnForeignKey</methodName>
      <methodSignature>getInsertAssertByColumnForeignKey($column)</methodSignature>
      <fullMethod>getInsertAssertByColumnForeignKey($column)</fullMethod>
      <crap>1.67</crap>
      <complexity>1</complexity>
      <coverage>12.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getUpdateArrayByColumnForeignKey</methodName>
      <methodSignature>getUpdateArrayByColumnForeignKey($column)</methodSignature>
      <fullMethod>getUpdateArrayByColumnForeignKey($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getUpdateAssertByColumnForeignKey</methodName>
      <methodSignature>getUpdateAssertByColumnForeignKey($column)</methodSignature>
      <fullMethod>getUpdateAssertByColumnForeignKey($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getValidColumnsFromTable</methodName>
      <methodSignature>getValidColumnsFromTable()</methodSignature>
      <fullMethod>getValidColumnsFromTable()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn($column)</methodSignature>
      <fullMethod>getInsertArrayByColumn($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getBaseMessage</methodName>
      <methodSignature>getBaseMessage($base, $column, $whitespace = false, $isPrimaryKey = false)</methodSignature>
      <fullMethod>getBaseMessage($base, $column, $whitespace = false, $isPrimaryKey = false)</fullMethod>
      <crap>5.12</crap>
      <complexity>5</complexity>
      <coverage>83.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn($column)</methodSignature>
      <fullMethod>getUpdateArrayByColumn($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn($column)</methodSignature>
      <fullMethod>getInsertAssertByColumn($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn($column)</methodSignature>
      <fullMethod>getUpdateAssertByColumn($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>getBaseArray</methodName>
      <methodSignature>getBaseArray()</methodSignature>
      <fullMethod>getBaseArray()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFixtureService</className>
      <methodName>setBaseArray</methodName>
      <methodSignature>setBaseArray($baseArray)</methodSignature>
      <fullMethod>setBaseArray($baseArray)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>hasUniqueConstraint</methodName>
      <methodSignature>hasUniqueConstraint()</methodSignature>
      <fullMethod>hasUniqueConstraint()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getTableHeadCount</methodName>
      <methodSignature>getTableHeadCount()</methodSignature>
      <fullMethod>getTableHeadCount()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>fixtureDatabase</methodName>
      <methodSignature>fixtureDatabase(&amp;$file, $numberReference = 999)</methodSignature>
      <fullMethod>fixtureDatabase(&amp;$file, $numberReference = 999)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>setMetadata</methodName>
      <methodSignature>setMetadata($metadata)</methodSignature>
      <fullMethod>setMetadata($metadata)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>dbOptions</methodName>
      <methodSignature>dbOptions()</methodSignature>
      <fullMethod>dbOptions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>basicOptions</methodName>
      <methodSignature>basicOptions()</methodSignature>
      <fullMethod>basicOptions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getMetadata</methodName>
      <methodSignature>getMetadata()</methodSignature>
      <fullMethod>getMetadata()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>endsWith</methodName>
      <methodSignature>endsWith($haystack, $needle)</methodSignature>
      <fullMethod>endsWith($haystack, $needle)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getFixtureSize</methodName>
      <methodSignature>getFixtureSize()</methodSignature>
      <fullMethod>getFixtureSize()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getFixtureSizeByTableName</methodName>
      <methodSignature>getFixtureSizeByTableName()</methodSignature>
      <fullMethod>getFixtureSizeByTableName()</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getColumnVar</methodName>
      <methodSignature>getColumnVar($column)</methodSignature>
      <fullMethod>getColumnVar($column)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>loadTable</methodName>
      <methodSignature>loadTable($table)</methodSignature>
      <fullMethod>loadTable($table)</fullMethod>
      <crap>4.59</crap>
      <complexity>4</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getTableData</methodName>
      <methodSignature>getTableData()</methodSignature>
      <fullMethod>getTableData()</fullMethod>
      <crap>13.97</crap>
      <complexity>12</complexity>
      <coverage>76.09</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getSpecialites</methodName>
      <methodSignature>getSpecialites()</methodSignature>
      <fullMethod>getSpecialites()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getHasDependencyImagem</methodName>
      <methodSignature>getHasDependencyImagem()</methodSignature>
      <fullMethod>getHasDependencyImagem()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>phpArrayToFile</methodName>
      <methodSignature>phpArrayToFile($phpArray)</methodSignature>
      <fullMethod>phpArrayToFile($phpArray)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>cut</methodName>
      <methodSignature>cut($string)</methodSignature>
      <fullMethod>cut($string)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>setInstance</methodName>
      <methodSignature>setInstance($instance)</methodSignature>
      <fullMethod>setInstance($instance)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getInstance</methodName>
      <methodSignature>getInstance()</methodSignature>
      <fullMethod>getInstance()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>verifyUploadImageAssociation</methodName>
      <methodSignature>verifyUploadImageAssociation($tableName, $tableImage = 'upload_image')</methodSignature>
      <fullMethod>verifyUploadImageAssociation($tableName, $tableImage = 'upload_image')</fullMethod>
      <crap>10.02</crap>
      <complexity>8</complexity>
      <coverage>68.42</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>verifyUploadImageColumn</methodName>
      <methodSignature>verifyUploadImageColumn($tableDb)</methodSignature>
      <fullMethod>verifyUploadImageColumn($tableDb)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>verifyImageDependency</methodName>
      <methodSignature>verifyImageDependency($tableNameTo)</methodSignature>
      <fullMethod>verifyImageDependency($tableNameTo)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getSchema</methodName>
      <methodSignature>getSchema()</methodSignature>
      <fullMethod>getSchema()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getJson</methodName>
      <methodSignature>getJson()</methodSignature>
      <fullMethod>getJson()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>setJsonService</methodName>
      <methodSignature>setJsonService(\Gear\Service\Constructor\JsonService $jsonService)</methodSignature>
      <fullMethod>setJsonService(\Gear\Service\Constructor\JsonService $jsonService)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getJsonService</methodName>
      <methodSignature>getJsonService()</methodSignature>
      <fullMethod>getJsonService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>setJsonSchema</methodName>
      <methodSignature>setJsonSchema($json)</methodSignature>
      <fullMethod>setJsonSchema($json)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getJsonSchema</methodName>
      <methodSignature>getJsonSchema()</methodSignature>
      <fullMethod>getJsonSchema()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getGearSchema</methodName>
      <methodSignature>getGearSchema()</methodSignature>
      <fullMethod>getGearSchema()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>setGearSchema</methodName>
      <methodSignature>setGearSchema($gearSchema)</methodSignature>
      <fullMethod>setGearSchema($gearSchema)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>getTableName</methodName>
      <methodSignature>getTableName()</methodSignature>
      <fullMethod>getTableName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractJsonService</className>
      <methodName>setTableName</methodName>
      <methodSignature>setTableName($tableName)</methodSignature>
      <fullMethod>setTableName($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>getVersion</methodName>
      <methodSignature>getVersion()</methodSignature>
      <fullMethod>getVersion()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>outputConsole</methodName>
      <methodSignature>outputConsole($message, $color)</methodSignature>
      <fullMethod>outputConsole($message, $color)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>output</methodName>
      <methodSignature>output($message, $color, $background)</methodSignature>
      <fullMethod>output($message, $color, $background)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>outputYellow</methodName>
      <methodSignature>outputYellow($message)</methodSignature>
      <fullMethod>outputYellow($message)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>outputRed</methodName>
      <methodSignature>outputRed($message)</methodSignature>
      <fullMethod>outputRed($message)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>outputGreen</methodName>
      <methodSignature>outputGreen($message)</methodSignature>
      <fullMethod>outputGreen($message)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>outputBlue</methodName>
      <methodSignature>outputBlue($message)</methodSignature>
      <fullMethod>outputBlue($message)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>setModule</methodName>
      <methodSignature>setModule(BasicModuleStructure $module)</methodSignature>
      <fullMethod>setModule(BasicModuleStructure $module)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>getModule</methodName>
      <methodSignature>getModule()</methodSignature>
      <fullMethod>getModule()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>createFileFromTemplate</methodName>
      <methodSignature>createFileFromTemplate($templateName, $config, $name, $location)</methodSignature>
      <fullMethod>createFileFromTemplate($templateName, $config, $name, $location)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>createFileFromText</methodName>
      <methodSignature>createFileFromText($content, $name, $location)</methodSignature>
      <fullMethod>createFileFromText($content, $name, $location)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>createFileFromCopy</methodName>
      <methodSignature>createFileFromCopy($templateName, $name, $location)</methodSignature>
      <fullMethod>createFileFromCopy($templateName, $name, $location)</fullMethod>
      <crap>2.01</crap>
      <complexity>2</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>createEmptyFile</methodName>
      <methodSignature>createEmptyFile($name, $location)</methodSignature>
      <fullMethod>createEmptyFile($name, $location)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>str</methodName>
      <methodSignature>str($type, $message)</methodSignature>
      <fullMethod>str($type, $message)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>setTemplateService</methodName>
      <methodSignature>setTemplateService(TemplateService $fileWriter)</methodSignature>
      <fullMethod>setTemplateService(TemplateService $fileWriter)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>setConfig</methodName>
      <methodSignature>setConfig(Config $config)</methodSignature>
      <fullMethod>setConfig(Config $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>getConfig</methodName>
      <methodSignature>getConfig()</methodSignature>
      <fullMethod>getConfig()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>getAdapter</methodName>
      <methodSignature>getAdapter()</methodSignature>
      <fullMethod>getAdapter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>setAdapter</methodName>
      <methodSignature>setAdapter($adapter)</methodSignature>
      <fullMethod>setAdapter($adapter)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>getOptions</methodName>
      <methodSignature>getOptions()</methodSignature>
      <fullMethod>getOptions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>getRequest</methodName>
      <methodSignature>getRequest()</methodSignature>
      <fullMethod>getRequest()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractService</className>
      <methodName>setRequest</methodName>
      <methodSignature>setRequest($request)</methodSignature>
      <fullMethod>setRequest($request)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getShared</methodName>
      <methodSignature>getShared()</methodSignature>
      <fullMethod>getShared()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getModuleBuildXml</methodName>
      <methodSignature>getModuleBuildXml()</methodSignature>
      <fullMethod>getModuleBuildXml()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getSharedBuildXml</methodName>
      <methodSignature>getSharedBuildXml()</methodSignature>
      <fullMethod>getSharedBuildXml()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getModuleBuildSh</methodName>
      <methodSignature>getModuleBuildSh()</methodSignature>
      <fullMethod>getModuleBuildSh()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getSharedBuildSh</methodName>
      <methodSignature>getSharedBuildSh()</methodSignature>
      <fullMethod>getSharedBuildSh()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copyBuildXmlFile</methodName>
      <methodSignature>copyBuildXmlFile()</methodSignature>
      <fullMethod>copyBuildXmlFile()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copyBuildShFile</methodName>
      <methodSignature>copyBuildShFile()</methodSignature>
      <fullMethod>copyBuildShFile()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copy</methodName>
      <methodSignature>copy()</methodSignature>
      <fullMethod>copy()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copyphpmd</methodName>
      <methodSignature>copyphpmd()</methodSignature>
      <fullMethod>copyphpmd()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copyphpunitfast</methodName>
      <methodSignature>copyphpunitfast()</methodSignature>
      <fullMethod>copyphpunitfast()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copyphpunitcoverage</methodName>
      <methodSignature>copyphpunitcoverage()</methodSignature>
      <fullMethod>copyphpunitcoverage()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>copyphpunit</methodName>
      <methodSignature>copyphpunit()</methodSignature>
      <fullMethod>copyphpunit()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getSharedphpunitcoverage</methodName>
      <methodSignature>getSharedphpunitcoverage()</methodSignature>
      <fullMethod>getSharedphpunitcoverage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getSharedphpunitfast</methodName>
      <methodSignature>getSharedphpunitfast()</methodSignature>
      <fullMethod>getSharedphpunitfast()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getSharedphpunit</methodName>
      <methodSignature>getSharedphpunit()</methodSignature>
      <fullMethod>getSharedphpunit()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getSharedphpmd</methodName>
      <methodSignature>getSharedphpmd()</methodSignature>
      <fullMethod>getSharedphpmd()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getModulephpmd</methodName>
      <methodSignature>getModulephpmd()</methodSignature>
      <fullMethod>getModulephpmd()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getModulephpunitcoverage</methodName>
      <methodSignature>getModulephpunitcoverage()</methodSignature>
      <fullMethod>getModulephpunitcoverage()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getModulephpunitfast</methodName>
      <methodSignature>getModulephpunitfast()</methodSignature>
      <fullMethod>getModulephpunitfast()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getModulephpunit</methodName>
      <methodSignature>getModulephpunit()</methodSignature>
      <fullMethod>getModulephpunit()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>getParams</methodName>
      <methodSignature>getParams()</methodSignature>
      <fullMethod>getParams()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BuildService</className>
      <methodName>build</methodName>
      <methodSignature>build()</methodSignature>
      <fullMethod>build()</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getMatchReference</methodName>
      <methodSignature>getMatchReference()</methodSignature>
      <fullMethod>getMatchReference()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractCheckbox</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(ColumnObject $column)</methodSignature>
      <fullMethod>__construct(ColumnObject $column)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getColumn</methodName>
      <methodSignature>getColumn()</methodSignature>
      <fullMethod>getColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>setColumn</methodName>
      <methodSignature>setColumn(ColumnObject $column)</methodSignature>
      <fullMethod>setColumn(ColumnObject $column)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getViewColumnLayout</methodName>
      <methodSignature>getViewColumnLayout($label, $value)</methodSignature>
      <fullMethod>getViewColumnLayout($label, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getBaseMessage</methodName>
      <methodSignature>getBaseMessage($base, $whitespace = false, $isPrimaryKey = false)</methodSignature>
      <fullMethod>getBaseMessage($base, $whitespace = false, $isPrimaryKey = false)</fullMethod>
      <crap>5.39</crap>
      <complexity>5</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getViewFormElement</methodName>
      <methodSignature>getViewFormElement()</methodSignature>
      <fullMethod>getViewFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getIdFormElement</methodName>
      <methodSignature>getIdFormElement()</methodSignature>
      <fullMethod>getIdFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getFilterFormElement</methodName>
      <methodSignature>getFilterFormElement()</methodSignature>
      <fullMethod>getFilterFormElement()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractColumn</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getUpdateTime</methodName>
      <methodSignature>getUpdateTime()</methodSignature>
      <fullMethod>getUpdateTime()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>setUpdateTime</methodName>
      <methodSignature>setUpdateTime($updateTime)</methodSignature>
      <fullMethod>setUpdateTime($updateTime)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getInsertTime</methodName>
      <methodSignature>getInsertTime()</methodSignature>
      <fullMethod>getInsertTime()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>setInsertTime</methodName>
      <methodSignature>setInsertTime($insertTime)</methodSignature>
      <fullMethod>setInsertTime($insertTime)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getDateTimeGlobalFormat</methodName>
      <methodSignature>getDateTimeGlobalFormat()</methodSignature>
      <fullMethod>getDateTimeGlobalFormat()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getDateTimePTBRFormat</methodName>
      <methodSignature>getDateTimePTBRFormat()</methodSignature>
      <fullMethod>getDateTimePTBRFormat()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getDatePTBRFormat</methodName>
      <methodSignature>getDatePTBRFormat()</methodSignature>
      <fullMethod>getDatePTBRFormat()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getDateGlobalFormat</methodName>
      <methodSignature>getDateGlobalFormat()</methodSignature>
      <fullMethod>getDateGlobalFormat()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractDateTime</className>
      <methodName>getTimeGlobalFormat</methodName>
      <methodSignature>getTimeGlobalFormat()</methodSignature>
      <fullMethod>getTimeGlobalFormat()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getReference</methodName>
      <methodSignature>getReference()</methodSignature>
      <fullMethod>getReference()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>setReference</methodName>
      <methodSignature>setReference($reference)</methodSignature>
      <fullMethod>setReference($reference)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractInt</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getFixtureDefaultDb</methodName>
      <methodSignature>getFixtureDefaultDb($number)</methodSignature>
      <fullMethod>getFixtureDefaultDb($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getSearchFormElement</methodName>
      <methodSignature>getSearchFormElement()</methodSignature>
      <fullMethod>getSearchFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getSearchViewElement</methodName>
      <methodSignature>getSearchViewElement()</methodSignature>
      <fullMethod>getSearchViewElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Date</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatePtBr</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getFixtureDefaultDb</methodName>
      <methodSignature>getFixtureDefaultDb($number)</methodSignature>
      <fullMethod>getFixtureDefaultDb($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getSearchFormElement</methodName>
      <methodSignature>getSearchFormElement()</methodSignature>
      <fullMethod>getSearchFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Datetime</className>
      <methodName>getSearchViewElement</methodName>
      <methodSignature>getSearchViewElement()</methodSignature>
      <fullMethod>getSearchViewElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getSearchFormElement</methodName>
      <methodSignature>getSearchFormElement()</methodSignature>
      <fullMethod>getSearchFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getSearchViewElement</methodName>
      <methodSignature>getSearchViewElement()</methodSignature>
      <fullMethod>getSearchViewElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DatetimePtBr</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getFixtureDefaultDb</methodName>
      <methodSignature>getFixtureDefaultDb($number)</methodSignature>
      <fullMethod>getFixtureDefaultDb($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getReference</methodName>
      <methodSignature>getReference()</methodSignature>
      <fullMethod>getReference()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>setReference</methodName>
      <methodSignature>setReference($reference)</methodSignature>
      <fullMethod>setReference($reference)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getPrecision</methodName>
      <methodSignature>getPrecision()</methodSignature>
      <fullMethod>getPrecision()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getScale</methodName>
      <methodSignature>getScale()</methodSignature>
      <fullMethod>getScale()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Decimal</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MoneyPtBr</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Int</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Int</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Int</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Checkbox</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Checkbox</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(ColumnObject $column, ConstraintObject $constraint)</methodSignature>
      <fullMethod>__construct(ColumnObject $column, ConstraintObject $constraint)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getSchema</methodName>
      <methodSignature>getSchema()</methodSignature>
      <fullMethod>getSchema()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getReferencedTableName</methodName>
      <methodSignature>getReferencedTableName()</methodSignature>
      <fullMethod>getReferencedTableName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getConstraint</methodName>
      <methodSignature>getConstraint()</methodSignature>
      <fullMethod>getConstraint()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>setConstraint</methodName>
      <methodSignature>setConstraint($constraint)</methodSignature>
      <fullMethod>setConstraint($constraint)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getHelperStack</methodName>
      <methodSignature>getHelperStack()</methodSignature>
      <fullMethod>getHelperStack()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>setHelperStack</methodName>
      <methodSignature>setHelperStack($helperStack)</methodSignature>
      <fullMethod>setHelperStack($helperStack)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getReferencedTableValidColumnName</methodName>
      <methodSignature>getReferencedTableValidColumnName()</methodSignature>
      <fullMethod>getReferencedTableValidColumnName()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getSearchFormElement</methodName>
      <methodSignature>getSearchFormElement()</methodSignature>
      <fullMethod>getSearchFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getSearchViewElement</methodName>
      <methodSignature>getSearchViewElement()</methodSignature>
      <fullMethod>getSearchViewElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getModuleName</methodName>
      <methodSignature>getModuleName()</methodSignature>
      <fullMethod>getModuleName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>setModuleName</methodName>
      <methodSignature>setModuleName($moduleName)</methodSignature>
      <fullMethod>setModuleName($moduleName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ForeignKey</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PrimaryKey</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(ColumnObject $column, ConstraintObject $constraint)</methodSignature>
      <fullMethod>__construct(ColumnObject $column, ConstraintObject $constraint)</fullMethod>
      <crap>4.25</crap>
      <complexity>4</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PrimaryKey</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PrimaryKey</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Longtext</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Text</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Text</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getFixtureDefaultDb</methodName>
      <methodSignature>getFixtureDefaultDb($number)</methodSignature>
      <fullMethod>getFixtureDefaultDb($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getInsertArrayByColumn</methodName>
      <methodSignature>getInsertArrayByColumn()</methodSignature>
      <fullMethod>getInsertArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getInsertSelectByColumn</methodName>
      <methodSignature>getInsertSelectByColumn()</methodSignature>
      <fullMethod>getInsertSelectByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getUpdateArrayByColumn</methodName>
      <methodSignature>getUpdateArrayByColumn()</methodSignature>
      <fullMethod>getUpdateArrayByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getInsertAssertByColumn</methodName>
      <methodSignature>getInsertAssertByColumn()</methodSignature>
      <fullMethod>getInsertAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getUpdateAssertByColumn</methodName>
      <methodSignature>getUpdateAssertByColumn()</methodSignature>
      <fullMethod>getUpdateAssertByColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Time</className>
      <methodName>getViewListRowElement</methodName>
      <methodSignature>getViewListRowElement()</methodSignature>
      <fullMethod>getViewListRowElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TinyInt</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TinyInt</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TinyInt</className>
      <methodName>getFixtureDefault</methodName>
      <methodSignature>getFixtureDefault($number)</methodSignature>
      <fullMethod>getFixtureDefault($number)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Checkbox</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Checkbox</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Varchar</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Varchar</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Varchar</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>setUniqueConstraint</methodName>
      <methodSignature>setUniqueConstraint($uniqueConstraint)</methodSignature>
      <fullMethod>setUniqueConstraint($uniqueConstraint)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>getUniqueConstraint</methodName>
      <methodSignature>getUniqueConstraint()</methodSignature>
      <fullMethod>getUniqueConstraint()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>getFilterFormElement</methodName>
      <methodSignature>getFilterFormElement()</methodSignature>
      <fullMethod>getFilterFormElement()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>filterUniqueElement</methodName>
      <methodSignature>filterUniqueElement()</methodSignature>
      <fullMethod>filterUniqueElement()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>filterElement</methodName>
      <methodSignature>filterElement()</methodSignature>
      <fullMethod>filterElement()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Email</className>
      <methodName>getFixtureFormat</methodName>
      <methodSignature>getFixtureFormat($number)</methodSignature>
      <fullMethod>getFixtureFormat($number)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getControllerPreValidate</methodName>
      <methodSignature>getControllerPreValidate()</methodSignature>
      <fullMethod>getControllerPreValidate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getControllerPreShow</methodName>
      <methodSignature>getControllerPreShow()</methodSignature>
      <fullMethod>getControllerPreShow()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getViewFormElement</methodName>
      <methodSignature>getViewFormElement()</methodSignature>
      <fullMethod>getViewFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PasswordVerify</className>
      <methodName>getFilterFormElement</methodName>
      <methodSignature>getFilterFormElement()</methodSignature>
      <fullMethod>getFilterFormElement()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UniqueId</className>
      <methodName>getFixtureData</methodName>
      <methodSignature>getFixtureData($iterator)</methodSignature>
      <fullMethod>getFixtureData($iterator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UniqueId</className>
      <methodName>getFilterFormElement</methodName>
      <methodSignature>getFilterFormElement()</methodSignature>
      <fullMethod>getFilterFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UniqueId</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UploadImage</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column)</methodSignature>
      <fullMethod>__construct($column)</fullMethod>
      <crap>2.06</crap>
      <complexity>2</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UploadImage</className>
      <methodName>getFormElement</methodName>
      <methodSignature>getFormElement()</methodSignature>
      <fullMethod>getFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UploadImage</className>
      <methodName>getViewFormElement</methodName>
      <methodSignature>getViewFormElement()</methodSignature>
      <fullMethod>getViewFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UploadImage</className>
      <methodName>getFilterFormElement</methodName>
      <methodSignature>getFilterFormElement()</methodSignature>
      <fullMethod>getFilterFormElement()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UploadImage</className>
      <methodName>getViewData</methodName>
      <methodSignature>getViewData()</methodSignature>
      <fullMethod>getViewData()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ColumnService</className>
      <methodName>getColumn</methodName>
      <methodSignature>getColumn($columnName, $tableName)</methodSignature>
      <fullMethod>getColumn($columnName, $tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>setUpGlobal</methodName>
      <methodSignature>setUpGlobal(Globally $global)</methodSignature>
      <fullMethod>setUpGlobal(Globally $global)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>setUpLocal</methodName>
      <methodSignature>setUpLocal(Local $local)</methodSignature>
      <fullMethod>setUpLocal(Local $local)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>setUpEnvironment</methodName>
      <methodSignature>setUpEnvironment(Local $local)</methodSignature>
      <fullMethod>setUpEnvironment(Local $local)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($data)</methodSignature>
      <fullMethod>isValid($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>create</methodName>
      <methodSignature>create($data = array())</methodSignature>
      <fullMethod>create($data = array())</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpRouter</methodName>
      <methodSignature>setUpRouter()</methodSignature>
      <fullMethod>setUpRouter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpNavigation</methodName>
      <methodSignature>setUpNavigation()</methodSignature>
      <fullMethod>setUpNavigation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpControllerTest</methodName>
      <methodSignature>setUpControllerTest(Controller $controller)</methodSignature>
      <fullMethod>setUpControllerTest(Controller $controller)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpController</methodName>
      <methodSignature>setUpController(Controller $controller)</methodSignature>
      <fullMethod>setUpController(Controller $controller)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpPage</methodName>
      <methodSignature>setUpPage(Action $action)</methodSignature>
      <fullMethod>setUpPage(Action $action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpView</methodName>
      <methodSignature>setUpView(Action $action)</methodSignature>
      <fullMethod>setUpView(Action $action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpAcceptance</methodName>
      <methodSignature>setUpAcceptance(Action $action, $timeToTest)</methodSignature>
      <fullMethod>setUpAcceptance(Action $action, $timeToTest)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>setUpFunctional</methodName>
      <methodSignature>setUpFunctional(Action $action, $timeToTest)</methodSignature>
      <fullMethod>setUpFunctional(Action $action, $timeToTest)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionService</className>
      <methodName>delete</methodName>
      <methodSignature>delete($data = array())</methodSignature>
      <fullMethod>delete($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionServiceTrait</className>
      <methodName>setActionService</methodName>
      <methodSignature>setActionService(ActionService $actionService)</methodSignature>
      <fullMethod>setActionService(ActionService $actionService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ActionServiceTrait</className>
      <methodName>getActionService</methodName>
      <methodSignature>getActionService()</methodSignature>
      <fullMethod>getActionService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($data)</methodSignature>
      <fullMethod>isValid($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>create</methodName>
      <methodSignature>create($data = array())</methodSignature>
      <fullMethod>create($data = array())</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>delete</methodName>
      <methodSignature>delete($data = array())</methodSignature>
      <fullMethod>delete($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>updateControllerManager</methodName>
      <methodSignature>updateControllerManager()</methodSignature>
      <fullMethod>updateControllerManager()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>setUpControllerTest</methodName>
      <methodSignature>setUpControllerTest(Controller $controller)</methodSignature>
      <fullMethod>setUpControllerTest(Controller $controller)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>setUpController</methodName>
      <methodSignature>setUpController(Controller $data)</methodSignature>
      <fullMethod>setUpController(Controller $data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerServiceTrait</className>
      <methodName>setControllerService</methodName>
      <methodSignature>setControllerService(ControllerService $controllerService)</methodSignature>
      <fullMethod>setControllerService(ControllerService $controllerService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerServiceTrait</className>
      <methodName>getControllerService</methodName>
      <methodSignature>getControllerService()</methodSignature>
      <fullMethod>getControllerService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>3.02</crap>
      <complexity>3</complexity>
      <coverage>87.1</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($data)</methodSignature>
      <fullMethod>isValid($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>prepareData</methodName>
      <methodSignature>prepareData($data)</methodSignature>
      <fullMethod>prepareData($data)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>getMetadata</methodName>
      <methodSignature>getMetadata()</methodSignature>
      <fullMethod>getMetadata()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>setMetadata</methodName>
      <methodSignature>setMetadata($metadata)</methodSignature>
      <fullMethod>setMetadata($metadata)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>getTable</methodName>
      <methodSignature>getTable($tableName)</methodSignature>
      <fullMethod>getTable($tableName)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbService</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb($data)</methodSignature>
      <fullMethod>getDb($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbServiceTrait</className>
      <methodName>setDbService</methodName>
      <methodSignature>setDbService(DbService $dbService)</methodSignature>
      <fullMethod>setDbService(DbService $dbService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbServiceTrait</className>
      <methodName>getDbService</methodName>
      <methodSignature>getDbService()</methodSignature>
      <fullMethod>getDbService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>createNewSrcJson</methodName>
      <methodSignature>createNewSrcJson()</methodSignature>
      <fullMethod>createNewSrcJson()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>findControllerKey</methodName>
      <methodSignature>findControllerKey($haystack, $needle)</methodSignature>
      <fullMethod>findControllerKey($haystack, $needle)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>insertAction</methodName>
      <methodSignature>insertAction($json, $singleJson)</methodSignature>
      <fullMethod>insertAction($json, $singleJson)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>insertController</methodName>
      <methodSignature>insertController($json, $singleJson, $context = 'controller')</methodSignature>
      <fullMethod>insertController($json, $singleJson, $context = 'controller')</fullMethod>
      <crap>7.8</crap>
      <complexity>6</complexity>
      <coverage>63.16</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>saveJson</methodName>
      <methodSignature>saveJson($json)</methodSignature>
      <fullMethod>saveJson($json)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>insertIntoJson</methodName>
      <methodSignature>insertIntoJson($json, $dataToInsert)</methodSignature>
      <fullMethod>insertIntoJson($json, $dataToInsert)</fullMethod>
      <crap>3.14</crap>
      <complexity>3</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>loadFromFile</methodName>
      <methodSignature>loadFromFile($location)</methodSignature>
      <fullMethod>loadFromFile($location)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid()</methodSignature>
      <fullMethod>isValid()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>decode</methodName>
      <methodSignature>decode($data)</methodSignature>
      <fullMethod>decode($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>encode</methodName>
      <methodSignature>encode($data)</methodSignature>
      <fullMethod>encode($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>registerJson</methodName>
      <methodSignature>registerJson()</methodSignature>
      <fullMethod>registerJson()</fullMethod>
      <crap>2.02</crap>
      <complexity>2</complexity>
      <coverage>83.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>getActionZero</methodName>
      <methodSignature>getActionZero()</methodSignature>
      <fullMethod>getActionZero()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>getControllerZero</methodName>
      <methodSignature>getControllerZero($actions = array())</methodSignature>
      <fullMethod>getControllerZero($actions = array())</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>setPage</methodName>
      <methodSignature>setPage($page)</methodSignature>
      <fullMethod>setPage($page)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>createNewModuleJson</methodName>
      <methodSignature>createNewModuleJson()</methodSignature>
      <fullMethod>createNewModuleJson()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>writeJson</methodName>
      <methodSignature>writeJson($json)</methodSignature>
      <fullMethod>writeJson($json)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonService</className>
      <methodName>dump</methodName>
      <methodSignature>dump($type = 'array')</methodSignature>
      <fullMethod>dump($type = 'array')</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonServiceTrait</className>
      <methodName>setJsonService</methodName>
      <methodSignature>setJsonService(JsonService $jsonService)</methodSignature>
      <fullMethod>setJsonService(JsonService $jsonService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonServiceTrait</className>
      <methodName>getJsonService</methodName>
      <methodSignature>getJsonService()</methodSignature>
      <fullMethod>getJsonService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageService</className>
      <methodName>createStdClass</methodName>
      <methodSignature>createStdClass()</methodSignature>
      <fullMethod>createStdClass()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageService</className>
      <methodName>create</methodName>
      <methodSignature>create(array $pageParams)</methodSignature>
      <fullMethod>create(array $pageParams)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageService</className>
      <methodName>pushPageIntoSchema</methodName>
      <methodSignature>pushPageIntoSchema(array $page)</methodSignature>
      <fullMethod>pushPageIntoSchema(array $page)</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageService</className>
      <methodName>createStdAction</methodName>
      <methodSignature>createStdAction($page)</methodSignature>
      <fullMethod>createStdAction($page)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageServiceTrait</className>
      <methodName>setPageService</methodName>
      <methodSignature>setPageService(PageService $pageService)</methodSignature>
      <fullMethod>setPageService(PageService $pageService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageServiceTrait</className>
      <methodName>getPageService</methodName>
      <methodSignature>getPageService()</methodSignature>
      <fullMethod>getPageService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcService</className>
      <methodName>getConfigService</methodName>
      <methodSignature>getConfigService()</methodSignature>
      <fullMethod>getConfigService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($data)</methodSignature>
      <fullMethod>isValid($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcService</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>3.01</crap>
      <complexity>3</complexity>
      <coverage>89.47</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcService</className>
      <methodName>avaliable</methodName>
      <methodSignature>avaliable()</methodSignature>
      <fullMethod>avaliable()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcService</className>
      <methodName>factory</methodName>
      <methodSignature>factory($src)</methodSignature>
      <fullMethod>factory($src)</fullMethod>
      <crap>74.59</crap>
      <complexity>13</complexity>
      <coverage>28.57</coverage>
      <crapLoad>10</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcServiceTrait</className>
      <methodName>setSrcService</methodName>
      <methodSignature>setSrcService(SrcService $srcService)</methodSignature>
      <fullMethod>setSrcService(SrcService $srcService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SrcServiceTrait</className>
      <methodName>getSrcService</methodName>
      <methodSignature>getSrcService()</methodSignature>
      <fullMethod>getSrcService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($data)</methodSignature>
      <fullMethod>isValid($data)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>create</methodName>
      <methodSignature>create($data = array())</methodSignature>
      <fullMethod>create($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>getTemplateName</methodName>
      <methodSignature>getTemplateName($switch)</methodSignature>
      <fullMethod>getTemplateName($switch)</fullMethod>
      <crap>5.63</crap>
      <complexity>4</complexity>
      <coverage>53.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>getTemplateConfig</methodName>
      <methodSignature>getTemplateConfig($switch)</methodSignature>
      <fullMethod>getTemplateConfig($switch)</fullMethod>
      <crap>6</crap>
      <complexity>4</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>delete</methodName>
      <methodSignature>delete($data = array())</methodSignature>
      <fullMethod>delete($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestServiceTrait</className>
      <methodName>setTestService</methodName>
      <methodSignature>setTestService(TestService $testService)</methodSignature>
      <fullMethod>setTestService(TestService $testService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestServiceTrait</className>
      <methodName>getTestService</methodName>
      <methodSignature>getTestService()</methodSignature>
      <fullMethod>getTestService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($data)</methodSignature>
      <fullMethod>isValid($data)</fullMethod>
      <crap>3.1</crap>
      <complexity>3</complexity>
      <coverage>77.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>create</methodName>
      <methodSignature>create($data = array())</methodSignature>
      <fullMethod>create($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>delete</methodName>
      <methodSignature>delete($data = array())</methodSignature>
      <fullMethod>delete($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewServiceTrait</className>
      <methodName>setViewService</methodName>
      <methodSignature>setViewService(ViewService $viewService)</methodSignature>
      <fullMethod>setViewService(ViewService $viewService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewServiceTrait</className>
      <methodName>getViewService</methodName>
      <methodSignature>getViewService()</methodSignature>
      <fullMethod>getViewService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>factory</methodName>
      <methodSignature>factory($mod, $srcType, $options)</methodSignature>
      <fullMethod>factory($mod, $srcType, $options)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid()</methodSignature>
      <fullMethod>isValid()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>src</methodName>
      <methodSignature>src($mod, $srcType, $options)</methodSignature>
      <fullMethod>src($mod, $srcType, $options)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>getMessage</methodName>
      <methodSignature>getMessage()</methodSignature>
      <fullMethod>getMessage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>addMessage</methodName>
      <methodSignature>addMessage($message)</methodSignature>
      <fullMethod>addMessage($message)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>getAvailableMods</methodName>
      <methodSignature>getAvailableMods()</methodSignature>
      <fullMethod>getAvailableMods()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CreatorService</className>
      <methodName>getAvailableSrc</methodName>
      <methodSignature>getAvailableSrc()</methodSignature>
      <fullMethod>getAvailableSrc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AutoincrementService</className>
      <methodName>autoincrementTable</methodName>
      <methodSignature>autoincrementTable($tableName)</methodSignature>
      <fullMethod>autoincrementTable($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AutoincrementService</className>
      <methodName>truncate</methodName>
      <methodSignature>truncate(TableObject $table)</methodSignature>
      <fullMethod>truncate(TableObject $table)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AutoincrementService</className>
      <methodName>autoincrementDatabase</methodName>
      <methodSignature>autoincrementDatabase()</methodSignature>
      <fullMethod>autoincrementDatabase()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AutoincrementServiceTrait</className>
      <methodName>setAutoincrementService</methodName>
      <methodSignature>setAutoincrementService($autoincrementService)</methodSignature>
      <fullMethod>setAutoincrementService($autoincrementService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AutoincrementServiceTrait</className>
      <methodName>getAutoincrementService</methodName>
      <methodSignature>getAutoincrementService()</methodSignature>
      <fullMethod>getAutoincrementService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupService</className>
      <methodName>getBackupName</methodName>
      <methodSignature>getBackupName()</methodSignature>
      <fullMethod>getBackupName()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupService</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupService</className>
      <methodName>init</methodName>
      <methodSignature>init()</methodSignature>
      <fullMethod>init()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupService</className>
      <methodName>mysqlDump</methodName>
      <methodSignature>mysqlDump($dbms = 'mysql')</methodSignature>
      <fullMethod>mysqlDump($dbms = 'mysql')</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupService</className>
      <methodName>mysqlLoad</methodName>
      <methodSignature>mysqlLoad($dbms = 'mysql')</methodSignature>
      <fullMethod>mysqlLoad($dbms = 'mysql')</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupServiceTrait</className>
      <methodName>setBackupService</methodName>
      <methodSignature>setBackupService($backupService)</methodSignature>
      <fullMethod>setBackupService($backupService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BackupServiceTrait</className>
      <methodName>getBackupService</methodName>
      <methodSignature>getBackupService()</methodSignature>
      <fullMethod>getBackupService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbAbstractService</className>
      <methodName>getSchema</methodName>
      <methodSignature>getSchema()</methodSignature>
      <fullMethod>getSchema()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbAbstractService</className>
      <methodName>getAdapter</methodName>
      <methodSignature>getAdapter()</methodSignature>
      <fullMethod>getAdapter()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DbAbstractService</className>
      <methodName>table</methodName>
      <methodSignature>table($name)</methodSignature>
      <fullMethod>table($name)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getTableDeep</methodName>
      <methodSignature>getTableDeep($tableObject)</methodSignature>
      <fullMethod>getTableDeep($tableObject)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getTableOrder</methodName>
      <methodSignature>getTableOrder($mix)</methodSignature>
      <fullMethod>getTableOrder($mix)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getConstraintsByName</methodName>
      <methodSignature>getConstraintsByName($name)</methodSignature>
      <fullMethod>getConstraintsByName($name)</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>createBorder</methodName>
      <methodSignature>createBorder()</methodSignature>
      <fullMethod>createBorder()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>setUpStats</methodName>
      <methodSignature>setUpStats()</methodSignature>
      <fullMethod>setUpStats()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getOrderNumber</methodName>
      <methodSignature>getOrderNumber($tableName)</methodSignature>
      <fullMethod>getOrderNumber($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getOrder</methodName>
      <methodSignature>getOrder()</methodSignature>
      <fullMethod>getOrder()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>dropSystematicColumns</methodName>
      <methodSignature>dropSystematicColumns(TableObject $table)</methodSignature>
      <fullMethod>dropSystematicColumns(TableObject $table)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>clearTable</methodName>
      <methodSignature>clearTable($tableName)</methodSignature>
      <fullMethod>clearTable($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>doAnalyseTable</methodName>
      <methodSignature>doAnalyseTable($tableName)</methodSignature>
      <fullMethod>doAnalyseTable($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>doAnalyseDatabase</methodName>
      <methodSignature>doAnalyseDatabase()</methodSignature>
      <fullMethod>doAnalyseDatabase()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>fixTable</methodName>
      <methodSignature>fixTable($tableName)</methodSignature>
      <fullMethod>fixTable($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>executeFix</methodName>
      <methodSignature>executeFix(TableObject $tableObject)</methodSignature>
      <fullMethod>executeFix(TableObject $tableObject)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>fixDatabase</methodName>
      <methodSignature>fixDatabase()</methodSignature>
      <fullMethod>fixDatabase()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>validatePrimaryKey</methodName>
      <methodSignature>validatePrimaryKey($db)</methodSignature>
      <fullMethod>validatePrimaryKey($db)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>fixPrimaryKey</methodName>
      <methodSignature>fixPrimaryKey($db)</methodSignature>
      <fullMethod>fixPrimaryKey($db)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>createCreated</methodName>
      <methodSignature>createCreated($name)</methodSignature>
      <fullMethod>createCreated($name)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>createUpdated</methodName>
      <methodSignature>createUpdated($name)</methodSignature>
      <fullMethod>createUpdated($name)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>createUpdatedBy</methodName>
      <methodSignature>createUpdatedBy($name)</methodSignature>
      <fullMethod>createUpdatedBy($name)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>createCreatedBy</methodName>
      <methodSignature>createCreatedBy($name)</methodSignature>
      <fullMethod>createCreatedBy($name)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>injectDbWithTable</methodName>
      <methodSignature>injectDbWithTable($table)</methodSignature>
      <fullMethod>injectDbWithTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getTextTable</methodName>
      <methodSignature>getTextTable()</methodSignature>
      <fullMethod>getTextTable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getOrderTable</methodName>
      <methodSignature>getOrderTable()</methodSignature>
      <fullMethod>getOrderTable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getPrimaryKeyName</methodName>
      <methodSignature>getPrimaryKeyName($db)</methodSignature>
      <fullMethod>getPrimaryKeyName($db)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>getTableObjectToRow</methodName>
      <methodSignature>getTableObjectToRow(TableObject $tableObject)</methodSignature>
      <fullMethod>getTableObjectToRow(TableObject $tableObject)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>dropCreatedBy</methodName>
      <methodSignature>dropCreatedBy($table)</methodSignature>
      <fullMethod>dropCreatedBy($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>dropUpdatedBy</methodName>
      <methodSignature>dropUpdatedBy($table)</methodSignature>
      <fullMethod>dropUpdatedBy($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>dropCreated</methodName>
      <methodSignature>dropCreated($table)</methodSignature>
      <fullMethod>dropCreated($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SchemaToolService</className>
      <methodName>dropUpdated</methodName>
      <methodSignature>dropUpdated($table)</methodSignature>
      <fullMethod>dropUpdated($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableService</className>
      <methodName>createColumn</methodName>
      <methodSignature>createColumn($table, $column, $type, $limit = null, $null = true)</methodSignature>
      <fullMethod>createColumn($table, $column, $type, $limit = null, $null = true)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableService</className>
      <methodName>dropTable</methodName>
      <methodSignature>dropTable($tableName)</methodSignature>
      <fullMethod>dropTable($tableName)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>checkCreatedBy</methodName>
      <methodSignature>checkCreatedBy($column)</methodSignature>
      <fullMethod>checkCreatedBy($column)</fullMethod>
      <crap>20</crap>
      <complexity>16</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>checkUpdatedBy</methodName>
      <methodSignature>checkUpdatedBy($column)</methodSignature>
      <fullMethod>checkUpdatedBy($column)</fullMethod>
      <crap>18.52</crap>
      <complexity>15</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(TableObject $table)</methodSignature>
      <fullMethod>__construct(TableObject $table)</fullMethod>
      <crap>14.23</crap>
      <complexity>13</complexity>
      <coverage>80.65</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>getPrimaryKey</methodName>
      <methodSignature>getPrimaryKey()</methodSignature>
      <fullMethod>getPrimaryKey()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>setPrimaryKey</methodName>
      <methodSignature>setPrimaryKey($primaryKey)</methodSignature>
      <fullMethod>setPrimaryKey($primaryKey)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>getCreated</methodName>
      <methodSignature>getCreated()</methodSignature>
      <fullMethod>getCreated()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>setCreated</methodName>
      <methodSignature>setCreated($created)</methodSignature>
      <fullMethod>setCreated($created)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>getUpdated</methodName>
      <methodSignature>getUpdated()</methodSignature>
      <fullMethod>getUpdated()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>setUpdated</methodName>
      <methodSignature>setUpdated($updated)</methodSignature>
      <fullMethod>setUpdated($updated)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>getCreatedBy</methodName>
      <methodSignature>getCreatedBy()</methodSignature>
      <fullMethod>getCreatedBy()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>setCreatedBy</methodName>
      <methodSignature>setCreatedBy($createdBy)</methodSignature>
      <fullMethod>setCreatedBy($createdBy)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>getUpdatedBy</methodName>
      <methodSignature>getUpdatedBy()</methodSignature>
      <fullMethod>getUpdatedBy()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>setUpdatedBy</methodName>
      <methodSignature>setUpdatedBy($updatedBy)</methodSignature>
      <fullMethod>setUpdatedBy($updatedBy)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableValidation</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployService</className>
      <methodName>mysql2sqlite</methodName>
      <methodSignature>mysql2sqlite()</methodSignature>
      <fullMethod>mysql2sqlite()</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployService</className>
      <methodName>getSpecifications</methodName>
      <methodSignature>getSpecifications()</methodSignature>
      <fullMethod>getSpecifications()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployService</className>
      <methodName>deploy</methodName>
      <methodSignature>deploy()</methodSignature>
      <fullMethod>deploy()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployService</className>
      <methodName>getConfigService</methodName>
      <methodSignature>getConfigService()</methodSignature>
      <fullMethod>getConfigService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DeployService</className>
      <methodName>setConfigService</methodName>
      <methodSignature>setConfigService($configService)</methodSignature>
      <fullMethod>setConfigService($configService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DoctrineService</className>
      <methodName>getOrmSchemaToolUpdate</methodName>
      <methodSignature>getOrmSchemaToolUpdate()</methodSignature>
      <fullMethod>getOrmSchemaToolUpdate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DoctrineService</className>
      <methodName>getOrmConvertMapping</methodName>
      <methodSignature>getOrmConvertMapping()</methodSignature>
      <fullMethod>getOrmConvertMapping()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DoctrineService</className>
      <methodName>getOrmGenerateEntities</methodName>
      <methodSignature>getOrmGenerateEntities()</methodSignature>
      <fullMethod>getOrmGenerateEntities()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DoctrineService</className>
      <methodName>getOrmValidateSchema</methodName>
      <methodSignature>getOrmValidateSchema()</methodSignature>
      <fullMethod>getOrmValidateSchema()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFilesystemService</className>
      <methodName>outputCreating</methodName>
      <methodSignature>outputCreating($message)</methodSignature>
      <fullMethod>outputCreating($message)</fullMethod>
      <crap>4.05</crap>
      <complexity>4</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractFilesystemService</className>
      <methodName>outputRemoving</methodName>
      <methodSignature>outputRemoving($message)</methodSignature>
      <fullMethod>outputRemoving($message)</fullMethod>
      <crap>5.26</crap>
      <complexity>4</complexity>
      <coverage>57.14</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirService</className>
      <methodName>xcopy</methodName>
      <methodSignature>xcopy($source, $dest, $permissions = 0755)</methodSignature>
      <fullMethod>xcopy($source, $dest, $permissions = 0755)</fullMethod>
      <crap>7.01</crap>
      <complexity>7</complexity>
      <coverage>93.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirService</className>
      <methodName>isDirEmpty</methodName>
      <methodSignature>isDirEmpty($dir)</methodSignature>
      <fullMethod>isDirEmpty($dir)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirService</className>
      <methodName>mkDir</methodName>
      <methodSignature>mkDir($dir)</methodSignature>
      <fullMethod>mkDir($dir)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirService</className>
      <methodName>mkDeepDir</methodName>
      <methodSignature>mkDeepDir($toCreate, $base)</methodSignature>
      <fullMethod>mkDeepDir($toCreate, $base)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirService</className>
      <methodName>rmDir</methodName>
      <methodSignature>rmDir($dir)</methodSignature>
      <fullMethod>rmDir($dir)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>factory</methodName>
      <methodSignature>factory($path, $name, $content)</methodSignature>
      <fullMethod>factory($path, $name, $content)</fullMethod>
      <crap>10.98</crap>
      <complexity>9</complexity>
      <coverage>70.97</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>write</methodName>
      <methodSignature>write($path, $name, $content)</methodSignature>
      <fullMethod>write($path, $name, $content)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>chmod</methodName>
      <methodSignature>chmod($mod, $fileLocation)</methodSignature>
      <fullMethod>chmod($mod, $fileLocation)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>emptyFile</methodName>
      <methodSignature>emptyFile($path, $name)</methodSignature>
      <fullMethod>emptyFile($path, $name)</fullMethod>
      <crap>2.02</crap>
      <complexity>2</complexity>
      <coverage>81.82</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkSqlite</methodName>
      <methodSignature>mkSqlite($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkSqlite($path = '', $name = '', $content = '')</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkXML</methodName>
      <methodSignature>mkXML($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkXML($path = '', $name = '', $content = '')</fullMethod>
      <crap>5.31</crap>
      <complexity>5</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkPHP</methodName>
      <methodSignature>mkPHP($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkPHP($path = '', $name = '', $content = '')</fullMethod>
      <crap>9.63</crap>
      <complexity>8</complexity>
      <coverage>70.59</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkHTML</methodName>
      <methodSignature>mkHTML($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkHTML($path = '', $name = '', $content = '')</fullMethod>
      <crap>5.31</crap>
      <complexity>5</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkJs</methodName>
      <methodSignature>mkJs($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkJs($path = '', $name = '', $content = '')</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkJson</methodName>
      <methodSignature>mkJson($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkJson($path = '', $name = '', $content = '')</fullMethod>
      <crap>5.01</crap>
      <complexity>5</complexity>
      <coverage>92.31</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FileService</className>
      <methodName>mkYml</methodName>
      <methodSignature>mkYml($path = '', $name = '', $content = '')</methodSignature>
      <fullMethod>mkYml($path = '', $name = '', $content = '')</fullMethod>
      <crap>5.31</crap>
      <complexity>5</complexity>
      <coverage>76.92</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilesystemService</className>
      <methodName>isEmptyDir</methodName>
      <methodSignature>isEmptyDir($dir)</methodSignature>
      <fullMethod>isEmptyDir($dir)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilesystemService</className>
      <methodName>makeDir</methodName>
      <methodSignature>makeDir($dir)</methodSignature>
      <fullMethod>makeDir($dir)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilesystemService</className>
      <methodName>rmDir</methodName>
      <methodSignature>rmDir($dir)</methodSignature>
      <fullMethod>rmDir($dir)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>getLoadedFixtures</methodName>
      <methodSignature>getLoadedFixtures()</methodSignature>
      <fullMethod>getLoadedFixtures()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>setLoadedFixtures</methodName>
      <methodSignature>setLoadedFixtures($loadedFixtures)</methodSignature>
      <fullMethod>setLoadedFixtures($loadedFixtures)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>setEventManager</methodName>
      <methodSignature>setEventManager(EventManagerInterface $events)</methodSignature>
      <fullMethod>setEventManager(EventManagerInterface $events)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>getEventManager</methodName>
      <methodSignature>getEventManager()</methodSignature>
      <fullMethod>getEventManager()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>importProject</methodName>
      <methodSignature>importProject()</methodSignature>
      <fullMethod>importProject()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>importModule</methodName>
      <methodSignature>importModule()</methodSignature>
      <fullMethod>importModule()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureServiceTrait</className>
      <methodName>getFixtureService</methodName>
      <methodSignature>getFixtureService()</methodSignature>
      <fullMethod>getFixtureService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureServiceTrait</className>
      <methodName>setFixtureService</methodName>
      <methodSignature>setFixtureService($fixtureService)</methodSignature>
      <fullMethod>setFixtureService($fixtureService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phploc</methodName>
      <methodSignature>phploc()</methodSignature>
      <fullMethod>phploc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phpdox</methodName>
      <methodSignature>phpdox()</methodSignature>
      <fullMethod>phpdox()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phpcs</methodName>
      <methodSignature>phpcs()</methodSignature>
      <fullMethod>phpcs()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phpdepends</methodName>
      <methodSignature>phpdepends()</methodSignature>
      <fullMethod>phpdepends()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phpmd</methodName>
      <methodSignature>phpmd()</methodSignature>
      <fullMethod>phpmd()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phpLint</methodName>
      <methodSignature>phpLint()</methodSignature>
      <fullMethod>phpLint()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>phpunit</methodName>
      <methodSignature>phpunit()</methodSignature>
      <fullMethod>phpunit()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IntegrationService</className>
      <methodName>codeception</methodName>
      <methodSignature>codeception()</methodSignature>
      <fullMethod>codeception()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>getAvaiable</methodName>
      <methodSignature>getAvaiable()</methodSignature>
      <fullMethod>getAvaiable()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>getWords</methodName>
      <methodSignature>getWords()</methodSignature>
      <fullMethod>getWords()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>mergeLanguageUp</methodName>
      <methodSignature>mergeLanguageUp()</methodSignature>
      <fullMethod>mergeLanguageUp()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>localePt</methodName>
      <methodSignature>localePt()</methodSignature>
      <fullMethod>localePt()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>getDefaultRouterLanguage</methodName>
      <methodSignature>getDefaultRouterLanguage($locale)</methodSignature>
      <fullMethod>getDefaultRouterLanguage($locale)</fullMethod>
      <crap>5.03</crap>
      <complexity>5</complexity>
      <coverage>89.66</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable()</methodSignature>
      <fullMethod>introspectFromTable()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>createPoeditFile</methodName>
      <methodSignature>createPoeditFile($language, $languageArray)</methodSignature>
      <fullMethod>createPoeditFile($language, $languageArray)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LanguageService</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerService</className>
      <methodName>createComposer</methodName>
      <methodSignature>createComposer()</methodSignature>
      <fullMethod>createComposer()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerService</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerService</className>
      <methodName>getProjectComposer</methodName>
      <methodSignature>getProjectComposer()</methodSignature>
      <fullMethod>getProjectComposer()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerService</className>
      <methodName>getModuleComposerJson</methodName>
      <methodSignature>getModuleComposerJson($moduleName)</methodSignature>
      <fullMethod>getModuleComposerJson($moduleName)</fullMethod>
      <crap>2.03</crap>
      <complexity>2</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerService</className>
      <methodName>getModuleDependencies</methodName>
      <methodSignature>getModuleDependencies()</methodSignature>
      <fullMethod>getModuleDependencies()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ComposerService</className>
      <methodName>getProjectDependencies</methodName>
      <methodSignature>getProjectDependencies($projectName)</methodSignature>
      <fullMethod>getProjectDependencies($projectName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>92.16</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>createLight</methodName>
      <methodSignature>createLight($options = array())</methodSignature>
      <fullMethod>createLight($options = array())</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>hasOptions</methodName>
      <methodSignature>hasOptions($optionName)</methodSignature>
      <fullMethod>hasOptions($optionName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>createLightModuleFile</methodName>
      <methodSignature>createLightModuleFile()</methodSignature>
      <fullMethod>createLightModuleFile()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>createModuleFileAlias</methodName>
      <methodSignature>createModuleFileAlias()</methodSignature>
      <fullMethod>createModuleFileAlias()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>createModuleFile</methodName>
      <methodSignature>createModuleFile()</methodSignature>
      <fullMethod>createModuleFile()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>93.75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>createModuleFileTest</methodName>
      <methodSignature>createModuleFileTest()</methodSignature>
      <fullMethod>createModuleFileTest()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>loadBefore</methodName>
      <methodSignature>loadBefore($data)</methodSignature>
      <fullMethod>loadBefore($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>load</methodName>
      <methodSignature>load()</methodSignature>
      <fullMethod>load()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>unload</methodName>
      <methodSignature>unload()</methodSignature>
      <fullMethod>unload()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>registerJson</methodName>
      <methodSignature>registerJson()</methodSignature>
      <fullMethod>registerJson()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>dump</methodName>
      <methodSignature>dump($type)</methodSignature>
      <fullMethod>dump($type)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>deleteModuleFolder</methodName>
      <methodSignature>deleteModuleFolder()</methodSignature>
      <fullMethod>deleteModuleFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>delete</methodName>
      <methodSignature>delete()</methodSignature>
      <fullMethod>delete()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>registerModule</methodName>
      <methodSignature>registerModule()</methodSignature>
      <fullMethod>registerModule()</fullMethod>
      <crap>7.32</crap>
      <complexity>7</complexity>
      <coverage>81.25</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>registerAfterModule</methodName>
      <methodSignature>registerAfterModule()</methodSignature>
      <fullMethod>registerAfterModule()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>registerBeforeModule</methodName>
      <methodSignature>registerBeforeModule()</methodSignature>
      <fullMethod>registerBeforeModule()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>getApplicationConfigArray</methodName>
      <methodSignature>getApplicationConfigArray()</methodSignature>
      <fullMethod>getApplicationConfigArray()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>getApplicationConfig</methodName>
      <methodSignature>getApplicationConfig()</methodSignature>
      <fullMethod>getApplicationConfig()</fullMethod>
      <crap>4.68</crap>
      <complexity>3</complexity>
      <coverage>42.86</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>unregisterModule</methodName>
      <methodSignature>unregisterModule()</methodSignature>
      <fullMethod>unregisterModule()</fullMethod>
      <crap>3.01</crap>
      <complexity>3</complexity>
      <coverage>90.91</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>push</methodName>
      <methodSignature>push()</methodSignature>
      <fullMethod>push()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>setJsonService</methodName>
      <methodSignature>setJsonService(\Gear\Service\Constructor\JsonService $jsonService)</methodSignature>
      <fullMethod>setJsonService(\Gear\Service\Constructor\JsonService $jsonService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>getJsonService</methodName>
      <methodSignature>getJsonService()</methodSignature>
      <fullMethod>getJsonService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ModuleService</className>
      <methodName>setOptions</methodName>
      <methodSignature>setOptions($optionsParam = array())</methodSignature>
      <fullMethod>setOptions($optionsParam = array())</fullMethod>
      <crap>9.8</crap>
      <complexity>9</complexity>
      <coverage>78.57</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptService</className>
      <methodName>setLocation</methodName>
      <methodSignature>setLocation($location)</methodSignature>
      <fullMethod>setLocation($location)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptService</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptService</className>
      <methodName>run</methodName>
      <methodSignature>run($cmd)</methodSignature>
      <fullMethod>run($cmd)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptService</className>
      <methodName>getCurrent</methodName>
      <methodSignature>getCurrent()</methodSignature>
      <fullMethod>getCurrent()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptService</className>
      <methodName>setCurrent</methodName>
      <methodSignature>setCurrent($current)</methodSignature>
      <fullMethod>setCurrent($current)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptServiceTrait</className>
      <methodName>setScriptService</methodName>
      <methodSignature>setScriptService(ScriptService $scriptService)</methodSignature>
      <fullMethod>setScriptService(ScriptService $scriptService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ScriptServiceTrait</className>
      <methodName>getScriptService</methodName>
      <methodSignature>getScriptService()</methodSignature>
      <fullMethod>getScriptService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>createTests</methodName>
      <methodSignature>createTests()</methodSignature>
      <fullMethod>createTests()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>createBootstrap</methodName>
      <methodSignature>createBootstrap()</methodSignature>
      <fullMethod>createBootstrap()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestService</className>
      <methodName>createAbstractFile</methodName>
      <methodSignature>createAbstractFile()</methodSignature>
      <fullMethod>createAbstractFile()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>getSrc</methodName>
      <methodSignature>getSrc()</methodSignature>
      <fullMethod>getSrc()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>setSrc</methodName>
      <methodSignature>setSrc($src)</methodSignature>
      <fullMethod>setSrc($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>setDb</methodName>
      <methodSignature>setDb($db)</methodSignature>
      <fullMethod>setDb($db)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>getClassName</methodName>
      <methodSignature>getClassName()</methodSignature>
      <fullMethod>getClassName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>setClassName</methodName>
      <methodSignature>setClassName($className)</methodSignature>
      <fullMethod>setClassName($className)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>getTable</methodName>
      <methodSignature>getTable()</methodSignature>
      <fullMethod>getTable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>setTable</methodName>
      <methodSignature>setTable($table)</methodSignature>
      <fullMethod>setTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>getTableName</methodName>
      <methodSignature>getTableName()</methodSignature>
      <fullMethod>getTableName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>setTableName</methodName>
      <methodSignature>setTableName($tableName)</methodSignature>
      <fullMethod>setTableName($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>setTableData</methodName>
      <methodSignature>setTableData(array $tableData)</methodSignature>
      <fullMethod>setTableData(array $tableData)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractMvcService</className>
      <methodName>populateTableObject</methodName>
      <methodSignature>populateTableObject()</methodSignature>
      <fullMethod>populateTableObject()</fullMethod>
      <crap>2.02</crap>
      <complexity>2</complexity>
      <coverage>83.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>generateForLightModule</methodName>
      <methodSignature>generateForLightModule($options)</methodSignature>
      <fullMethod>generateForLightModule($options)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getEntityName</methodName>
      <methodSignature>getEntityName()</methodSignature>
      <fullMethod>getEntityName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getUploadDir</methodName>
      <methodSignature>getUploadDir()</methodSignature>
      <fullMethod>getUploadDir()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getRefDir</methodName>
      <methodSignature>getRefDir()</methodSignature>
      <fullMethod>getRefDir()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeUploadImageConfigAssociation</methodName>
      <methodSignature>mergeUploadImageConfigAssociation()</methodSignature>
      <fullMethod>mergeUploadImageConfigAssociation()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>createUploadImageConfig</methodName>
      <methodSignature>createUploadImageConfig($size)</methodSignature>
      <fullMethod>createUploadImageConfig($size)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeUploadImageColumn</methodName>
      <methodSignature>mergeUploadImageColumn()</methodSignature>
      <fullMethod>mergeUploadImageColumn()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>generateEmptyUploadImageLine</methodName>
      <methodSignature>generateEmptyUploadImageLine($tableNameUrl)</methodSignature>
      <fullMethod>generateEmptyUploadImageLine($tableNameUrl)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>generateUploadImageSpecialityLine</methodName>
      <methodSignature>generateUploadImageSpecialityLine($specialityName)</methodSignature>
      <fullMethod>generateUploadImageSpecialityLine($specialityName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>convertUploadImageArrayToString</methodName>
      <methodSignature>convertUploadImageArrayToString($name, $sizes)</methodSignature>
      <fullMethod>convertUploadImageArrayToString($name, $sizes)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>convertArrayBackToString</methodName>
      <methodSignature>convertArrayBackToString($sizeAggregate)</methodSignature>
      <fullMethod>convertArrayBackToString($sizeAggregate)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeUploadImageConfig</methodName>
      <methodSignature>mergeUploadImageConfig($tableName)</methodSignature>
      <fullMethod>mergeUploadImageConfig($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getController</methodName>
      <methodSignature>getController($json)</methodSignature>
      <fullMethod>getController($json)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>decodeJson</methodName>
      <methodSignature>decodeJson()</methodSignature>
      <fullMethod>decodeJson()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>encodeJson</methodName>
      <methodSignature>encodeJson()</methodSignature>
      <fullMethod>encodeJson()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>loadJson</methodName>
      <methodSignature>loadJson()</methodSignature>
      <fullMethod>loadJson()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>setJson</methodName>
      <methodSignature>setJson($json)</methodSignature>
      <fullMethod>setJson($json)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getJson</methodName>
      <methodSignature>getJson()</methodSignature>
      <fullMethod>getJson()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeControllerConfig</methodName>
      <methodSignature>mergeControllerConfig()</methodSignature>
      <fullMethod>mergeControllerConfig()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeServiceManagerConfig</methodName>
      <methodSignature>mergeServiceManagerConfig()</methodSignature>
      <fullMethod>mergeServiceManagerConfig()</fullMethod>
      <crap>11</crap>
      <complexity>11</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getServiceManager</methodName>
      <methodSignature>getServiceManager()</methodSignature>
      <fullMethod>getServiceManager()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeNavigationConfig</methodName>
      <methodSignature>mergeNavigationConfig()</methodSignature>
      <fullMethod>mergeNavigationConfig()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getServiceManagerConfig</methodName>
      <methodSignature>getServiceManagerConfig($controllers = array())</methodSignature>
      <fullMethod>getServiceManagerConfig($controllers = array())</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>mergeRouterConfig</methodName>
      <methodSignature>mergeRouterConfig()</methodSignature>
      <fullMethod>mergeRouterConfig()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>generateForEmptyModule</methodName>
      <methodSignature>generateForEmptyModule()</methodSignature>
      <fullMethod>generateForEmptyModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getLightModuleConfig</methodName>
      <methodSignature>getLightModuleConfig($options = array())</methodSignature>
      <fullMethod>getLightModuleConfig($options = array())</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getControllerPluginConfig</methodName>
      <methodSignature>getControllerPluginConfig()</methodSignature>
      <fullMethod>getControllerPluginConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getModuleConfig</methodName>
      <methodSignature>getModuleConfig($controllers)</methodSignature>
      <fullMethod>getModuleConfig($controllers)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>setUpConfig</methodName>
      <methodSignature>setUpConfig($controller)</methodSignature>
      <fullMethod>setUpConfig($controller)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getEmptyUploadImage</methodName>
      <methodSignature>getEmptyUploadImage()</methodSignature>
      <fullMethod>getEmptyUploadImage()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getControllerConfig</methodName>
      <methodSignature>getControllerConfig($controllers)</methodSignature>
      <fullMethod>getControllerConfig($controllers)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getNavigationConfig</methodName>
      <methodSignature>getNavigationConfig($controllers)</methodSignature>
      <fullMethod>getNavigationConfig($controllers)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getRouteConfig</methodName>
      <methodSignature>getRouteConfig($controllers)</methodSignature>
      <fullMethod>getRouteConfig($controllers)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getDbConfig</methodName>
      <methodSignature>getDbConfig()</methodSignature>
      <fullMethod>getDbConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getDoctrineConfig</methodName>
      <methodSignature>getDoctrineConfig()</methodSignature>
      <fullMethod>getDoctrineConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getAssetConfig</methodName>
      <methodSignature>getAssetConfig()</methodSignature>
      <fullMethod>getAssetConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getTranslatorConfig</methodName>
      <methodSignature>getTranslatorConfig()</methodSignature>
      <fullMethod>getTranslatorConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getViewConfig</methodName>
      <methodSignature>getViewConfig()</methodSignature>
      <fullMethod>getViewConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>getLanguageService</methodName>
      <methodSignature>getLanguageService()</methodSignature>
      <fullMethod>getLanguageService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ConfigService</className>
      <methodName>setLanguageService</methodName>
      <methodSignature>setLanguageService($languageService)</methodSignature>
      <fullMethod>setLanguageService($languageService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerPluginService</className>
      <methodName>mergeControllerPlugin</methodName>
      <methodSignature>mergeControllerPlugin()</methodSignature>
      <fullMethod>mergeControllerPlugin()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerPluginService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>generateForEmptyModule</methodName>
      <methodSignature>generateForEmptyModule()</methodSignature>
      <fullMethod>generateForEmptyModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>getControllerSpeciality</methodName>
      <methodSignature>getControllerSpeciality()</methodSignature>
      <fullMethod>getControllerSpeciality()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>checkImagemService</methodName>
      <methodSignature>checkImagemService(&amp;$file)</methodSignature>
      <fullMethod>checkImagemService(&amp;$file)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>setPreValidateFromColumns</methodName>
      <methodSignature>setPreValidateFromColumns()</methodSignature>
      <fullMethod>setPreValidateFromColumns()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>setPreShowFromColumns</methodName>
      <methodSignature>setPreShowFromColumns()</methodSignature>
      <fullMethod>setPreShowFromColumns()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>merge</methodName>
      <methodSignature>merge($page, $json)</methodSignature>
      <fullMethod>merge($page, $json)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerService</className>
      <methodName>implement</methodName>
      <methodSignature>implement($controller)</methodSignature>
      <fullMethod>implement($controller)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>getMetadata</methodName>
      <methodSignature>getMetadata()</methodSignature>
      <fullMethod>getMetadata()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable(\Zend\Db\Metadata\Object\TableObject $dbTable)</methodSignature>
      <fullMethod>introspectFromTable(\Zend\Db\Metadata\Object\TableObject $dbTable)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>replaceUserEntity</methodName>
      <methodSignature>replaceUserEntity()</methodSignature>
      <fullMethod>replaceUserEntity()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>fixSnifferErrors</methodName>
      <methodSignature>fixSnifferErrors()</methodSignature>
      <fullMethod>fixSnifferErrors()</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>breakEmptyChar</methodName>
      <methodSignature>breakEmptyChar($line, $lineNumber)</methodSignature>
      <fullMethod>breakEmptyChar($line, $lineNumber)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>transformNotation</methodName>
      <methodSignature>transformNotation($tableName, $indexes)</methodSignature>
      <fullMethod>transformNotation($tableName, $indexes)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>breakDoctrineTableNotation</methodName>
      <methodSignature>breakDoctrineTableNotation($line, $lineNumber)</methodSignature>
      <fullMethod>breakDoctrineTableNotation($line, $lineNumber)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>replace</methodName>
      <methodSignature>replace($toReplace, $replace)</methodSignature>
      <fullMethod>replace($toReplace, $replace)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>getDoctrineService</methodName>
      <methodSignature>getDoctrineService()</methodSignature>
      <fullMethod>getDoctrineService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>createFromTable</methodName>
      <methodSignature>createFromTable($table)</methodSignature>
      <fullMethod>createFromTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>createFromMetadata</methodName>
      <methodSignature>createFromMetadata()</methodSignature>
      <fullMethod>createFromMetadata()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>getTables</methodName>
      <methodSignature>getTables()</methodSignature>
      <fullMethod>getTables()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>getNames</methodName>
      <methodSignature>getNames()</methodSignature>
      <fullMethod>getNames()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>excludeMapping</methodName>
      <methodSignature>excludeMapping()</methodSignature>
      <fullMethod>excludeMapping()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>excludeEntities</methodName>
      <methodSignature>excludeEntities($names = array())</methodSignature>
      <fullMethod>excludeEntities($names = array())</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>setUpEntities</methodName>
      <methodSignature>setUpEntities($data)</methodSignature>
      <fullMethod>setUpEntities($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityService</className>
      <methodName>setUpEntity</methodName>
      <methodSignature>setUpEntity($data)</methodSignature>
      <fullMethod>setUpEntity($data)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>createFormFactory</methodName>
      <methodSignature>createFormFactory()</methodSignature>
      <fullMethod>createFormFactory()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>createSearchFormFactory</methodName>
      <methodSignature>createSearchFormFactory()</methodSignature>
      <fullMethod>createSearchFormFactory()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FactoryService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterService</className>
      <methodName>getFilterValues</methodName>
      <methodSignature>getFilterValues()</methodSignature>
      <fullMethod>getFilterValues()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterService</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FilterService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>getArrayData</methodName>
      <methodSignature>getArrayData()</methodSignature>
      <fullMethod>getArrayData()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>getFieldData</methodName>
      <methodSignature>getFieldData()</methodSignature>
      <fullMethod>getFieldData()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>getEntityFixture</methodName>
      <methodSignature>getEntityFixture($iterator)</methodSignature>
      <fullMethod>getEntityFixture($iterator)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>instrospect</methodName>
      <methodSignature>instrospect()</methodSignature>
      <fullMethod>instrospect()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($db)</methodSignature>
      <fullMethod>introspectFromTable($db)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FixtureService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>getSpecialityService</methodName>
      <methodSignature>getSpecialityService()</methodSignature>
      <fullMethod>getSpecialityService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>getFormInputValues</methodName>
      <methodSignature>getFormInputValues($table)</methodSignature>
      <fullMethod>getFormInputValues($table)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>getColumnVar</methodName>
      <methodSignature>getColumnVar($column)</methodSignature>
      <fullMethod>getColumnVar($column)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable()</methodSignature>
      <fullMethod>introspectFromTable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>createAbstractForm</methodName>
      <methodSignature>createAbstractForm()</methodSignature>
      <fullMethod>createAbstractForm()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>LayoutService</className>
      <methodName>generate</methodName>
      <methodSignature>generate()</methodSignature>
      <fullMethod>generate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>getAbstractFromSrc</methodName>
      <methodSignature>getAbstractFromSrc()</methodSignature>
      <fullMethod>getAbstractFromSrc()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>create</methodName>
      <methodSignature>create(Src $src)</methodSignature>
      <fullMethod>create(Src $src)</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>createSingleSrc</methodName>
      <methodSignature>createSingleSrc()</methodSignature>
      <fullMethod>createSingleSrc()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>setUp</methodName>
      <methodSignature>setUp()</methodSignature>
      <fullMethod>setUp()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable()</methodSignature>
      <fullMethod>introspectFromTable()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>useImageService</methodName>
      <methodSignature>useImageService()</methodSignature>
      <fullMethod>useImageService()</fullMethod>
      <crap>2.26</crap>
      <complexity>2</complexity>
      <coverage>60</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>calculateAliasesStack</methodName>
      <methodSignature>calculateAliasesStack()</methodSignature>
      <fullMethod>calculateAliasesStack()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>anonymous function</methodName>
      <methodSignature>anonymous function($a, $b)</methodSignature>
      <fullMethod>anonymous function($a, $b)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>setMappingService</methodName>
      <methodSignature>setMappingService($mappingService)</methodSignature>
      <fullMethod>setMappingService($mappingService)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>getMappingService</methodName>
      <methodSignature>getMappingService()</methodSignature>
      <fullMethod>getMappingService()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryService</className>
      <methodName>getMap</methodName>
      <methodSignature>getMap()</methodSignature>
      <fullMethod>getMap()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>getAliaseStack</methodName>
      <methodSignature>getAliaseStack()</methodSignature>
      <fullMethod>getAliaseStack()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>setAliaseStack</methodName>
      <methodSignature>setAliaseStack(array $aliaseStack)</methodSignature>
      <fullMethod>setAliaseStack(array $aliaseStack)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>getMainAliase</methodName>
      <methodSignature>getMainAliase()</methodSignature>
      <fullMethod>getMainAliase()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>convertDataTypeToInternalType</methodName>
      <methodSignature>convertDataTypeToInternalType()</methodSignature>
      <fullMethod>convertDataTypeToInternalType()</fullMethod>
      <crap>10.6</crap>
      <complexity>10</complexity>
      <coverage>81.82</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>concatenateAliase</methodName>
      <methodSignature>concatenateAliase($tableAliase)</methodSignature>
      <fullMethod>concatenateAliase($tableAliase)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>getFirstValidColumnFromReferencedTable</methodName>
      <methodSignature>getFirstValidColumnFromReferencedTable($tableReference)</methodSignature>
      <fullMethod>getFirstValidColumnFromReferencedTable($tableReference)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>addAliaseStack</methodName>
      <methodSignature>addAliaseStack($newAliase)</methodSignature>
      <fullMethod>addAliaseStack($newAliase)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>extractAliaseFromTableName</methodName>
      <methodSignature>extractAliaseFromTableName($tableName)</methodSignature>
      <fullMethod>extractAliaseFromTableName($tableName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>anonymous function</methodName>
      <methodSignature>anonymous function($a, $b)</methodSignature>
      <fullMethod>anonymous function($a, $b)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>extractTypeFromColumn</methodName>
      <methodSignature>extractTypeFromColumn($column)</methodSignature>
      <fullMethod>extractTypeFromColumn($column)</fullMethod>
      <crap>3.14</crap>
      <complexity>3</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>extractAliaseFromColumn</methodName>
      <methodSignature>extractAliaseFromColumn($column)</methodSignature>
      <fullMethod>extractAliaseFromColumn($column)</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>extractTableFromColumn</methodName>
      <methodSignature>extractTableFromColumn($column)</methodSignature>
      <fullMethod>extractTableFromColumn($column)</fullMethod>
      <crap>9.88</crap>
      <complexity>7</complexity>
      <coverage>61.11</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>extractRefFromColumn</methodName>
      <methodSignature>extractRefFromColumn($column)</methodSignature>
      <fullMethod>extractRefFromColumn($column)</fullMethod>
      <crap>2.75</crap>
      <complexity>2</complexity>
      <coverage>42.86</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>getRepositoryMapping</methodName>
      <methodSignature>getRepositoryMapping()</methodSignature>
      <fullMethod>getRepositoryMapping()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>getCountTableHead</methodName>
      <methodSignature>getCountTableHead()</methodSignature>
      <fullMethod>getCountTableHead()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>convertBooleanToString</methodName>
      <methodSignature>convertBooleanToString($boolean)</methodSignature>
      <fullMethod>convertBooleanToString($boolean)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>toString</methodName>
      <methodSignature>toString()</methodSignature>
      <fullMethod>toString()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MappingService</className>
      <methodName>printArray</methodName>
      <methodSignature>printArray($name, $label, $ref, $type, $aliase, $table)</methodSignature>
      <fullMethod>printArray($name, $label, $ref, $type, $aliase, $table)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SearchService</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SearchService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SearchService</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SearchService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($dbObject)</methodSignature>
      <fullMethod>introspectFromTable($dbObject)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>getServiceManagerFile</methodName>
      <methodSignature>getServiceManagerFile()</methodSignature>
      <fullMethod>getServiceManagerFile()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($dbObject)</methodSignature>
      <fullMethod>introspectFromTable($dbObject)</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>setInsertServiceFromColumns</methodName>
      <methodSignature>setInsertServiceFromColumns(&amp;$fileCreator)</methodSignature>
      <fullMethod>setInsertServiceFromColumns(&amp;$fileCreator)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>setUpdateServiceFromColumns</methodName>
      <methodSignature>setUpdateServiceFromColumns(&amp;$fileCreator)</methodSignature>
      <fullMethod>setUpdateServiceFromColumns(&amp;$fileCreator)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>create</methodName>
      <methodSignature>create($options)</methodSignature>
      <fullMethod>create($options)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>delete</methodName>
      <methodSignature>delete()</methodSignature>
      <fullMethod>delete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceService</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ValueObjectService</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ValueObjectService</className>
      <methodName>hasAbstract</methodName>
      <methodSignature>hasAbstract()</methodSignature>
      <fullMethod>hasAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ValueObjectService</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ValueObjectService</className>
      <methodName>create</methodName>
      <methodSignature>create($src)</methodSignature>
      <fullMethod>create($src)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createActionView</methodName>
      <methodSignature>createActionView($action)</methodSignature>
      <fullMethod>createActionView($action)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>getViewValues</methodName>
      <methodSignature>getViewValues($action)</methodSignature>
      <fullMethod>getViewValues($action)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createTemplateUpload</methodName>
      <methodSignature>createTemplateUpload()</methodSignature>
      <fullMethod>createTemplateUpload()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createTemplateForm</methodName>
      <methodSignature>createTemplateForm()</methodSignature>
      <fullMethod>createTemplateForm()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>copyBasicLayout</methodName>
      <methodSignature>copyBasicLayout()</methodSignature>
      <fullMethod>copyBasicLayout()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createTemplateControl</methodName>
      <methodSignature>createTemplateControl()</methodSignature>
      <fullMethod>createTemplateControl()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createTemplateDownload</methodName>
      <methodSignature>createTemplateDownload()</methodSignature>
      <fullMethod>createTemplateDownload()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createActionImage</methodName>
      <methodSignature>createActionImage($action)</methodSignature>
      <fullMethod>createActionImage($action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createFormElements</methodName>
      <methodSignature>createFormElements()</methodSignature>
      <fullMethod>createFormElements()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createActionAdd</methodName>
      <methodSignature>createActionAdd($action)</methodSignature>
      <fullMethod>createActionAdd($action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createActionEdit</methodName>
      <methodSignature>createActionEdit($action)</methodSignature>
      <fullMethod>createActionEdit($action)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createSearch</methodName>
      <methodSignature>createSearch()</methodSignature>
      <fullMethod>createSearch()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>getSearchElements</methodName>
      <methodSignature>getSearchElements()</methodSignature>
      <fullMethod>getSearchElements()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createListView</methodName>
      <methodSignature>createListView()</methodSignature>
      <fullMethod>createListView()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createListRowView</methodName>
      <methodSignature>createListRowView()</methodSignature>
      <fullMethod>createListRowView()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>getListRowElements</methodName>
      <methodSignature>getListRowElements()</methodSignature>
      <fullMethod>getListRowElements()</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createActionList</methodName>
      <methodSignature>createActionList($action)</methodSignature>
      <fullMethod>createActionList($action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createDirectoryFromIntrospect</methodName>
      <methodSignature>createDirectoryFromIntrospect($controller)</methodSignature>
      <fullMethod>createDirectoryFromIntrospect($controller)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>create404View</methodName>
      <methodSignature>create404View()</methodSignature>
      <fullMethod>create404View()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createDirectory</methodName>
      <methodSignature>createDirectory($page)</methodSignature>
      <fullMethod>createDirectory($page)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createFromPage</methodName>
      <methodSignature>createFromPage(\Gear\ValueObject\Action $page)</methodSignature>
      <fullMethod>createFromPage(\Gear\ValueObject\Action $page)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createDeleteView</methodName>
      <methodSignature>createDeleteView()</methodSignature>
      <fullMethod>createDeleteView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createLayoutSuccessView</methodName>
      <methodSignature>createLayoutSuccessView()</methodSignature>
      <fullMethod>createLayoutSuccessView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createLayoutDeleteSuccessView</methodName>
      <methodSignature>createLayoutDeleteSuccessView()</methodSignature>
      <fullMethod>createLayoutDeleteSuccessView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createLayoutDeleteFailView</methodName>
      <methodSignature>createLayoutDeleteFailView()</methodSignature>
      <fullMethod>createLayoutDeleteFailView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createLayoutView</methodName>
      <methodSignature>createLayoutView()</methodSignature>
      <fullMethod>createLayoutView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createBreadcrumbView</methodName>
      <methodSignature>createBreadcrumbView()</methodSignature>
      <fullMethod>createBreadcrumbView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createErrorView</methodName>
      <methodSignature>createErrorView()</methodSignature>
      <fullMethod>createErrorView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>createIndexView</methodName>
      <methodSignature>createIndexView()</methodSignature>
      <fullMethod>createIndexView()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>getTimeTest</methodName>
      <methodSignature>getTimeTest()</methodSignature>
      <fullMethod>getTimeTest()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>setTimeTest</methodName>
      <methodSignature>setTimeTest(\DateTime $timeTest)</methodSignature>
      <fullMethod>setTimeTest(\DateTime $timeTest)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>getLocationDir</methodName>
      <methodSignature>getLocationDir()</methodSignature>
      <fullMethod>getLocationDir()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>setLocationDir</methodName>
      <methodSignature>setLocationDir($locationDir)</methodSignature>
      <fullMethod>setLocationDir($locationDir)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ViewService</className>
      <methodName>getSpecialityService</methodName>
      <methodSignature>getSpecialityService()</methodSignature>
      <fullMethod>getSpecialityService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>dump</methodName>
      <methodSignature>dump($type)</methodSignature>
      <fullMethod>dump($type)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>create</methodName>
      <methodSignature>create()</methodSignature>
      <fullMethod>create()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>createVirtualHost</methodName>
      <methodSignature>createVirtualHost(Project $project)</methodSignature>
      <fullMethod>createVirtualHost(Project $project)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>createNFS</methodName>
      <methodSignature>createNFS(Project $project)</methodSignature>
      <fullMethod>createNFS(Project $project)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>createGit</methodName>
      <methodSignature>createGit(Project $project)</methodSignature>
      <fullMethod>createGit(Project $project)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>createBuild</methodName>
      <methodSignature>createBuild(Project $project)</methodSignature>
      <fullMethod>createBuild(Project $project)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>delete</methodName>
      <methodSignature>delete($data)</methodSignature>
      <fullMethod>delete($data)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>getProjectFolder</methodName>
      <methodSignature>getProjectFolder()</methodSignature>
      <fullMethod>getProjectFolder()</fullMethod>
      <crap>8.12</crap>
      <complexity>5</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>getFolder</methodName>
      <methodSignature>getFolder()</methodSignature>
      <fullMethod>getFolder()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>setUpEnvironment</methodName>
      <methodSignature>setUpEnvironment($data)</methodSignature>
      <fullMethod>setUpEnvironment($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>setUpGlobal</methodName>
      <methodSignature>setUpGlobal(array $data)</methodSignature>
      <fullMethod>setUpGlobal(array $data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>setUpLocal</methodName>
      <methodSignature>setUpLocal($data)</methodSignature>
      <fullMethod>setUpLocal($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>setUpSqlite</methodName>
      <methodSignature>setUpSqlite(array $data)</methodSignature>
      <fullMethod>setUpSqlite(array $data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>setUpMysql</methodName>
      <methodSignature>setUpMysql(array $data)</methodSignature>
      <fullMethod>setUpMysql(array $data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>getConfigService</methodName>
      <methodSignature>getConfigService()</methodSignature>
      <fullMethod>getConfigService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ProjectService</className>
      <methodName>getJsonService</methodName>
      <methodSignature>getJsonService()</methodSignature>
      <fullMethod>getJsonService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SpecialityService</className>
      <methodName>getSpecialityByName</methodName>
      <methodSignature>getSpecialityByName($name)</methodSignature>
      <fullMethod>getSpecialityByName($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>SpecialityService</className>
      <methodName>factory</methodName>
      <methodSignature>factory($name)</methodSignature>
      <fullMethod>factory($name)</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TableService</className>
      <methodName>getTable</methodName>
      <methodSignature>getTable($tableName)</methodSignature>
      <fullMethod>getTable($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TemplateService</className>
      <methodName>getRenderer</methodName>
      <methodSignature>getRenderer()</methodSignature>
      <fullMethod>getRenderer()</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TemplateService</className>
      <methodName>setRenderer</methodName>
      <methodSignature>setRenderer($renderer)</methodSignature>
      <fullMethod>setRenderer($renderer)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TemplateService</className>
      <methodName>render</methodName>
      <methodSignature>render($templateName, $config)</methodSignature>
      <fullMethod>render($templateName, $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>generateForEmptyModule</methodName>
      <methodSignature>generateForEmptyModule()</methodSignature>
      <fullMethod>generateForEmptyModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>5.01</crap>
      <complexity>2</complexity>
      <coverage>9.09</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>acceptanceUploadImage</methodName>
      <methodSignature>acceptanceUploadImage()</methodSignature>
      <fullMethod>acceptanceUploadImage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildUpAcceptance</methodName>
      <methodSignature>buildUpAcceptance()</methodSignature>
      <fullMethod>buildUpAcceptance()</fullMethod>
      <crap>8</crap>
      <complexity>8</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildListSteps</methodName>
      <methodSignature>buildListSteps()</methodSignature>
      <fullMethod>buildListSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildCreateSteps</methodName>
      <methodSignature>buildCreateSteps()</methodSignature>
      <fullMethod>buildCreateSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildEditSteps</methodName>
      <methodSignature>buildEditSteps()</methodSignature>
      <fullMethod>buildEditSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildDeleteSteps</methodName>
      <methodSignature>buildDeleteSteps()</methodSignature>
      <fullMethod>buildDeleteSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildViewSteps</methodName>
      <methodSignature>buildViewSteps()</methodSignature>
      <fullMethod>buildViewSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildAbstractCest</methodName>
      <methodSignature>buildAbstractCest()</methodSignature>
      <fullMethod>buildAbstractCest()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>buildAcceptanceSteps</methodName>
      <methodSignature>buildAcceptanceSteps()</methodSignature>
      <fullMethod>buildAcceptanceSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>acceptanceCreate</methodName>
      <methodSignature>acceptanceCreate()</methodSignature>
      <fullMethod>acceptanceCreate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>seeLabels</methodName>
      <methodSignature>seeLabels(&amp;$file, $numberReference = 999, $placeholder = 'seeLabels')</methodSignature>
      <fullMethod>seeLabels(&amp;$file, $numberReference = 999, $placeholder = 'seeLabels')</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>seeValues</methodName>
      <methodSignature>seeValues(&amp;$file, $numberReference = 999, $placeholder = 'seeValues')</methodSignature>
      <fullMethod>seeValues(&amp;$file, $numberReference = 999, $placeholder = 'seeValues')</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>seeInField</methodName>
      <methodSignature>seeInField(&amp;$file, $numberReference = 999, $placeholder = 'seeInFields')</methodSignature>
      <fullMethod>seeInField(&amp;$file, $numberReference = 999, $placeholder = 'seeInFields')</fullMethod>
      <crap>90</crap>
      <complexity>9</complexity>
      <coverage>0</coverage>
      <crapLoad>9</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>fillField</methodName>
      <methodSignature>fillField(&amp;$file, $numberReference = 1500, $placeholder = 'fillField')</methodSignature>
      <fullMethod>fillField(&amp;$file, $numberReference = 1500, $placeholder = 'fillField')</fullMethod>
      <crap>132</crap>
      <complexity>11</complexity>
      <coverage>0</coverage>
      <crapLoad>11</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>acceptanceEdit</methodName>
      <methodSignature>acceptanceEdit()</methodSignature>
      <fullMethod>acceptanceEdit()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>acceptanceView</methodName>
      <methodSignature>acceptanceView()</methodSignature>
      <fullMethod>acceptanceView()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>acceptanceList</methodName>
      <methodSignature>acceptanceList()</methodSignature>
      <fullMethod>acceptanceList()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>acceptanceDelete</methodName>
      <methodSignature>acceptanceDelete()</methodSignature>
      <fullMethod>acceptanceDelete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>createFromPage</methodName>
      <methodSignature>createFromPage(\Gear\ValueObject\Action $page)</methodSignature>
      <fullMethod>createFromPage(\Gear\ValueObject\Action $page)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>getTimeTest</methodName>
      <methodSignature>getTimeTest()</methodSignature>
      <fullMethod>getTimeTest()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AcceptanceTestService</className>
      <methodName>setTimeTest</methodName>
      <methodSignature>setTimeTest($timeTest)</methodSignature>
      <fullMethod>setTimeTest($timeTest)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>createFullSuite</methodName>
      <methodSignature>createFullSuite()</methodSignature>
      <fullMethod>createFullSuite()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>mainBootstrap</methodName>
      <methodSignature>mainBootstrap()</methodSignature>
      <fullMethod>mainBootstrap()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>acceptanceBootstrap</methodName>
      <methodSignature>acceptanceBootstrap()</methodSignature>
      <fullMethod>acceptanceBootstrap()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>functionalBootstrap</methodName>
      <methodSignature>functionalBootstrap()</methodSignature>
      <fullMethod>functionalBootstrap()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>unitBootstrap</methodName>
      <methodSignature>unitBootstrap()</methodSignature>
      <fullMethod>unitBootstrap()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>getBaseUrl</methodName>
      <methodSignature>getBaseUrl()</methodSignature>
      <fullMethod>getBaseUrl()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>guyTester</methodName>
      <methodSignature>guyTester()</methodSignature>
      <fullMethod>guyTester()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>loadSql</methodName>
      <methodSignature>loadSql()</methodSignature>
      <fullMethod>loadSql()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>acceptanceTester</methodName>
      <methodSignature>acceptanceTester()</methodSignature>
      <fullMethod>acceptanceTester()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>acceptanceHelper</methodName>
      <methodSignature>acceptanceHelper()</methodSignature>
      <fullMethod>acceptanceHelper()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>functionalTester</methodName>
      <methodSignature>functionalTester()</methodSignature>
      <fullMethod>functionalTester()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>unitTester</methodName>
      <methodSignature>unitTester()</methodSignature>
      <fullMethod>unitTester()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>functionalHelper</methodName>
      <methodSignature>functionalHelper()</methodSignature>
      <fullMethod>functionalHelper()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>unitHelper</methodName>
      <methodSignature>unitHelper()</methodSignature>
      <fullMethod>unitHelper()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>loginCommons</methodName>
      <methodSignature>loginCommons()</methodSignature>
      <fullMethod>loginCommons()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>codeceptYml</methodName>
      <methodSignature>codeceptYml()</methodSignature>
      <fullMethod>codeceptYml()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>functionalSuiteYml</methodName>
      <methodSignature>functionalSuiteYml()</methodSignature>
      <fullMethod>functionalSuiteYml()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>acceptanceSuiteYml</methodName>
      <methodSignature>acceptanceSuiteYml()</methodSignature>
      <fullMethod>acceptanceSuiteYml()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>unitSuiteYml</methodName>
      <methodSignature>unitSuiteYml()</methodSignature>
      <fullMethod>unitSuiteYml()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>setModule</methodName>
      <methodSignature>setModule(BasicModuleStructure $module)</methodSignature>
      <fullMethod>setModule(BasicModuleStructure $module)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>CodeceptionService</className>
      <methodName>getModule</methodName>
      <methodSignature>getModule()</methodSignature>
      <fullMethod>getModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>implement</methodName>
      <methodSignature>implement($controller)</methodSignature>
      <fullMethod>implement($controller)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>isPrimaryKey</methodName>
      <methodSignature>isPrimaryKey($column)</methodSignature>
      <fullMethod>isPrimaryKey($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>isExcludedKey</methodName>
      <methodSignature>isExcludedKey($column)</methodSignature>
      <fullMethod>isExcludedKey($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>verifyHasNullable</methodName>
      <methodSignature>verifyHasNullable($fileCreator)</methodSignature>
      <fullMethod>verifyHasNullable($fileCreator)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>generateForEmptyModule</methodName>
      <methodSignature>generateForEmptyModule()</methodSignature>
      <fullMethod>generateForEmptyModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>generateAbstractClass</methodName>
      <methodSignature>generateAbstractClass()</methodSignature>
      <fullMethod>generateAbstractClass()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ControllerTestService</className>
      <methodName>merge</methodName>
      <methodSignature>merge($page, $json)</methodSignature>
      <fullMethod>merge($page, $json)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>createUnitTest</methodName>
      <methodSignature>createUnitTest($tableName)</methodSignature>
      <fullMethod>createUnitTest($tableName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getClassMethods</methodName>
      <methodSignature>getClassMethods()</methodSignature>
      <fullMethod>getClassMethods()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getExtraGetter</methodName>
      <methodSignature>getExtraGetter($useMethods)</methodSignature>
      <fullMethod>getExtraGetter($useMethods)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>anonymous function</methodName>
      <methodSignature>anonymous function($value)</methodSignature>
      <fullMethod>anonymous function($value)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getTestGettersNull</methodName>
      <methodSignature>getTestGettersNull()</methodSignature>
      <fullMethod>getTestGettersNull()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getTestSetters</methodName>
      <methodSignature>getTestSetters()</methodSignature>
      <fullMethod>getTestSetters()</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getExtraSetter</methodName>
      <methodSignature>getExtraSetter()</methodSignature>
      <fullMethod>getExtraSetter()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getProvider</methodName>
      <methodSignature>getProvider()</methodSignature>
      <fullMethod>getProvider()</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getMocks</methodName>
      <methodSignature>getMocks()</methodSignature>
      <fullMethod>getMocks()</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>getParams</methodName>
      <methodSignature>getParams()</methodSignature>
      <fullMethod>getParams()</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>EntityTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FormTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>generateForEmptyModule</methodName>
      <methodSignature>generateForEmptyModule()</methodSignature>
      <fullMethod>generateForEmptyModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildUploadImageSteps</methodName>
      <methodSignature>buildUploadImageSteps()</methodSignature>
      <fullMethod>buildUploadImageSteps()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>functionalUploadImage</methodName>
      <methodSignature>functionalUploadImage()</methodSignature>
      <fullMethod>functionalUploadImage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildUpFunctional</methodName>
      <methodSignature>buildUpFunctional()</methodSignature>
      <fullMethod>buildUpFunctional()</fullMethod>
      <crap>10.33</crap>
      <complexity>10</complexity>
      <coverage>85.19</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildAbstractCest</methodName>
      <methodSignature>buildAbstractCest()</methodSignature>
      <fullMethod>buildAbstractCest()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildFunctionalSteps</methodName>
      <methodSignature>buildFunctionalSteps()</methodSignature>
      <fullMethod>buildFunctionalSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildListSteps</methodName>
      <methodSignature>buildListSteps()</methodSignature>
      <fullMethod>buildListSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildCreateSteps</methodName>
      <methodSignature>buildCreateSteps()</methodSignature>
      <fullMethod>buildCreateSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildEditSteps</methodName>
      <methodSignature>buildEditSteps()</methodSignature>
      <fullMethod>buildEditSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildDeleteSteps</methodName>
      <methodSignature>buildDeleteSteps()</methodSignature>
      <fullMethod>buildDeleteSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>buildViewSteps</methodName>
      <methodSignature>buildViewSteps()</methodSignature>
      <fullMethod>buildViewSteps()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>functionalCreate</methodName>
      <methodSignature>functionalCreate()</methodSignature>
      <fullMethod>functionalCreate()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>functionalEdit</methodName>
      <methodSignature>functionalEdit()</methodSignature>
      <fullMethod>functionalEdit()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>functionalView</methodName>
      <methodSignature>functionalView()</methodSignature>
      <fullMethod>functionalView()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>viewSeeValues</methodName>
      <methodSignature>viewSeeValues($file, $numberReference = 500, $placeholder = 'viewSeeValues')</methodSignature>
      <fullMethod>viewSeeValues($file, $numberReference = 500, $placeholder = 'viewSeeValues')</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>viewSeeLabels</methodName>
      <methodSignature>viewSeeLabels($file, $placeholder = 'viewSeeLabels')</methodSignature>
      <fullMethod>viewSeeLabels($file, $placeholder = 'viewSeeLabels')</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>functionalList</methodName>
      <methodSignature>functionalList()</methodSignature>
      <fullMethod>functionalList()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>functionalDelete</methodName>
      <methodSignature>functionalDelete()</methodSignature>
      <fullMethod>functionalDelete()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>createFromPage</methodName>
      <methodSignature>createFromPage(\Gear\ValueObject\Action $page)</methodSignature>
      <fullMethod>createFromPage(\Gear\ValueObject\Action $page)</fullMethod>
      <crap>1.81</crap>
      <complexity>1</complexity>
      <coverage>6.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>getTimeTest</methodName>
      <methodSignature>getTimeTest()</methodSignature>
      <fullMethod>getTimeTest()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTestService</className>
      <methodName>setTimeTest</methodName>
      <methodSignature>setTimeTest($timeTest)</methodSignature>
      <fullMethod>setTimeTest($timeTest)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>MockService</className>
      <methodName>getMockForTableStructure</methodName>
      <methodSignature>getMockForTableStructure()</methodSignature>
      <fullMethod>getMockForTableStructure()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>generateForEmptyModule</methodName>
      <methodSignature>generateForEmptyModule()</methodSignature>
      <fullMethod>generateForEmptyModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>layoutPage</methodName>
      <methodSignature>layoutPage()</methodSignature>
      <fullMethod>layoutPage()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>createPage</methodName>
      <methodSignature>createPage()</methodSignature>
      <fullMethod>createPage()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>editPage</methodName>
      <methodSignature>editPage()</methodSignature>
      <fullMethod>editPage()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>viewPage</methodName>
      <methodSignature>viewPage()</methodSignature>
      <fullMethod>viewPage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>uploadImagePage</methodName>
      <methodSignature>uploadImagePage()</methodSignature>
      <fullMethod>uploadImagePage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>listPage</methodName>
      <methodSignature>listPage()</methodSignature>
      <fullMethod>listPage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>deletePage</methodName>
      <methodSignature>deletePage()</methodSignature>
      <fullMethod>deletePage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>PageTestService</className>
      <methodName>createFromPage</methodName>
      <methodSignature>createFromPage(\Gear\ValueObject\Action $page)</methodSignature>
      <fullMethod>createFromPage(\Gear\ValueObject\Action $page)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryTestService</className>
      <methodName>createAbstract</methodName>
      <methodSignature>createAbstract($className = null)</methodSignature>
      <fullMethod>createAbstract($className = null)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryTestService</className>
      <methodName>createFromSrc</methodName>
      <methodSignature>createFromSrc(Src $src)</methodSignature>
      <fullMethod>createFromSrc(Src $src)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RepositoryTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable(Db $table)</methodSignature>
      <fullMethod>introspectFromTable(Db $table)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceTestService</className>
      <methodName>getFirstString</methodName>
      <methodSignature>getFirstString()</methodSignature>
      <fullMethod>getFirstString()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceTestService</className>
      <methodName>introspectFromTable</methodName>
      <methodSignature>introspectFromTable($table)</methodSignature>
      <fullMethod>introspectFromTable($table)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getDependencyName</methodName>
      <methodSignature>getDependencyName($dependency)</methodSignature>
      <fullMethod>getDependencyName($dependency)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>resolveUse</methodName>
      <methodSignature>resolveUse($entity)</methodSignature>
      <fullMethod>resolveUse($entity)</fullMethod>
      <crap>4.02</crap>
      <complexity>4</complexity>
      <coverage>88.89</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getUses</methodName>
      <methodSignature>getUses($src)</methodSignature>
      <fullMethod>getUses($src)</fullMethod>
      <crap>9.94</crap>
      <complexity>7</complexity>
      <coverage>60.87</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>querySrcName</methodName>
      <methodSignature>querySrcName($dependency)</methodSignature>
      <fullMethod>querySrcName($dependency)</fullMethod>
      <crap>4.18</crap>
      <complexity>4</complexity>
      <coverage>77.78</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getAttribute</methodName>
      <methodSignature>getAttribute($dependency)</methodSignature>
      <fullMethod>getAttribute($dependency)</fullMethod>
      <crap>2.01</crap>
      <complexity>2</complexity>
      <coverage>88.89</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getAttributes</methodName>
      <methodSignature>getAttributes($src, $scope = 'protected')</methodSignature>
      <fullMethod>getAttributes($src, $scope = 'protected')</fullMethod>
      <crap>8.81</crap>
      <complexity>7</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>resolveAttribute</methodName>
      <methodSignature>resolveAttribute($dependency, $scope = 'protected')</methodSignature>
      <fullMethod>resolveAttribute($dependency, $scope = 'protected')</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getInjection</methodName>
      <methodSignature>getInjection($dependency)</methodSignature>
      <fullMethod>getInjection($dependency)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getInjections</methodName>
      <methodSignature>getInjections($src)</methodSignature>
      <fullMethod>getInjections($src)</fullMethod>
      <crap>6.84</crap>
      <complexity>6</complexity>
      <coverage>71.43</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>concatVar</methodName>
      <methodSignature>concatVar($dependencyName, $srcName)</methodSignature>
      <fullMethod>concatVar($dependencyName, $srcName)</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getSrcTypeFromDependency</methodName>
      <methodSignature>getSrcTypeFromDependency($dependencyName)</methodSignature>
      <fullMethod>getSrcTypeFromDependency($dependencyName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getSrcNameFromDependency</methodName>
      <methodSignature>getSrcNameFromDependency($dependencyName)</methodSignature>
      <fullMethod>getSrcNameFromDependency($dependencyName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>resolveInjection</methodName>
      <methodSignature>resolveInjection($dependencyName, $src)</methodSignature>
      <fullMethod>resolveInjection($dependencyName, $src)</fullMethod>
      <crap>4.25</crap>
      <complexity>4</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getTestInjections</methodName>
      <methodSignature>getTestInjections($src)</methodSignature>
      <fullMethod>getTestInjections($src)</fullMethod>
      <crap>42</crap>
      <complexity>6</complexity>
      <coverage>0</coverage>
      <crapLoad>6</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getServiceManagerName</methodName>
      <methodSignature>getServiceManagerName($dependency)</methodSignature>
      <fullMethod>getServiceManagerName($dependency)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>splitSrcNames</methodName>
      <methodSignature>splitSrcNames($toSplit)</methodSignature>
      <fullMethod>splitSrcNames($toSplit)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>setStringService</methodName>
      <methodSignature>setStringService(StringService $fileWriter)</methodSignature>
      <fullMethod>setStringService(StringService $fileWriter)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getStringService</methodName>
      <methodSignature>getStringService()</methodSignature>
      <fullMethod>getStringService()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>str</methodName>
      <methodSignature>str($type, $message)</methodSignature>
      <fullMethod>str($type, $message)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator(ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator(ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>setConfig</methodName>
      <methodSignature>setConfig(Config $config)</methodSignature>
      <fullMethod>setConfig(Config $config)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ClassService</className>
      <methodName>getConfig</methodName>
      <methodSignature>getConfig()</methodSignature>
      <fullMethod>getConfig()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>str</methodName>
      <methodSignature>str($type = null, $data = null)</methodSignature>
      <fullMethod>str($type = null, $data = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>getPieces</methodName>
      <methodSignature>getPieces($data)</methodSignature>
      <fullMethod>getPieces($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>strBuilder</methodName>
      <methodSignature>strBuilder($type, $data)</methodSignature>
      <fullMethod>strBuilder($type, $data)</fullMethod>
      <crap>38.06</crap>
      <complexity>21</complexity>
      <coverage>66.18</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>checkIterator</methodName>
      <methodSignature>checkIterator($iterator = array())</methodSignature>
      <fullMethod>checkIterator($iterator = array())</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToClass</methodName>
      <methodSignature>baseToClass($eval)</methodSignature>
      <fullMethod>baseToClass($eval)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToVar</methodName>
      <methodSignature>baseToVar($eval, $iterator = array())</methodSignature>
      <fullMethod>baseToVar($eval, $iterator = array())</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToUrl</methodName>
      <methodSignature>baseToUrl($eval, $iterator = array())</methodSignature>
      <fullMethod>baseToUrl($eval, $iterator = array())</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToPoint</methodName>
      <methodSignature>baseToPoint($eval, $iterator = array())</methodSignature>
      <fullMethod>baseToPoint($eval, $iterator = array())</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToCode</methodName>
      <methodSignature>baseToCode($eval)</methodSignature>
      <fullMethod>baseToCode($eval)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToLabel</methodName>
      <methodSignature>baseToLabel($eval, $iterator = array())</methodSignature>
      <fullMethod>baseToLabel($eval, $iterator = array())</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringService</className>
      <methodName>baseToUnderline</methodName>
      <methodSignature>baseToUnderline($eval, $iterator = array())</methodSignature>
      <fullMethod>baseToUnderline($eval, $iterator = array())</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringServiceTrait</className>
      <methodName>getStringService</methodName>
      <methodSignature>getStringService()</methodSignature>
      <fullMethod>getStringService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>StringServiceTrait</className>
      <methodName>setStringService</methodName>
      <methodSignature>setStringService($stringService)</methodSignature>
      <fullMethod>setStringService($stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>amOnSubdomain</methodName>
      <methodSignature>amOnSubdomain($subdomain)</methodSignature>
      <fullMethod>amOnSubdomain($subdomain)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>makeScreenshot</methodName>
      <methodSignature>makeScreenshot($name)</methodSignature>
      <fullMethod>makeScreenshot($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>resizeWindow</methodName>
      <methodSignature>resizeWindow($width, $height)</methodSignature>
      <fullMethod>resizeWindow($width, $height)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeCookie</methodName>
      <methodSignature>canSeeCookie($cookie)</methodSignature>
      <fullMethod>canSeeCookie($cookie)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeCookie</methodName>
      <methodSignature>seeCookie($cookie)</methodSignature>
      <fullMethod>seeCookie($cookie)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeCookie</methodName>
      <methodSignature>cantSeeCookie($cookie)</methodSignature>
      <fullMethod>cantSeeCookie($cookie)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeCookie</methodName>
      <methodSignature>dontSeeCookie($cookie)</methodSignature>
      <fullMethod>dontSeeCookie($cookie)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>setCookie</methodName>
      <methodSignature>setCookie($cookie, $value)</methodSignature>
      <fullMethod>setCookie($cookie, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>resetCookie</methodName>
      <methodSignature>resetCookie($cookie)</methodSignature>
      <fullMethod>resetCookie($cookie)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>grabCookie</methodName>
      <methodSignature>grabCookie($cookie)</methodSignature>
      <fullMethod>grabCookie($cookie)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>amOnPage</methodName>
      <methodSignature>amOnPage($page)</methodSignature>
      <fullMethod>amOnPage($page)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSee</methodName>
      <methodSignature>canSee($text, $selector = null)</methodSignature>
      <fullMethod>canSee($text, $selector = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>see</methodName>
      <methodSignature>see($text, $selector = null)</methodSignature>
      <fullMethod>see($text, $selector = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSee</methodName>
      <methodSignature>cantSee($text, $selector = null)</methodSignature>
      <fullMethod>cantSee($text, $selector = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSee</methodName>
      <methodSignature>dontSee($text, $selector = null)</methodSignature>
      <fullMethod>dontSee($text, $selector = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeInPageSource</methodName>
      <methodSignature>canSeeInPageSource($text)</methodSignature>
      <fullMethod>canSeeInPageSource($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeInPageSource</methodName>
      <methodSignature>seeInPageSource($text)</methodSignature>
      <fullMethod>seeInPageSource($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeInPageSource</methodName>
      <methodSignature>cantSeeInPageSource($text)</methodSignature>
      <fullMethod>cantSeeInPageSource($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeInPageSource</methodName>
      <methodSignature>dontSeeInPageSource($text)</methodSignature>
      <fullMethod>dontSeeInPageSource($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>click</methodName>
      <methodSignature>click($link, $context = null)</methodSignature>
      <fullMethod>click($link, $context = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeLink</methodName>
      <methodSignature>canSeeLink($text, $url = null)</methodSignature>
      <fullMethod>canSeeLink($text, $url = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeLink</methodName>
      <methodSignature>seeLink($text, $url = null)</methodSignature>
      <fullMethod>seeLink($text, $url = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeLink</methodName>
      <methodSignature>cantSeeLink($text, $url = null)</methodSignature>
      <fullMethod>cantSeeLink($text, $url = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeLink</methodName>
      <methodSignature>dontSeeLink($text, $url = null)</methodSignature>
      <fullMethod>dontSeeLink($text, $url = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeInCurrentUrl</methodName>
      <methodSignature>canSeeInCurrentUrl($uri)</methodSignature>
      <fullMethod>canSeeInCurrentUrl($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeInCurrentUrl</methodName>
      <methodSignature>seeInCurrentUrl($uri)</methodSignature>
      <fullMethod>seeInCurrentUrl($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeCurrentUrlEquals</methodName>
      <methodSignature>canSeeCurrentUrlEquals($uri)</methodSignature>
      <fullMethod>canSeeCurrentUrlEquals($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeCurrentUrlEquals</methodName>
      <methodSignature>seeCurrentUrlEquals($uri)</methodSignature>
      <fullMethod>seeCurrentUrlEquals($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeCurrentUrlMatches</methodName>
      <methodSignature>canSeeCurrentUrlMatches($uri)</methodSignature>
      <fullMethod>canSeeCurrentUrlMatches($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeCurrentUrlMatches</methodName>
      <methodSignature>seeCurrentUrlMatches($uri)</methodSignature>
      <fullMethod>seeCurrentUrlMatches($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeInCurrentUrl</methodName>
      <methodSignature>cantSeeInCurrentUrl($uri)</methodSignature>
      <fullMethod>cantSeeInCurrentUrl($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeInCurrentUrl</methodName>
      <methodSignature>dontSeeInCurrentUrl($uri)</methodSignature>
      <fullMethod>dontSeeInCurrentUrl($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeCurrentUrlEquals</methodName>
      <methodSignature>cantSeeCurrentUrlEquals($uri)</methodSignature>
      <fullMethod>cantSeeCurrentUrlEquals($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeCurrentUrlEquals</methodName>
      <methodSignature>dontSeeCurrentUrlEquals($uri)</methodSignature>
      <fullMethod>dontSeeCurrentUrlEquals($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeCurrentUrlMatches</methodName>
      <methodSignature>cantSeeCurrentUrlMatches($uri)</methodSignature>
      <fullMethod>cantSeeCurrentUrlMatches($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeCurrentUrlMatches</methodName>
      <methodSignature>dontSeeCurrentUrlMatches($uri)</methodSignature>
      <fullMethod>dontSeeCurrentUrlMatches($uri)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>grabFromCurrentUrl</methodName>
      <methodSignature>grabFromCurrentUrl($uri = null)</methodSignature>
      <fullMethod>grabFromCurrentUrl($uri = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeCheckboxIsChecked</methodName>
      <methodSignature>canSeeCheckboxIsChecked($checkbox)</methodSignature>
      <fullMethod>canSeeCheckboxIsChecked($checkbox)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeCheckboxIsChecked</methodName>
      <methodSignature>seeCheckboxIsChecked($checkbox)</methodSignature>
      <fullMethod>seeCheckboxIsChecked($checkbox)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeCheckboxIsChecked</methodName>
      <methodSignature>cantSeeCheckboxIsChecked($checkbox)</methodSignature>
      <fullMethod>cantSeeCheckboxIsChecked($checkbox)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeCheckboxIsChecked</methodName>
      <methodSignature>dontSeeCheckboxIsChecked($checkbox)</methodSignature>
      <fullMethod>dontSeeCheckboxIsChecked($checkbox)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeInField</methodName>
      <methodSignature>canSeeInField($field, $value)</methodSignature>
      <fullMethod>canSeeInField($field, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeInField</methodName>
      <methodSignature>seeInField($field, $value)</methodSignature>
      <fullMethod>seeInField($field, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeInField</methodName>
      <methodSignature>cantSeeInField($field, $value)</methodSignature>
      <fullMethod>cantSeeInField($field, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeInField</methodName>
      <methodSignature>dontSeeInField($field, $value)</methodSignature>
      <fullMethod>dontSeeInField($field, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>selectOption</methodName>
      <methodSignature>selectOption($select, $option)</methodSignature>
      <fullMethod>selectOption($select, $option)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>unselectOption</methodName>
      <methodSignature>unselectOption($select, $option)</methodSignature>
      <fullMethod>unselectOption($select, $option)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>checkOption</methodName>
      <methodSignature>checkOption($option)</methodSignature>
      <fullMethod>checkOption($option)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>uncheckOption</methodName>
      <methodSignature>uncheckOption($option)</methodSignature>
      <fullMethod>uncheckOption($option)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>fillField</methodName>
      <methodSignature>fillField($field, $value)</methodSignature>
      <fullMethod>fillField($field, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>attachFile</methodName>
      <methodSignature>attachFile($field, $filename)</methodSignature>
      <fullMethod>attachFile($field, $filename)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>getVisibleText</methodName>
      <methodSignature>getVisibleText()</methodSignature>
      <fullMethod>getVisibleText()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>grabTextFrom</methodName>
      <methodSignature>grabTextFrom($cssOrXPathOrRegex)</methodSignature>
      <fullMethod>grabTextFrom($cssOrXPathOrRegex)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>grabAttributeFrom</methodName>
      <methodSignature>grabAttributeFrom($cssOrXpath, $attribute)</methodSignature>
      <fullMethod>grabAttributeFrom($cssOrXpath, $attribute)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>grabValueFrom</methodName>
      <methodSignature>grabValueFrom($field)</methodSignature>
      <fullMethod>grabValueFrom($field)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeElement</methodName>
      <methodSignature>canSeeElement($selector, $attributes = null)</methodSignature>
      <fullMethod>canSeeElement($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeElement</methodName>
      <methodSignature>seeElement($selector, $attributes = null)</methodSignature>
      <fullMethod>seeElement($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeElement</methodName>
      <methodSignature>cantSeeElement($selector, $attributes = null)</methodSignature>
      <fullMethod>cantSeeElement($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeElement</methodName>
      <methodSignature>dontSeeElement($selector, $attributes = null)</methodSignature>
      <fullMethod>dontSeeElement($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeElementInDOM</methodName>
      <methodSignature>canSeeElementInDOM($selector, $attributes = null)</methodSignature>
      <fullMethod>canSeeElementInDOM($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeElementInDOM</methodName>
      <methodSignature>seeElementInDOM($selector, $attributes = null)</methodSignature>
      <fullMethod>seeElementInDOM($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeElementInDOM</methodName>
      <methodSignature>cantSeeElementInDOM($selector, $attributes = null)</methodSignature>
      <fullMethod>cantSeeElementInDOM($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeElementInDOM</methodName>
      <methodSignature>dontSeeElementInDOM($selector, $attributes = null)</methodSignature>
      <fullMethod>dontSeeElementInDOM($selector, $attributes = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeOptionIsSelected</methodName>
      <methodSignature>canSeeOptionIsSelected($selector, $optionText)</methodSignature>
      <fullMethod>canSeeOptionIsSelected($selector, $optionText)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeOptionIsSelected</methodName>
      <methodSignature>seeOptionIsSelected($selector, $optionText)</methodSignature>
      <fullMethod>seeOptionIsSelected($selector, $optionText)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeOptionIsSelected</methodName>
      <methodSignature>cantSeeOptionIsSelected($selector, $optionText)</methodSignature>
      <fullMethod>cantSeeOptionIsSelected($selector, $optionText)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeOptionIsSelected</methodName>
      <methodSignature>dontSeeOptionIsSelected($selector, $optionText)</methodSignature>
      <fullMethod>dontSeeOptionIsSelected($selector, $optionText)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeInTitle</methodName>
      <methodSignature>canSeeInTitle($title)</methodSignature>
      <fullMethod>canSeeInTitle($title)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeInTitle</methodName>
      <methodSignature>seeInTitle($title)</methodSignature>
      <fullMethod>seeInTitle($title)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeInTitle</methodName>
      <methodSignature>cantSeeInTitle($title)</methodSignature>
      <fullMethod>cantSeeInTitle($title)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeInTitle</methodName>
      <methodSignature>dontSeeInTitle($title)</methodSignature>
      <fullMethod>dontSeeInTitle($title)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>acceptPopup</methodName>
      <methodSignature>acceptPopup()</methodSignature>
      <fullMethod>acceptPopup()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cancelPopup</methodName>
      <methodSignature>cancelPopup()</methodSignature>
      <fullMethod>cancelPopup()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeInPopup</methodName>
      <methodSignature>canSeeInPopup($text)</methodSignature>
      <fullMethod>canSeeInPopup($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeInPopup</methodName>
      <methodSignature>seeInPopup($text)</methodSignature>
      <fullMethod>seeInPopup($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>typeInPopup</methodName>
      <methodSignature>typeInPopup($keys)</methodSignature>
      <fullMethod>typeInPopup($keys)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>reloadPage</methodName>
      <methodSignature>reloadPage()</methodSignature>
      <fullMethod>reloadPage()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>moveBack</methodName>
      <methodSignature>moveBack()</methodSignature>
      <fullMethod>moveBack()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>moveForward</methodName>
      <methodSignature>moveForward()</methodSignature>
      <fullMethod>moveForward()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>submitForm</methodName>
      <methodSignature>submitForm($selector, $params)</methodSignature>
      <fullMethod>submitForm($selector, $params)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>waitForElementChange</methodName>
      <methodSignature>waitForElementChange($element, $callback, $timeout = null)</methodSignature>
      <fullMethod>waitForElementChange($element, $callback, $timeout = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>waitForElement</methodName>
      <methodSignature>waitForElement($element, $timeout = null)</methodSignature>
      <fullMethod>waitForElement($element, $timeout = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>waitForElementVisible</methodName>
      <methodSignature>waitForElementVisible($element, $timeout = null)</methodSignature>
      <fullMethod>waitForElementVisible($element, $timeout = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>waitForElementNotVisible</methodName>
      <methodSignature>waitForElementNotVisible($element, $timeout = null)</methodSignature>
      <fullMethod>waitForElementNotVisible($element, $timeout = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>waitForText</methodName>
      <methodSignature>waitForText($text, $timeout = null, $selector = null)</methodSignature>
      <fullMethod>waitForText($text, $timeout = null, $selector = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>wait</methodName>
      <methodSignature>wait($timeout)</methodSignature>
      <fullMethod>wait($timeout)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>executeInSelenium</methodName>
      <methodSignature>executeInSelenium($function)</methodSignature>
      <fullMethod>executeInSelenium($function)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>switchToWindow</methodName>
      <methodSignature>switchToWindow($name = null)</methodSignature>
      <fullMethod>switchToWindow($name = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>switchToIFrame</methodName>
      <methodSignature>switchToIFrame($name = null)</methodSignature>
      <fullMethod>switchToIFrame($name = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>waitForJS</methodName>
      <methodSignature>waitForJS($script, $timeout = null)</methodSignature>
      <fullMethod>waitForJS($script, $timeout = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>executeJS</methodName>
      <methodSignature>executeJS($script)</methodSignature>
      <fullMethod>executeJS($script)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>maximizeWindow</methodName>
      <methodSignature>maximizeWindow()</methodSignature>
      <fullMethod>maximizeWindow()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dragAndDrop</methodName>
      <methodSignature>dragAndDrop($source, $target)</methodSignature>
      <fullMethod>dragAndDrop($source, $target)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>moveMouseOver</methodName>
      <methodSignature>moveMouseOver($cssOrXPath, $offsetX = null, $offsetY = null)</methodSignature>
      <fullMethod>moveMouseOver($cssOrXPath, $offsetX = null, $offsetY = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>clickWithRightButton</methodName>
      <methodSignature>clickWithRightButton($cssOrXPath)</methodSignature>
      <fullMethod>clickWithRightButton($cssOrXPath)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>pauseExecution</methodName>
      <methodSignature>pauseExecution()</methodSignature>
      <fullMethod>pauseExecution()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>doubleClick</methodName>
      <methodSignature>doubleClick($cssOrXPath)</methodSignature>
      <fullMethod>doubleClick($cssOrXPath)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>pressKey</methodName>
      <methodSignature>pressKey($element, $char)</methodSignature>
      <fullMethod>pressKey($element, $char)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>appendField</methodName>
      <methodSignature>appendField($field, $value)</methodSignature>
      <fullMethod>appendField($field, $value)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>haveInDatabase</methodName>
      <methodSignature>haveInDatabase($table, $data)</methodSignature>
      <fullMethod>haveInDatabase($table, $data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>canSeeInDatabase</methodName>
      <methodSignature>canSeeInDatabase($table, $criteria = null)</methodSignature>
      <fullMethod>canSeeInDatabase($table, $criteria = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>seeInDatabase</methodName>
      <methodSignature>seeInDatabase($table, $criteria = null)</methodSignature>
      <fullMethod>seeInDatabase($table, $criteria = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>cantSeeInDatabase</methodName>
      <methodSignature>cantSeeInDatabase($table, $criteria = null)</methodSignature>
      <fullMethod>cantSeeInDatabase($table, $criteria = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>dontSeeInDatabase</methodName>
      <methodSignature>dontSeeInDatabase($table, $criteria = null)</methodSignature>
      <fullMethod>dontSeeInDatabase($table, $criteria = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>GuyTester</className>
      <methodName>grabFromDatabase</methodName>
      <methodSignature>grabFromDatabase($table, $column, $criteria = null)</methodSignature>
      <fullMethod>grabFromDatabase($table, $column, $criteria = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexPage</className>
      <methodName>route</methodName>
      <methodSignature>route($param)</methodSignature>
      <fullMethod>route($param)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ZendServiceLocator</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ZendServiceLocator</className>
      <methodName>getEntityManager</methodName>
      <methodSignature>getEntityManager()</methodSignature>
      <fullMethod>getEntityManager()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ZendServiceLocator</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ZendServiceLocator</className>
      <methodName>chroot</methodName>
      <methodSignature>chroot()</methodSignature>
      <fullMethod>chroot()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ZendServiceLocator</className>
      <methodName>findParentPath</methodName>
      <methodSignature>findParentPath($path)</methodSignature>
      <fullMethod>findParentPath($path)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ZendServiceLocator</className>
      <methodName>initAutoloader</methodName>
      <methodSignature>initAutoloader()</methodSignature>
      <fullMethod>initAutoloader()</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>amInPath</methodName>
      <methodSignature>amInPath($path)</methodSignature>
      <fullMethod>amInPath($path)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>openFile</methodName>
      <methodSignature>openFile($filename)</methodSignature>
      <fullMethod>openFile($filename)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>deleteFile</methodName>
      <methodSignature>deleteFile($filename)</methodSignature>
      <fullMethod>deleteFile($filename)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>deleteDir</methodName>
      <methodSignature>deleteDir($dirname)</methodSignature>
      <fullMethod>deleteDir($dirname)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>copyDir</methodName>
      <methodSignature>copyDir($src, $dst)</methodSignature>
      <fullMethod>copyDir($src, $dst)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>canSeeInThisFile</methodName>
      <methodSignature>canSeeInThisFile($text)</methodSignature>
      <fullMethod>canSeeInThisFile($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>seeInThisFile</methodName>
      <methodSignature>seeInThisFile($text)</methodSignature>
      <fullMethod>seeInThisFile($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>canSeeFileContentsEqual</methodName>
      <methodSignature>canSeeFileContentsEqual($text)</methodSignature>
      <fullMethod>canSeeFileContentsEqual($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>seeFileContentsEqual</methodName>
      <methodSignature>seeFileContentsEqual($text)</methodSignature>
      <fullMethod>seeFileContentsEqual($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>cantSeeInThisFile</methodName>
      <methodSignature>cantSeeInThisFile($text)</methodSignature>
      <fullMethod>cantSeeInThisFile($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>dontSeeInThisFile</methodName>
      <methodSignature>dontSeeInThisFile($text)</methodSignature>
      <fullMethod>dontSeeInThisFile($text)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>deleteThisFile</methodName>
      <methodSignature>deleteThisFile()</methodSignature>
      <fullMethod>deleteThisFile()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>canSeeFileFound</methodName>
      <methodSignature>canSeeFileFound($filename, $path = null)</methodSignature>
      <fullMethod>canSeeFileFound($filename, $path = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>seeFileFound</methodName>
      <methodSignature>seeFileFound($filename, $path = null)</methodSignature>
      <fullMethod>seeFileFound($filename, $path = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>cantSeeFileFound</methodName>
      <methodSignature>cantSeeFileFound($filename, $path = null)</methodSignature>
      <fullMethod>cantSeeFileFound($filename, $path = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>dontSeeFileFound</methodName>
      <methodSignature>dontSeeFileFound($filename, $path = null)</methodSignature>
      <fullMethod>dontSeeFileFound($filename, $path = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>cleanDir</methodName>
      <methodSignature>cleanDir($dirname)</methodSignature>
      <fullMethod>cleanDir($dirname)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>FunctionalTester</className>
      <methodName>writeToFile</methodName>
      <methodSignature>writeToFile($filename, $contents)</methodSignature>
      <fullMethod>writeToFile($filename, $contents)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>setUp</methodName>
      <methodSignature>setUp()</methodSignature>
      <fullMethod>setUp()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>tearDown</methodName>
      <methodSignature>tearDown()</methodSignature>
      <fullMethod>tearDown()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testIndexAction</methodName>
      <methodSignature>testIndexAction()</methodSignature>
      <fullMethod>testIndexAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToAcesssLoginPageAction</methodName>
      <methodSignature>testWantToAcesssLoginPageAction()</methodSignature>
      <fullMethod>testWantToAcesssLoginPageAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testLoginReturnValidation</methodName>
      <methodSignature>testLoginReturnValidation()</methodSignature>
      <fullMethod>testLoginReturnValidation()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testLoginReturnSucessfull</methodName>
      <methodSignature>testLoginReturnSucessfull()</methodSignature>
      <fullMethod>testLoginReturnSucessfull()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToAccessRegisterPageAction</methodName>
      <methodSignature>testWantToAccessRegisterPageAction()</methodSignature>
      <fullMethod>testWantToAccessRegisterPageAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testRegisterSuccessfull</methodName>
      <methodSignature>testRegisterSuccessfull()</methodSignature>
      <fullMethod>testRegisterSuccessfull()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testRegisterSuccessfullWithPRG</methodName>
      <methodSignature>testRegisterSuccessfullWithPRG()</methodSignature>
      <fullMethod>testRegisterSuccessfullWithPRG()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testActivationValidEmailAction</methodName>
      <methodSignature>testActivationValidEmailAction($data)</methodSignature>
      <fullMethod>testActivationValidEmailAction($data)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testActivationUserAlreadyActivated</methodName>
      <methodSignature>testActivationUserAlreadyActivated()</methodSignature>
      <fullMethod>testActivationUserAlreadyActivated()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testActivationUserThatNotExistsId</methodName>
      <methodSignature>testActivationUserThatNotExistsId()</methodSignature>
      <fullMethod>testActivationUserThatNotExistsId()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToAccessActivationSendPageAction</methodName>
      <methodSignature>testWantToAccessActivationSendPageAction()</methodSignature>
      <fullMethod>testWantToAccessActivationSendPageAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testAccessLogonWithoutRequestAction</methodName>
      <methodSignature>testAccessLogonWithoutRequestAction()</methodSignature>
      <fullMethod>testAccessLogonWithoutRequestAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToInsertEmailToGetActivationAction</methodName>
      <methodSignature>testWantToInsertEmailToGetActivationAction()</methodSignature>
      <fullMethod>testWantToInsertEmailToGetActivationAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToSendActivationButAreAlreadyAction</methodName>
      <methodSignature>testWantToSendActivationButAreAlreadyAction()</methodSignature>
      <fullMethod>testWantToSendActivationButAreAlreadyAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testSentActivationSuccessfulAction</methodName>
      <methodSignature>testSentActivationSuccessfulAction()</methodSignature>
      <fullMethod>testSentActivationSuccessfulAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToAccessActivationSentPageRedirectAction</methodName>
      <methodSignature>testWantToAccessActivationSentPageRedirectAction()</methodSignature>
      <fullMethod>testWantToAccessActivationSentPageRedirectAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToAccessSecurityAction</methodName>
      <methodSignature>testWantToAccessSecurityAction()</methodSignature>
      <fullMethod>testWantToAccessSecurityAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testInvalidinkAction</methodName>
      <methodSignature>testInvalidinkAction()</methodSignature>
      <fullMethod>testInvalidinkAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testWantToAccessActivationSentPageAction</methodName>
      <methodSignature>testWantToAccessActivationSentPageAction()</methodSignature>
      <fullMethod>testWantToAccessActivationSentPageAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testEnterPasswordRecoveryRequestAction</methodName>
      <methodSignature>testEnterPasswordRecoveryRequestAction()</methodSignature>
      <fullMethod>testEnterPasswordRecoveryRequestAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testEnterEmailToPasswordRecoveryRequestRedirectAction</methodName>
      <methodSignature>testEnterEmailToPasswordRecoveryRequestRedirectAction()</methodSignature>
      <fullMethod>testEnterEmailToPasswordRecoveryRequestRedirectAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testPasswordRecoveryRequestSentWithEmail</methodName>
      <methodSignature>testPasswordRecoveryRequestSentWithEmail()</methodSignature>
      <fullMethod>testPasswordRecoveryRequestSentWithEmail()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testPasswordRecoveryRequestSentWithoutEmail</methodName>
      <methodSignature>testPasswordRecoveryRequestSentWithoutEmail()</methodSignature>
      <fullMethod>testPasswordRecoveryRequestSentWithoutEmail()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testEnterEmailToPasswordRecoveryRequestForwardAction</methodName>
      <methodSignature>testEnterEmailToPasswordRecoveryRequestForwardAction()</methodSignature>
      <fullMethod>testEnterEmailToPasswordRecoveryRequestForwardAction()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testClinkLinkAndEnterToRecoverPasswordPage</methodName>
      <methodSignature>testClinkLinkAndEnterToRecoverPasswordPage($url)</methodSignature>
      <fullMethod>testClinkLinkAndEnterToRecoverPasswordPage($url)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testUsePasswordRecoveryFormReturnValidation</methodName>
      <methodSignature>testUsePasswordRecoveryFormReturnValidation($arrayRecuperarSenha)</methodSignature>
      <fullMethod>testUsePasswordRecoveryFormReturnValidation($arrayRecuperarSenha)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testUsePasswordRecoveryAndRecoverPassword</methodName>
      <methodSignature>testUsePasswordRecoveryAndRecoverPassword($arrayRecuperarSenha)</methodSignature>
      <fullMethod>testUsePasswordRecoveryAndRecoverPassword($arrayRecuperarSenha)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testPasswordRecoverySucessfullWithEmail</methodName>
      <methodSignature>testPasswordRecoverySucessfullWithEmail()</methodSignature>
      <fullMethod>testPasswordRecoverySucessfullWithEmail()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>testPasswordRecoverySucessfullWithoutEmail</methodName>
      <methodSignature>testPasswordRecoverySucessfullWithoutEmail()</methodSignature>
      <fullMethod>testPasswordRecoverySucessfullWithoutEmail()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>getConfig</methodName>
      <methodSignature>getConfig()</methodSignature>
      <fullMethod>getConfig()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator(\Zend\ServiceManager\ServiceLocatorInterface $serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator(\Zend\ServiceManager\ServiceLocatorInterface $serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>IndexControllerTest</className>
      <methodName>mockPluginPostRedirectGet</methodName>
      <methodSignature>mockPluginPostRedirectGet($return)</methodSignature>
      <fullMethod>mockPluginPostRedirectGet($return)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertEquals</methodName>
      <methodSignature>assertEquals($expected, $actual, $message = null)</methodSignature>
      <fullMethod>assertEquals($expected, $actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertNotEquals</methodName>
      <methodSignature>assertNotEquals($expected, $actual, $message = null)</methodSignature>
      <fullMethod>assertNotEquals($expected, $actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertGreaterThan</methodName>
      <methodSignature>assertGreaterThan($expected, $actual, $message = null)</methodSignature>
      <fullMethod>assertGreaterThan($expected, $actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertGreaterThen</methodName>
      <methodSignature>assertGreaterThen($expected, $actual, $message = null)</methodSignature>
      <fullMethod>assertGreaterThen($expected, $actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertGreaterThanOrEqual</methodName>
      <methodSignature>assertGreaterThanOrEqual($expected, $actual, $message = null)</methodSignature>
      <fullMethod>assertGreaterThanOrEqual($expected, $actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertGreaterThenOrEqual</methodName>
      <methodSignature>assertGreaterThenOrEqual($expected, $actual, $message = null)</methodSignature>
      <fullMethod>assertGreaterThenOrEqual($expected, $actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertContains</methodName>
      <methodSignature>assertContains($needle, $haystack, $message = null)</methodSignature>
      <fullMethod>assertContains($needle, $haystack, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertNotContains</methodName>
      <methodSignature>assertNotContains($needle, $haystack, $message = null)</methodSignature>
      <fullMethod>assertNotContains($needle, $haystack, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertEmpty</methodName>
      <methodSignature>assertEmpty($actual, $message = null)</methodSignature>
      <fullMethod>assertEmpty($actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertNotEmpty</methodName>
      <methodSignature>assertNotEmpty($actual, $message = null)</methodSignature>
      <fullMethod>assertNotEmpty($actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertNull</methodName>
      <methodSignature>assertNull($actual, $message = null)</methodSignature>
      <fullMethod>assertNull($actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertNotNull</methodName>
      <methodSignature>assertNotNull($actual, $message = null)</methodSignature>
      <fullMethod>assertNotNull($actual, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertTrue</methodName>
      <methodSignature>assertTrue($condition, $message = null)</methodSignature>
      <fullMethod>assertTrue($condition, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTester</className>
      <methodName>assertFalse</methodName>
      <methodSignature>assertFalse($condition, $message = null)</methodSignature>
      <fullMethod>assertFalse($condition, $message = null)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirValidator</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(array $options = array())</methodSignature>
      <fullMethod>__construct(array $options = array())</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DirValidator</className>
      <methodName>isValid</methodName>
      <methodSignature>isValid($value)</methodSignature>
      <fullMethod>isValid($value)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractHydrator</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($data = array())</methodSignature>
      <fullMethod>__construct($data = array())</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractHydrator</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractHydrator</className>
      <methodName>extract</methodName>
      <methodSignature>extract()</methodSignature>
      <fullMethod>extract()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractHydrator</className>
      <methodName>hydrate</methodName>
      <methodSignature>hydrate(array $data)</methodSignature>
      <fullMethod>hydrate(array $data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>AbstractValueObject</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct()</methodSignature>
      <fullMethod>__construct()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getPredefinedResponse</methodName>
      <methodSignature>getPredefinedResponse()</methodSignature>
      <fullMethod>getPredefinedResponse()</fullMethod>
      <crap>56</crap>
      <complexity>7</complexity>
      <coverage>0</coverage>
      <crapLoad>7</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>setDependency</methodName>
      <methodSignature>setDependency($dependency)</methodSignature>
      <fullMethod>setDependency($dependency)</fullMethod>
      <crap>3.03</crap>
      <complexity>3</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getRouteLocale</methodName>
      <methodSignature>getRouteLocale()</methodSignature>
      <fullMethod>getRouteLocale()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getDependency</methodName>
      <methodSignature>getDependency()</methodSignature>
      <fullMethod>getDependency()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>hasDependency</methodName>
      <methodSignature>hasDependency()</methodSignature>
      <fullMethod>hasDependency()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>setDb</methodName>
      <methodSignature>setDb($db)</methodSignature>
      <fullMethod>setDb($db)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($data)</methodSignature>
      <fullMethod>__construct($data)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getController</methodName>
      <methodSignature>getController()</methodSignature>
      <fullMethod>getController()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>setController</methodName>
      <methodSignature>setController($controller)</methodSignature>
      <fullMethod>setController($controller)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getRouteWithParams</methodName>
      <methodSignature>getRouteWithParams()</methodSignature>
      <fullMethod>getRouteWithParams()</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getParams</methodName>
      <methodSignature>getParams()</methodSignature>
      <fullMethod>getParams()</fullMethod>
      <crap>72</crap>
      <complexity>8</complexity>
      <coverage>0</coverage>
      <crapLoad>8</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getRoute</methodName>
      <methodSignature>getRoute()</methodSignature>
      <fullMethod>getRoute()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>setRoute</methodName>
      <methodSignature>setRoute($route)</methodSignature>
      <fullMethod>setRoute($route)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>getRole</methodName>
      <methodSignature>getRole()</methodSignature>
      <fullMethod>getRole()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>setRole</methodName>
      <methodSignature>setRole($role)</methodSignature>
      <fullMethod>setRole($role)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Action</className>
      <methodName>export</methodName>
      <methodSignature>export()</methodSignature>
      <fullMethod>export()</fullMethod>
      <crap>4</crap>
      <complexity>4</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($moduleName = null)</methodSignature>
      <fullMethod>__construct($moduleName = null)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>minimal</methodName>
      <methodSignature>minimal()</methodSignature>
      <fullMethod>minimal()</fullMethod>
      <crap>2.01</crap>
      <complexity>2</complexity>
      <coverage>87.5</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>writeMinimal</methodName>
      <methodSignature>writeMinimal($options = array())</methodSignature>
      <fullMethod>writeMinimal($options = array())</fullMethod>
      <crap>16.13</crap>
      <complexity>12</complexity>
      <coverage>69.39</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>prepare</methodName>
      <methodSignature>prepare($moduleName = null)</methodSignature>
      <fullMethod>prepare($moduleName = null)</fullMethod>
      <crap>6.17</crap>
      <complexity>6</complexity>
      <coverage>83.33</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getFactoryFolder</methodName>
      <methodSignature>getFactoryFolder()</methodSignature>
      <fullMethod>getFactoryFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>write</methodName>
      <methodSignature>write()</methodSignature>
      <fullMethod>write()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getPublicFolder</methodName>
      <methodSignature>getPublicFolder()</methodSignature>
      <fullMethod>getPublicFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getValueObjectFolder</methodName>
      <methodSignature>getValueObjectFolder()</methodSignature>
      <fullMethod>getValueObjectFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestControllerFolder</methodName>
      <methodSignature>getTestControllerFolder()</methodSignature>
      <fullMethod>getTestControllerFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestFactoryFolder</methodName>
      <methodSignature>getTestFactoryFolder()</methodSignature>
      <fullMethod>getTestFactoryFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestValueObjectFolder</methodName>
      <methodSignature>getTestValueObjectFolder()</methodSignature>
      <fullMethod>getTestValueObjectFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getControllerPluginFolder</methodName>
      <methodSignature>getControllerPluginFolder()</methodSignature>
      <fullMethod>getControllerPluginFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestControllerPluginFolder</methodName>
      <methodSignature>getTestControllerPluginFolder()</methodSignature>
      <fullMethod>getTestControllerPluginFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestEntityFolder</methodName>
      <methodSignature>getTestEntityFolder()</methodSignature>
      <fullMethod>getTestEntityFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestRepositoryFolder</methodName>
      <methodSignature>getTestRepositoryFolder()</methodSignature>
      <fullMethod>getTestRepositoryFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestFormFolder</methodName>
      <methodSignature>getTestFormFolder()</methodSignature>
      <fullMethod>getTestFormFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestFilterFolder</methodName>
      <methodSignature>getTestFilterFolder()</methodSignature>
      <fullMethod>getTestFilterFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestServiceFolder</methodName>
      <methodSignature>getTestServiceFolder()</methodSignature>
      <fullMethod>getTestServiceFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getControllerFolder</methodName>
      <methodSignature>getControllerFolder()</methodSignature>
      <fullMethod>getControllerFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getServiceFolder</methodName>
      <methodSignature>getServiceFolder()</methodSignature>
      <fullMethod>getServiceFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getSearchFolder</methodName>
      <methodSignature>getSearchFolder()</methodSignature>
      <fullMethod>getSearchFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getEntityFolder</methodName>
      <methodSignature>getEntityFolder()</methodSignature>
      <fullMethod>getEntityFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getFormFolder</methodName>
      <methodSignature>getFormFolder()</methodSignature>
      <fullMethod>getFormFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getFixtureFolder</methodName>
      <methodSignature>getFixtureFolder()</methodSignature>
      <fullMethod>getFixtureFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getRepositoryFolder</methodName>
      <methodSignature>getRepositoryFolder()</methodSignature>
      <fullMethod>getRepositoryFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getViewErrorFolder</methodName>
      <methodSignature>getViewErrorFolder()</methodSignature>
      <fullMethod>getViewErrorFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getViewLayoutFolder</methodName>
      <methodSignature>getViewLayoutFolder()</methodSignature>
      <fullMethod>getViewLayoutFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getViewModuleFolder</methodName>
      <methodSignature>getViewModuleFolder()</methodSignature>
      <fullMethod>getViewModuleFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getViewIndexControllerFolder</methodName>
      <methodSignature>getViewIndexControllerFolder()</methodSignature>
      <fullMethod>getViewIndexControllerFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getFilterFolder</methodName>
      <methodSignature>getFilterFolder()</methodSignature>
      <fullMethod>getFilterFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getSrcModuleFolder</methodName>
      <methodSignature>getSrcModuleFolder()</methodSignature>
      <fullMethod>getSrcModuleFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getBasePath</methodName>
      <methodSignature>getBasePath()</methodSignature>
      <fullMethod>getBasePath()</fullMethod>
      <crap>4.54</crap>
      <complexity>3</complexity>
      <coverage>44.44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getModuleName</methodName>
      <methodSignature>getModuleName()</methodSignature>
      <fullMethod>getModuleName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>setModuleName</methodName>
      <methodSignature>setModuleName($moduleName)</methodSignature>
      <fullMethod>setModuleName($moduleName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getMainFolder</methodName>
      <methodSignature>getMainFolder()</methodSignature>
      <fullMethod>getMainFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>setMainFolder</methodName>
      <methodSignature>setMainFolder($mainFolder)</methodSignature>
      <fullMethod>setMainFolder($mainFolder)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getBuildFolder</methodName>
      <methodSignature>getBuildFolder()</methodSignature>
      <fullMethod>getBuildFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getConfigFolder</methodName>
      <methodSignature>getConfigFolder()</methodSignature>
      <fullMethod>getConfigFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getConfigExtFolder</methodName>
      <methodSignature>getConfigExtFolder()</methodSignature>
      <fullMethod>getConfigExtFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getConfigAclFolder</methodName>
      <methodSignature>getConfigAclFolder()</methodSignature>
      <fullMethod>getConfigAclFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getConfigJenkinsFolder</methodName>
      <methodSignature>getConfigJenkinsFolder()</methodSignature>
      <fullMethod>getConfigJenkinsFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getSchema</methodName>
      <methodSignature>getSchema()</methodSignature>
      <fullMethod>getSchema()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getSrcFolder</methodName>
      <methodSignature>getSrcFolder()</methodSignature>
      <fullMethod>getSrcFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getViewFolder</methodName>
      <methodSignature>getViewFolder()</methodSignature>
      <fullMethod>getViewFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestFolder</methodName>
      <methodSignature>getTestFolder()</methodSignature>
      <fullMethod>getTestFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestDataFolder</methodName>
      <methodSignature>getTestDataFolder()</methodSignature>
      <fullMethod>getTestDataFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestSupportFolder</methodName>
      <methodSignature>getTestSupportFolder()</methodSignature>
      <fullMethod>getTestSupportFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestAcceptanceFolder</methodName>
      <methodSignature>getTestAcceptanceFolder()</methodSignature>
      <fullMethod>getTestAcceptanceFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestFunctionalFolder</methodName>
      <methodSignature>getTestFunctionalFolder()</methodSignature>
      <fullMethod>getTestFunctionalFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestAcceptanceStepsFolder</methodName>
      <methodSignature>getTestAcceptanceStepsFolder()</methodSignature>
      <fullMethod>getTestAcceptanceStepsFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestFunctionalStepsFolder</methodName>
      <methodSignature>getTestFunctionalStepsFolder()</methodSignature>
      <fullMethod>getTestFunctionalStepsFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestPagesFolder</methodName>
      <methodSignature>getTestPagesFolder()</methodSignature>
      <fullMethod>getTestPagesFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestUnitFolder</methodName>
      <methodSignature>getTestUnitFolder()</methodSignature>
      <fullMethod>getTestUnitFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getTestUnitModuleFolder</methodName>
      <methodSignature>getTestUnitModuleFolder()</methodSignature>
      <fullMethod>getTestUnitModuleFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getSchemaFolder</methodName>
      <methodSignature>getSchemaFolder()</methodSignature>
      <fullMethod>getSchemaFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getDataFolder</methodName>
      <methodSignature>getDataFolder()</methodSignature>
      <fullMethod>getDataFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getLanguageFolder</methodName>
      <methodSignature>getLanguageFolder()</methodSignature>
      <fullMethod>getLanguageFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>BasicModuleStructure</className>
      <methodName>getLanguageRouteFolder</methodName>
      <methodSignature>getLanguageRouteFolder()</methodSignature>
      <fullMethod>getLanguageRouteFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setDb</methodName>
      <methodSignature>setDb($db)</methodSignature>
      <fullMethod>setDb($db)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getDataType</methodName>
      <methodSignature>getDataType()</methodSignature>
      <fullMethod>getDataType()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setDataType</methodName>
      <methodSignature>setDataType($dataType)</methodSignature>
      <fullMethod>setDataType($dataType)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>exist</methodName>
      <methodSignature>exist()</methodSignature>
      <fullMethod>exist()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($module)</methodSignature>
      <fullMethod>__construct($module)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>getLocal</methodName>
      <methodSignature>getLocal()</methodSignature>
      <fullMethod>getLocal()</fullMethod>
      <crap>4.68</crap>
      <complexity>3</complexity>
      <coverage>42.86</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>getModuleFolder</methodName>
      <methodSignature>getModuleFolder()</methodSignature>
      <fullMethod>getModuleFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>getPath</methodName>
      <methodSignature>getPath()</methodSignature>
      <fullMethod>getPath()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>setPath</methodName>
      <methodSignature>setPath($path)</methodSignature>
      <fullMethod>setPath($path)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>getModule</methodName>
      <methodSignature>getModule()</methodSignature>
      <fullMethod>getModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>setModule</methodName>
      <methodSignature>setModule($module)</methodSignature>
      <fullMethod>setModule($module)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>getPrefix</methodName>
      <methodSignature>getPrefix()</methodSignature>
      <fullMethod>getPrefix()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Config</className>
      <methodName>setPrefix</methodName>
      <methodSignature>setPrefix()</methodSignature>
      <fullMethod>setPrefix()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>getDbms</methodName>
      <methodSignature>getDbms()</methodSignature>
      <fullMethod>getDbms()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>setDbms</methodName>
      <methodSignature>setDbms($dbms)</methodSignature>
      <fullMethod>setDbms($dbms)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>getDbname</methodName>
      <methodSignature>getDbname()</methodSignature>
      <fullMethod>getDbname()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>setDbname</methodName>
      <methodSignature>setDbname($dbname)</methodSignature>
      <fullMethod>setDbname($dbname)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>getDbhost</methodName>
      <methodSignature>getDbhost()</methodSignature>
      <fullMethod>getDbhost()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Globally</className>
      <methodName>setDbhost</methodName>
      <methodSignature>setDbhost($dbhost)</methodSignature>
      <fullMethod>setDbhost($dbhost)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getUsername</methodName>
      <methodSignature>getUsername()</methodSignature>
      <fullMethod>getUsername()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>setUsername</methodName>
      <methodSignature>setUsername($username)</methodSignature>
      <fullMethod>setUsername($username)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getPassword</methodName>
      <methodSignature>getPassword()</methodSignature>
      <fullMethod>getPassword()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>setPassword</methodName>
      <methodSignature>setPassword($password)</methodSignature>
      <fullMethod>setPassword($password)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getHasDoctrine</methodName>
      <methodSignature>getHasDoctrine()</methodSignature>
      <fullMethod>getHasDoctrine()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>setHasDoctrine</methodName>
      <methodSignature>setHasDoctrine($hasDoctrine)</methodSignature>
      <fullMethod>setHasDoctrine($hasDoctrine)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getHasDb</methodName>
      <methodSignature>getHasDb()</methodSignature>
      <fullMethod>getHasDb()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>setHasDb</methodName>
      <methodSignature>setHasDb($hasDb)</methodSignature>
      <fullMethod>setHasDb($hasDb)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getHost</methodName>
      <methodSignature>getHost()</methodSignature>
      <fullMethod>getHost()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>setHost</methodName>
      <methodSignature>setHost($host)</methodSignature>
      <fullMethod>setHost($host)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>getEnvironment</methodName>
      <methodSignature>getEnvironment()</methodSignature>
      <fullMethod>getEnvironment()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Local</className>
      <methodName>setEnvironment</methodName>
      <methodSignature>setEnvironment($environment)</methodSignature>
      <fullMethod>setEnvironment($environment)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($page)</methodSignature>
      <fullMethod>__construct($page)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getNameOff</methodName>
      <methodSignature>getNameOff()</methodSignature>
      <fullMethod>getNameOff()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getDependency</methodName>
      <methodSignature>getDependency()</methodSignature>
      <fullMethod>getDependency()</fullMethod>
      <crap>3.71</crap>
      <complexity>3</complexity>
      <coverage>57.14</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>hasDependency</methodName>
      <methodSignature>hasDependency()</methodSignature>
      <fullMethod>hasDependency()</fullMethod>
      <crap>2.15</crap>
      <complexity>2</complexity>
      <coverage>66.67</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getIndexController</methodName>
      <methodSignature>getIndexController()</methodSignature>
      <fullMethod>getIndexController()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>export</methodName>
      <methodSignature>export()</methodSignature>
      <fullMethod>export()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>arrayFlatten</methodName>
      <methodSignature>arrayFlatten($array)</methodSignature>
      <fullMethod>arrayFlatten($array)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getPage</methodName>
      <methodSignature>getPage($controller, $action)</methodSignature>
      <fullMethod>getPage($controller, $action)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>setService</methodName>
      <methodSignature>setService($service)</methodSignature>
      <fullMethod>setService($service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getActions</methodName>
      <methodSignature>getActions()</methodSignature>
      <fullMethod>getActions()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>getAction</methodName>
      <methodSignature>getAction()</methodSignature>
      <fullMethod>getAction()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Controller</className>
      <methodName>addAction</methodName>
      <methodSignature>addAction($action)</methodSignature>
      <fullMethod>addAction($action)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getFirstValidPropertyFromForeignKey</methodName>
      <methodSignature>getFirstValidPropertyFromForeignKey($columnToCheck)</methodSignature>
      <fullMethod>getFirstValidPropertyFromForeignKey($columnToCheck)</fullMethod>
      <crap>30</crap>
      <complexity>5</complexity>
      <coverage>0</coverage>
      <crapLoad>5</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>isForeignKey</methodName>
      <methodSignature>isForeignKey($columnToCheck)</methodSignature>
      <fullMethod>isForeignKey($columnToCheck)</fullMethod>
      <crap>5.5</crap>
      <complexity>4</complexity>
      <coverage>54.55</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getForeignKeyConstraint</methodName>
      <methodSignature>getForeignKeyConstraint($columnToCheck)</methodSignature>
      <fullMethod>getForeignKeyConstraint($columnToCheck)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getForeignKeyReferencedTable</methodName>
      <methodSignature>getForeignKeyReferencedTable($columnToCheck)</methodSignature>
      <fullMethod>getForeignKeyReferencedTable($columnToCheck)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>isPrimaryKey</methodName>
      <methodSignature>isPrimaryKey($column)</methodSignature>
      <fullMethod>isPrimaryKey($column)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>isPrimaryKeyFromTable</methodName>
      <methodSignature>isPrimaryKeyFromTable($column)</methodSignature>
      <fullMethod>isPrimaryKeyFromTable($column)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getPrimaryKeyColumnNameFromTable</methodName>
      <methodSignature>getPrimaryKeyColumnNameFromTable($table)</methodSignature>
      <fullMethod>getPrimaryKeyColumnNameFromTable($table)</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getPrimaryKeyColumnName</methodName>
      <methodSignature>getPrimaryKeyColumnName()</methodSignature>
      <fullMethod>getPrimaryKeyColumnName()</fullMethod>
      <crap>4.25</crap>
      <complexity>4</complexity>
      <coverage>75</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>excludeList</methodName>
      <methodSignature>excludeList()</methodSignature>
      <fullMethod>excludeList()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>excludeMapping</methodName>
      <methodSignature>excludeMapping()</methodSignature>
      <fullMethod>excludeMapping()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>confirm</methodName>
      <methodSignature>confirm($column)</methodSignature>
      <fullMethod>confirm($column)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getTableColumnsMapping</methodName>
      <methodSignature>getTableColumnsMapping()</methodSignature>
      <fullMethod>getTableColumnsMapping()</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getTableColumns</methodName>
      <methodSignature>getTableColumns()</methodSignature>
      <fullMethod>getTableColumns()</fullMethod>
      <crap>12</crap>
      <complexity>3</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getTableUnderscore</methodName>
      <methodSignature>getTableUnderscore()</methodSignature>
      <fullMethod>getTableUnderscore()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>export</methodName>
      <methodSignature>export()</methodSignature>
      <fullMethod>export()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getTable</methodName>
      <methodSignature>getTable()</methodSignature>
      <fullMethod>getTable()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>setTable</methodName>
      <methodSignature>setTable($table)</methodSignature>
      <fullMethod>setTable($table)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getTableObject</methodName>
      <methodSignature>getTableObject()</methodSignature>
      <fullMethod>getTableObject()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>setTableObject</methodName>
      <methodSignature>setTableObject(\Zend\Db\Metadata\Object\TableObject $tableObject)</methodSignature>
      <fullMethod>setTableObject(\Zend\Db\Metadata\Object\TableObject $tableObject)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getColumns</methodName>
      <methodSignature>getColumns()</methodSignature>
      <fullMethod>getColumns()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>setColumns</methodName>
      <methodSignature>setColumns($columns)</methodSignature>
      <fullMethod>setColumns($columns)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>addColumns</methodName>
      <methodSignature>addColumns(\Gear\ValueObject\Column $column)</methodSignature>
      <fullMethod>addColumns(\Gear\ValueObject\Column $column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($serviceLocator)</methodSignature>
      <fullMethod>setServiceLocator($serviceLocator)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getUser</methodName>
      <methodSignature>getUser()</methodSignature>
      <fullMethod>getUser()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getDefaultUserType</methodName>
      <methodSignature>getDefaultUserType()</methodSignature>
      <fullMethod>getDefaultUserType()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>getAvailableUserType</methodName>
      <methodSignature>getAvailableUserType()</methodSignature>
      <fullMethod>getAvailableUserType()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Db</className>
      <methodName>setUser</methodName>
      <methodSignature>setUser($user)</methodSignature>
      <fullMethod>setUser($user)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($column, $table)</methodSignature>
      <fullMethod>__construct($column, $table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getDataType</methodName>
      <methodSignature>getDataType()</methodSignature>
      <fullMethod>getDataType()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setDataType</methodName>
      <methodSignature>setDataType($dataType)</methodSignature>
      <fullMethod>setDataType($dataType)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getIsNullable</methodName>
      <methodSignature>getIsNullable()</methodSignature>
      <fullMethod>getIsNullable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setIsNullable</methodName>
      <methodSignature>setIsNullable($nullable)</methodSignature>
      <fullMethod>setIsNullable($nullable)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getTable</methodName>
      <methodSignature>getTable()</methodSignature>
      <fullMethod>getTable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setTable</methodName>
      <methodSignature>setTable($table)</methodSignature>
      <fullMethod>setTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getPrimaryKey</methodName>
      <methodSignature>getPrimaryKey()</methodSignature>
      <fullMethod>getPrimaryKey()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getUniqueKey</methodName>
      <methodSignature>getUniqueKey()</methodSignature>
      <fullMethod>getUniqueKey()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getForeignKeys</methodName>
      <methodSignature>getForeignKeys()</methodSignature>
      <fullMethod>getForeignKeys()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getSpecialites</methodName>
      <methodSignature>getSpecialites()</methodSignature>
      <fullMethod>getSpecialites()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setSpecialites</methodName>
      <methodSignature>setSpecialites($specialites)</methodSignature>
      <fullMethod>setSpecialites($specialites)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>getCharacterMaximumLength</methodName>
      <methodSignature>getCharacterMaximumLength()</methodSignature>
      <fullMethod>getCharacterMaximumLength()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Column</className>
      <methodName>setCharacterMaximumLength</methodName>
      <methodSignature>setCharacterMaximumLength($characterMaximumLength)</methodSignature>
      <fullMethod>setCharacterMaximumLength($characterMaximumLength)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getLocation</methodName>
      <methodSignature>getLocation()</methodSignature>
      <fullMethod>getLocation()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setLocation</methodName>
      <methodSignature>setLocation($location)</methodSignature>
      <fullMethod>setLocation($location)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getExtension</methodName>
      <methodSignature>getExtension()</methodSignature>
      <fullMethod>getExtension()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setExtension</methodName>
      <methodSignature>setExtension($extension)</methodSignature>
      <fullMethod>setExtension($extension)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>getContent</methodName>
      <methodSignature>getContent()</methodSignature>
      <fullMethod>getContent()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>File</className>
      <methodName>setContent</methodName>
      <methodSignature>setContent($content)</methodSignature>
      <fullMethod>setContent($content)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>JsonFactory</className>
      <methodName>createService</methodName>
      <methodSignature>createService(ServiceLocatorInterface $serviceManager)</methodSignature>
      <fullMethod>createService(ServiceLocatorInterface $serviceManager)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($moduleName)</methodSignature>
      <fullMethod>__construct($moduleName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>getStructure</methodName>
      <methodSignature>getStructure()</methodSignature>
      <fullMethod>getStructure()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Module</className>
      <methodName>setStructure</methodName>
      <methodSignature>setStructure($structure)</methodSignature>
      <fullMethod>setStructure($structure)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($name, $host = null, $git = null)</methodSignature>
      <fullMethod>__construct($name, $host = null, $git = null)</fullMethod>
      <crap>2.5</crap>
      <complexity>2</complexity>
      <coverage>50</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>extract</methodName>
      <methodSignature>extract()</methodSignature>
      <fullMethod>extract()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>hydrate</methodName>
      <methodSignature>hydrate($data)</methodSignature>
      <fullMethod>hydrate($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getFolder</methodName>
      <methodSignature>getFolder()</methodSignature>
      <fullMethod>getFolder()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getStaticFolder</methodName>
      <methodSignature>getStaticFolder()</methodSignature>
      <fullMethod>getStaticFolder()</fullMethod>
      <crap>4.54</crap>
      <complexity>3</complexity>
      <coverage>44.44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getStaticParentFolder</methodName>
      <methodSignature>getStaticParentFolder()</methodSignature>
      <fullMethod>getStaticParentFolder()</fullMethod>
      <crap>4.54</crap>
      <complexity>3</complexity>
      <coverage>44.44</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setFolder</methodName>
      <methodSignature>setFolder($folder = null)</methodSignature>
      <fullMethod>setFolder($folder = null)</fullMethod>
      <crap>3.03</crap>
      <complexity>3</complexity>
      <coverage>85.71</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getProject</methodName>
      <methodSignature>getProject()</methodSignature>
      <fullMethod>getProject()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setProject</methodName>
      <methodSignature>setProject($name)</methodSignature>
      <fullMethod>setProject($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getHost</methodName>
      <methodSignature>getHost()</methodSignature>
      <fullMethod>getHost()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setHost</methodName>
      <methodSignature>setHost($host)</methodSignature>
      <fullMethod>setHost($host)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getGit</methodName>
      <methodSignature>getGit()</methodSignature>
      <fullMethod>getGit()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setGit</methodName>
      <methodSignature>setGit($git)</methodSignature>
      <fullMethod>setGit($git)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getDatabase</methodName>
      <methodSignature>getDatabase()</methodSignature>
      <fullMethod>getDatabase()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setDatabase</methodName>
      <methodSignature>setDatabase($database)</methodSignature>
      <fullMethod>setDatabase($database)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getUsername</methodName>
      <methodSignature>getUsername()</methodSignature>
      <fullMethod>getUsername()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setUsername</methodName>
      <methodSignature>setUsername($username)</methodSignature>
      <fullMethod>setUsername($username)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getPassword</methodName>
      <methodSignature>getPassword()</methodSignature>
      <fullMethod>getPassword()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setPassword</methodName>
      <methodSignature>setPassword($password)</methodSignature>
      <fullMethod>setPassword($password)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>getNfs</methodName>
      <methodSignature>getNfs()</methodSignature>
      <fullMethod>getNfs()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Project</className>
      <methodName>setNfs</methodName>
      <methodSignature>setNfs($nfs)</methodSignature>
      <fullMethod>setNfs($nfs)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceManager</className>
      <methodName>getService</methodName>
      <methodSignature>getService()</methodSignature>
      <fullMethod>getService()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceManager</className>
      <methodName>setService</methodName>
      <methodSignature>setService($service)</methodSignature>
      <fullMethod>setService($service)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceManager</className>
      <methodName>getObject</methodName>
      <methodSignature>getObject()</methodSignature>
      <fullMethod>getObject()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceManager</className>
      <methodName>setObject</methodName>
      <methodSignature>setObject($object)</methodSignature>
      <fullMethod>setObject($object)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ServiceManager</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>getTable</methodName>
      <methodSignature>getTable()</methodSignature>
      <fullMethod>getTable()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>setTable</methodName>
      <methodSignature>setTable($table)</methodSignature>
      <fullMethod>setTable($table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>getColumn</methodName>
      <methodSignature>getColumn()</methodSignature>
      <fullMethod>getColumn()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>setColumn</methodName>
      <methodSignature>setColumn($column)</methodSignature>
      <fullMethod>setColumn($column)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>getTarget</methodName>
      <methodSignature>getTarget()</methodSignature>
      <fullMethod>getTarget()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Speciality</className>
      <methodName>setTarget</methodName>
      <methodSignature>setTarget($target)</methodSignature>
      <fullMethod>setTarget($target)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($data)</methodSignature>
      <fullMethod>__construct($data)</fullMethod>
      <crap>5</crap>
      <complexity>5</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>export</methodName>
      <methodSignature>export()</methodSignature>
      <fullMethod>export()</fullMethod>
      <crap>4.13</crap>
      <complexity>4</complexity>
      <coverage>80</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getType</methodName>
      <methodSignature>getType()</methodSignature>
      <fullMethod>getType()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>setDependency</methodName>
      <methodSignature>setDependency($dependency = null)</methodSignature>
      <fullMethod>setDependency($dependency = null)</fullMethod>
      <crap>3</crap>
      <complexity>3</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getDependency</methodName>
      <methodSignature>getDependency()</methodSignature>
      <fullMethod>getDependency()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>hasDependency</methodName>
      <methodSignature>hasDependency()</methodSignature>
      <fullMethod>hasDependency()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>setType</methodName>
      <methodSignature>setType($type)</methodSignature>
      <fullMethod>setType($type)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getExtends</methodName>
      <methodSignature>getExtends()</methodSignature>
      <fullMethod>getExtends()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>setExtends</methodName>
      <methodSignature>setExtends($extends)</methodSignature>
      <fullMethod>setExtends($extends)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getDb</methodName>
      <methodSignature>getDb()</methodSignature>
      <fullMethod>getDb()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>setDb</methodName>
      <methodSignature>setDb($db)</methodSignature>
      <fullMethod>setDb($db)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>getAbstract</methodName>
      <methodSignature>getAbstract()</methodSignature>
      <fullMethod>getAbstract()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Src</className>
      <methodName>setAbstract</methodName>
      <methodSignature>setAbstract($abstract)</methodSignature>
      <fullMethod>setAbstract($abstract)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>getInsertArray</methodName>
      <methodSignature>getInsertArray()</methodSignature>
      <fullMethod>getInsertArray()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>setInsertArray</methodName>
      <methodSignature>setInsertArray($insertArray)</methodSignature>
      <fullMethod>setInsertArray($insertArray)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>getInsertAssert</methodName>
      <methodSignature>getInsertAssert()</methodSignature>
      <fullMethod>getInsertAssert()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>setInsertAssert</methodName>
      <methodSignature>setInsertAssert($insertAssert)</methodSignature>
      <fullMethod>setInsertAssert($insertAssert)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>getUpdateArray</methodName>
      <methodSignature>getUpdateArray()</methodSignature>
      <fullMethod>getUpdateArray()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>setUpdateArray</methodName>
      <methodSignature>setUpdateArray($updateArray)</methodSignature>
      <fullMethod>setUpdateArray($updateArray)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>getUpdateAssert</methodName>
      <methodSignature>getUpdateAssert()</methodSignature>
      <fullMethod>getUpdateAssert()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>setUpdateAssert</methodName>
      <methodSignature>setUpdateAssert($updateAssert)</methodSignature>
      <fullMethod>setUpdateAssert($updateAssert)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>getInsertSelect</methodName>
      <methodSignature>getInsertSelect()</methodSignature>
      <fullMethod>getInsertSelect()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UnitTestValues</className>
      <methodName>setInsertSelect</methodName>
      <methodSignature>setInsertSelect($insertSelect)</methodSignature>
      <fullMethod>setInsertSelect($insertSelect)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct(TableObject $table)</methodSignature>
      <fullMethod>__construct(TableObject $table)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getName</methodName>
      <methodSignature>getName()</methodSignature>
      <fullMethod>getName()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>setName</methodName>
      <methodSignature>setName($name)</methodSignature>
      <fullMethod>setName($name)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getColumns</methodName>
      <methodSignature>getColumns()</methodSignature>
      <fullMethod>getColumns()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>setColumns</methodName>
      <methodSignature>setColumns($columns)</methodSignature>
      <fullMethod>setColumns($columns)</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getConstraints</methodName>
      <methodSignature>getConstraints()</methodSignature>
      <fullMethod>getConstraints()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>setConstraints</methodName>
      <methodSignature>setConstraints($constraints)</methodSignature>
      <fullMethod>setConstraints($constraints)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getHasUnique</methodName>
      <methodSignature>getHasUnique()</methodSignature>
      <fullMethod>getHasUnique()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getUnique</methodName>
      <methodSignature>getUnique()</methodSignature>
      <fullMethod>getUnique()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Table</className>
      <methodName>getPrimaryKeyColumnName</methodName>
      <methodSignature>getPrimaryKeyColumnName()</methodSignature>
      <fullMethod>getPrimaryKeyColumnName()</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($data)</methodSignature>
      <fullMethod>__construct($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>prepare</methodName>
      <methodSignature>prepare($moduleName)</methodSignature>
      <fullMethod>prepare($moduleName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getFileNameToClass</methodName>
      <methodSignature>getFileNameToClass()</methodSignature>
      <fullMethod>getFileNameToClass()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getFileName</methodName>
      <methodSignature>getFileName()</methodSignature>
      <fullMethod>getFileName()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getFileLocation</methodName>
      <methodSignature>getFileLocation()</methodSignature>
      <fullMethod>getFileLocation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getSuite</methodName>
      <methodSignature>getSuite()</methodSignature>
      <fullMethod>getSuite()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>setSuite</methodName>
      <methodSignature>setSuite($suite)</methodSignature>
      <fullMethod>setSuite($suite)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getTarget</methodName>
      <methodSignature>getTarget()</methodSignature>
      <fullMethod>getTarget()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>setTarget</methodName>
      <methodSignature>setTarget($target)</methodSignature>
      <fullMethod>setTarget($target)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>setFileLocation</methodName>
      <methodSignature>setFileLocation($fileLocation)</methodSignature>
      <fullMethod>setFileLocation($fileLocation)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>setFileName</methodName>
      <methodSignature>setFileName($fileName)</methodSignature>
      <fullMethod>setFileName($fileName)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>getTestFolder</methodName>
      <methodSignature>getTestFolder()</methodSignature>
      <fullMethod>getTestFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Test</className>
      <methodName>setTestFolder</methodName>
      <methodSignature>setTestFolder($testFolder)</methodSignature>
      <fullMethod>setTestFolder($testFolder)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getInputFilter</methodName>
      <methodSignature>getInputFilter()</methodSignature>
      <fullMethod>getInputFilter()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>__construct</methodName>
      <methodSignature>__construct($data)</methodSignature>
      <fullMethod>__construct($data)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getFileName</methodName>
      <methodSignature>getFileName()</methodSignature>
      <fullMethod>getFileName()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getFileLocation</methodName>
      <methodSignature>getFileLocation()</methodSignature>
      <fullMethod>getFileLocation()</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>prepare</methodName>
      <methodSignature>prepare($moduleName)</methodSignature>
      <fullMethod>prepare($moduleName)</fullMethod>
      <crap>2</crap>
      <complexity>2</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getTarget</methodName>
      <methodSignature>getTarget()</methodSignature>
      <fullMethod>getTarget()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>setTarget</methodName>
      <methodSignature>setTarget($dir)</methodSignature>
      <fullMethod>setTarget($dir)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getViewFolder</methodName>
      <methodSignature>getViewFolder()</methodSignature>
      <fullMethod>getViewFolder()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>setViewFolder</methodName>
      <methodSignature>setViewFolder($mainFolder)</methodSignature>
      <fullMethod>setViewFolder($mainFolder)</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>getModule</methodName>
      <methodSignature>getModule()</methodSignature>
      <fullMethod>getModule()</fullMethod>
      <crap>1</crap>
      <complexity>1</complexity>
      <coverage>100</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>setModule</methodName>
      <methodSignature>setModule($module)</methodSignature>
      <fullMethod>setModule($module)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>setFileLocation</methodName>
      <methodSignature>setFileLocation($fileLocation)</methodSignature>
      <fullMethod>setFileLocation($fileLocation)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>View</className>
      <methodName>setFileName</methodName>
      <methodSignature>setFileName($fileName)</methodSignature>
      <fullMethod>setFileName($fileName)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>ArrayToYml</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($options)</methodSignature>
      <fullMethod>__invoke($options)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Attribute</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Attribute</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($stringService)</methodSignature>
      <fullMethod>setServiceLocator($stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Attribute</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($dependencies)</methodSignature>
      <fullMethod>__invoke($dependencies)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DependencyInjection</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DependencyInjection</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($stringService)</methodSignature>
      <fullMethod>setServiceLocator($stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>DependencyInjection</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($dependencies)</methodSignature>
      <fullMethod>__invoke($dependencies)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>RouteConstraint</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($action)</methodSignature>
      <fullMethod>__invoke($action)</fullMethod>
      <crap>20</crap>
      <complexity>4</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Str</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Str</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($stringService)</methodSignature>
      <fullMethod>setServiceLocator($stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Str</className>
      <methodName>getStrService</methodName>
      <methodSignature>getStrService()</methodSignature>
      <fullMethod>getStrService()</fullMethod>
      <crap>6</crap>
      <complexity>2</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>Str</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($type, $str)</methodSignature>
      <fullMethod>__invoke($type, $str)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestDependencyInjection</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestDependencyInjection</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($stringService)</methodSignature>
      <fullMethod>setServiceLocator($stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>TestDependencyInjection</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($dependencies)</methodSignature>
      <fullMethod>__invoke($dependencies)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UseNaming</className>
      <methodName>getServiceLocator</methodName>
      <methodSignature>getServiceLocator()</methodSignature>
      <fullMethod>getServiceLocator()</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UseNaming</className>
      <methodName>setServiceLocator</methodName>
      <methodSignature>setServiceLocator($stringService)</methodSignature>
      <fullMethod>setServiceLocator($stringService)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
    <method>
      <package></package>
      <className>UseNaming</className>
      <methodName>__invoke</methodName>
      <methodSignature>__invoke($dependencies)</methodSignature>
      <fullMethod>__invoke($dependencies)</fullMethod>
      <crap>2</crap>
      <complexity>1</complexity>
      <coverage>0</coverage>
      <crapLoad>0</crapLoad>
    </method>
  </methods>
</crap_result>
