namespace <?php echo $this->module;?>\<?php echo $this->module;?>Test\ValueObjectTest;

use GearBaseTest\AbstractTestCase;

/**
 * @SuppressWarnings(PHPMD.TooManyMethods)
 * @group <?php echo $this->module.PHP_EOL;?>
 * @group <?php echo $this->serviceNameClass.PHP_EOL;?>
 * @group ValueObject
 */
class <?php echo $this->serviceNameClass;?>Test extends AbstractTestCase
{
    protected $<?php echo $this->serviceNameUline;?>;

    public function get<?php echo $this->serviceNameClass;?>()
    {
        if (!isset($this-><?php echo $this->serviceNameUline;?>)) {
            $this-><?php echo $this->serviceNameUline;?> = $this->bootstrap->getServiceLocator()->get('<?php echo $this->module;?>\ValueObject\<?php echo $this->serviceNameClass;?>');
        }
        return $this-><?php echo $this->serviceNameUline;?>;
    }

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->serviceNameClass.PHP_EOL;?>
     */
    public function testCallUsingServiceLocator()
    {
        $<?php echo $this->serviceNameUline;?> = $this->get<?php echo $this->serviceNameClass;?>();
        $this->assertInstanceOf('<?php echo $this->module;?>\ValueObject\<?php echo $this->serviceNameClass;?>', $<?php echo $this->serviceNameUline;?>);
    }


    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->serviceNameClass.PHP_EOL;?>
    */
    public function testCallClassName()
    {
        $<?php echo $this->serviceNameUline;?> = $this->get<?php echo $this->serviceNameClass;?>();
        $className = $<?php echo $this->serviceNameUline;?>->getClassName();
        $this->assertEquals('<?php echo $this->serviceNameClass;?>', $className);
    }
}
