namespace <?php echo $this->module;?>\Fixture;

use Doctrine\Common\Persistence\ObjectManager;
use Doctrine\Common\DataFixtures\AbstractFixture;
use <?php echo $this->module?>\Entity\<?php echo str_replace('Fixture', '', $this->name);?>;
<?php echo $this->use;?>

/**
 * Fixture for <?php echo $this->tableLabel;?> Entity.
 *
 * PHP Version 5
 *
 * @category Fixture
 * @package <?php echo $this->package.PHP_EOL;?>
 * @author Mauricio Piber <mauriciopiber@gmail.com>
 * @license GPL3-0 http://www.gnu.org/licenses/gpl-3.0.en.html
 * @link http://pibernetwork.com
 */
class <?php echo $this->name;?> extends AbstractFixture<?php echo $this->implements;?>
{
<?php echo $this->attribute;?>

    /**
     * Load Fixture
     *
     * @param ObjectManager $manager Object Manager
     *
     * @return void
     */
    public function load(ObjectManager $manager)
    {
        $this->manager = $manager;
<?php echo $this->preLoad;?>
        foreach ($this->getFixture() as $i => $fixture) {
            $reference = $i+1;
            $<?php echo $this->var;?> = new <?php echo str_replace('Fixture', '', $this->name);?>();
<?php foreach ($this->fields as $field):?>
<?php echo $field.PHP_EOL;?>
<?php endforeach;?>
            $userReferenced = $this->getReferenceToEntity($reference);
            $<?php echo $this->var;?>->setCreated(new \DateTime('now'));
            $<?php echo $this->var;?>->setCreatedBy($userReferenced);
            $this->manager->persist($<?php echo $this->var;?>);
            $this->manager->flush();
            $this->addReference("<?php echo $this->str('url', str_replace('Fixture', '', $this->name)); ?>-$reference", $<?php echo $this->var;?>);
<?php echo $this->load;?>
        }
    }

    /**
     * Return Fixture Data Generated.
     *
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
     *
     * @return array
     */
    public function getFixture()
    {
<?php echo $this->getFixture;?>
        return [
<?php foreach ($this->data as $item):?>
<?php echo $item;?>
<?php endforeach;?>
        ***REMOVED***;
    }

    /**
     * Load the User Entity.
     *
     * To be used on created_by and updated_by column.
     *
     * @param Integer $referenced Número de Referência
     *
     * @return GearAdmin\Entity\User
     */
    public function getReferenceToEntity($referenced = 1)
    {
        $referencedName = sprintf('usuariogear%d', ($referenced <= 6) ? $referenced : (($referenced%6)+1));
        $userId = $this->getReference($referencedName);
        return $this->manager
          ->getRepository('GearAdmin\Entity\User')
          ->findOneBy(array('idUser' => $userId->getIdUser()));
    }
<?php echo $this->dependency;?>
}
