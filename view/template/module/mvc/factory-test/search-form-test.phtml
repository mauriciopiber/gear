namespace <?php echo $this->module;?>Test\<?php echo $this->namespace; ?>;

use PHPUnit\Framework\TestCase;
use Interop\Container\ContainerInterface;
use <?php echo $this->module?>\<?php echo $this->testNamespace;?>\<?php echo $this->class;?>Factory;
use <?php echo $this->module?>\<?php echo $this->testNamespace;?>\<?php echo $this->class;?>;
use Doctrine\ORM\EntityManager;

/**
 * @group <?php echo $this->module.PHP_EOL; ?>
 * @group <?php echo $this->class.PHP_EOL; ?>
 * @group <?php echo $this->group.PHP_EOL; ?>
 */
class <?php echo $this->class;?>FactoryTest extends TestCase
{
    public function test<?php echo $this->class;?>Factory()
    {
        $this->container = $this->prophesize(ContainerInterface::class);

        $this->entityManager = $this->prophesize(EntityManager::class);
        $this->container->get('doctrine.entitymanager.orm_default')->willReturn($this->entityManager);

        $factory = new <?php echo $this->class;?>Factory();

        $instance = $factory->__invoke($this->container->reveal(), null);

        $this->assertInstanceOf(<?php echo $this->class;?>::class, $instance);
    }
}
