namespace <?php echo $this->module;?>\Service;

use GearBase\Service\AbstractService;
<?php echo $this->use;?>

class <?php echo $this->class;?> extends <?php echo $this->extends.PHP_EOL;?>
{
<?php echo $this->attribute;?>

    protected $sessionName;

    protected $authService;
<?php echo $this->authadapter;?>

    public function getTableHead()
    {
        $map = $this->get<?php echo $this->repository;?>()->getMapReferences();
        return $this->getTableHeadFromMap($map);
    }

    public function getSessionName()
    {
        if (!isset($this->sessionName)) {
            $this->sessionName = '<?php echo $this->var;?>Session';
        }
        return $this->sessionName;
    }

    public function selectOneBy(array $data)
    {
        return $this->get<?php echo $this->repository;?>()->selectOneBy($data);
    }

<?php echo $this->selectviewbyid;?>
    public function selectAll($select = array())
    {
        $this->cache      = $this->getCache();
        $this->repository = $this->get<?php echo $this->repository;?>();

<?php echo $this->selectAll;?>

    }
<?php echo $this->overwrite;?>

    public function create($data)
    {
        $repository = $this->get<?php echo $this->repository;?>();

<?php echo isset($this->create[0***REMOVED***) ? $this->create[0***REMOVED*** : PHP_EOL;?>

        $<?php echo $this->var;?> = $repository->insert($data);
        if ($<?php echo $this->var;?>) {
<?php echo isset($this->create[1***REMOVED***) ? $this->create[1***REMOVED*** : PHP_EOL;?>
            $this->clearCache();
        }
        return $<?php echo $this->var;?>;
    }

    public function update($idTable, $data = array())
    {
        $repository = $this->get<?php echo $this->repository;?>();

<?php echo isset($this->update[0***REMOVED***) ? $this->update[0***REMOVED*** : PHP_EOL;?>

        $<?php echo $this->var;?> = $repository->update($idTable, $data);
        if ($<?php echo $this->var;?>) {
<?php echo isset($this->update[1***REMOVED***) ? $this->update[1***REMOVED*** : PHP_EOL;?>
            $this->clearCache();
        }
        return $<?php echo $this->var;?>;
    }

    public function delete($idTable)
    {
        $entity = $this->selectById($idTable);

        if (!$entity) {
            return ['success' => false, 'error' => 'EntityNotFound'***REMOVED***;
        }

        $repository = $this->get<?php echo $this->repository;?>();
        $<?php echo $this->var;?> = $repository->deleteSafe($entity);


        if ($<?php echo $this->var;?>) {
<?php if ($this->tableUploadImage) :?>
            $this->getImageService()->deleteImages($idTable, '<?php echo $this->var;?>');
<?php endif;?>
<?php echo (isset($this->delete[0***REMOVED***) ? $this->delete[0***REMOVED*** : PHP_EOL);?>
            $this->clearCache();
        }
        return $<?php echo $this->var;?>;
    }

    public function extract(\<?php echo $this->module;?>\Entity\<?= $this->str('class', $this->baseName)?> $data)
    {
        $repository = $this->get<?php echo $this->repository;?>();
        return $repository->extract($data);
    }

<?php echo $this->functions;?>
<?php if ($this->imagemService) :?>

    public function getImageService()
    {
        if (!isset($this->imagemService)) {
            $this->imagemService =
            $this->getServiceLocator()->get('GearImage\Service\ImagemService');
        }
        return $this->imagemService;
    }
<?php endif;?>
}
