namespace <?php echo $this->module;?>\<?php echo $this->module;?>Test\EntityTest;

use PHPUnit\Framework\TestCase;
use <?php echo $this->module;?>\Entity\<?php echo $this->className;?>;

/**
 * @group <?php echo $this->module.PHP_EOL;?>
 * @group <?php echo $this->className.PHP_EOL;?>
 * @group Entity
 */
class <?php echo $this->className;?>Test extends TestCase
{
    public function setUp() : void
    {
        parent::setUp();
        $this->entity = new <?php echo $this->className;?>();
    }

    public function test<?php echo $this->className;?>FieldsStartWithNull()
    {
<?php foreach ($this->assertNull as $line) : ?>
        <?php echo $line.PHP_EOL;?>
<?php endforeach;?>
    }

    /**
     * @SuppressWarnings(PHPMD.ExcessiveParameterList)
     *
     * @dataProvider get<?php echo $this->className;?>FieldsProvider
     */
    public function test<?php echo $this->className;?>Fields(
<?php echo implode(','.PHP_EOL, $this->params);echo PHP_EOL;?>
    ) {
<?php foreach ($this->asserts as $line) : ?>
<?php echo $line.PHP_EOL;?>
<?php endforeach;?>
    }

    public function get<?php echo $this->className;?>FieldsProvider()
    {
<?php foreach ($this->mocks as $mock) : ?>
<?php echo $mock.PHP_EOL;?>
<?php endforeach;?>
        return [
            [
<?php echo implode(','.PHP_EOL, $this->exports);echo PHP_EOL;?>
            ***REMOVED***
        ***REMOVED***;
    }
}
