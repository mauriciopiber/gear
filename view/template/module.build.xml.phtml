<project name="<?php echo $this->moduleName;?>" default="build" basedir=".">

  <target name="set-vendor" depends="isRunningAsModule, isRunningAsVendor, isRunningAsProject"/>
  <target name="isRunningAsModule" depends="check.runningAsModule" if="dir.exists">
    <property name="vendor" value="${basedir}/../../vendor"/>
  </target>
  <target name="isRunningAsVendor" depends="check.runningAsVendor" if="dir.exists">
    <property name="vendor" value="${basedir}/../../../vendor"/>
  </target>
  <target name="isRunningAsProject" depends="check.runningAsProject" if="dir.exists">
    <property name="vendor" value="${basedir}/vendor"/>
  </target>
  <target name="check.runningAsModule">
    <condition property="dir.exists">
      <available file="${basedir}/../../vendor" type="dir"/>
    </condition>
  </target>
  <target name="check.runningAsVendor">
    <condition property="dir.exists">
      <available file="${basedir}/../../../vendor" type="dir"/>
    </condition>
  </target>
  <target name="check.runningAsProject">
    <condition property="dir.exists">
      <available file="${basedir}/vendor" type="dir"/>
    </condition>
  </target>
  <target name="build" depends="prepare, set-vendor, parallel-lint, phpcs-ci, phpmd-ci, phpcpd-ci, buildHelper, unit-ci, phploc-ci, pdepend, phpdox"/>
  <target name="parallel-lint" depends="set-vendor" description="Run PHP parallel lint For Continuous Integration">
    <exec executable="${vendor}/bin/parallel-lint" failonerror="true">
      <arg line="--exclude"/>
      <arg path="${basedir}/vendor"/>
      <arg path="${basedir}"/>
    </exec>
  </target>
  <target name="unit-ci" depends="set-vendor" description="Run unit tests with Codeception For Continuous Integration">
    <exec executable="${vendor}/bin/codecept" failonerror="true">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="--xml"/>
      <arg value="--coverage-xml"/>
      <arg value="--coverage-html"/>
    </exec>
  </target>
	<target name="build-codeception" depends="prepare,lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci,codeception-ci,phpdox"/>

	<target name="build-phpunit" depends="prepare,lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci,phpunit-ci,phpdox" description=""/>
    <!-- cli command line -->
    <!-- not generate anything at all. lock up to HTML code coverage to UP 80% -->
    <target name="dev" depends="prepare, set-vendor, parallel-lint, phpcs, phpmd,phpcpd,unit, unit-ci"/>

    <!-- generate all informations about project instead  -->
    <!-- jenkins job $project-light -->
    <target name="light" depends="prepare,lint,phpcs-ci,phpmd-ci,phpcpd-ci,codeception-report"/>

    <!-- jenkins job $project -->
    <target name="standard" depends="prepare,lint,phpcs-ci,phpmd-ci,phpcpd-ci,codeception-report,phploc,pdepend,phpdox,phpunit-ci"/>

    <target name="codecept" depends="unit,acceptance,functional"/>

    <!-- most important action for acceptance/functional until then. -->
    <target name="codeception-report" depends="prepare, set-vendor, buildHelper">
	    <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="--xml" />
	   </exec>
    </target>


    <target name="acceptance-group" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="acceptance" />
 	       <arg value="-g" />
           <arg value="${s}" />
	   </exec>
    </target>
    <target name="functional-group" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="functional" />
	       <arg value="-g" />
           <arg value="${s}" />
	   </exec>
    </target>
    <target name="unit-group" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="unit" />
 	       <arg value="-g" />
           <arg value="${s}" />
	   </exec>
    </target>


	<target name="buildHelper" depends="set-vendor">
		  <exec executable="${vendor}/bin/codecept" >
	          <arg value="build" />
          </exec>
	</target>
        <!-- most important action for acceptance/functional until then. -->
    <target name="codeception-ci" depends="prepare, set-vendor, buildHelper">
	    <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="--xml"/>
	       <arg value="--coverage-xml"/>
	       <arg value="--coverage-html"/>
	   </exec>
    </target>

    <target name="codeception" depends="prepare, set-vendor, buildHelper">
	    <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	   </exec>
    </target>

    <target name="single-acceptance" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="acceptance" />
	       <arg value="${s}" />
	   </exec>
    </target>

    <target name="single-functional" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="functional" />
	       <arg value="${s}" />
	   </exec>
    </target>

    <target name="single-unit" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="unit" />
	       <arg value="${s}" />
	   </exec>
    </target>

    <target name="phpunit-filter" description="Run unit tests with PHPUnit" depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" >
            <arg value="--configuration=${basedir}/config/jenkins/phpunit.xml"/>
            <arg value="--filter=${s}"/>
            <arg value="--debug"/>
        </exec>
    </target>

    <target name="phpunit-fast-coverage-group" description="Run unit tests with PHPUnit"  depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" >
            <arg value="--configuration=${basedir}/config/jenkins/phpunit-fast-coverage.xml"/>
            <arg value="--group=${s}"/>
            <arg value="--debug"/>
            <arg value="--stderr"/>
        </exec>
    </target>

    <target name="phpunit-group" description="Run unit tests with PHPUnit"  depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" >
            <arg value="--configuration=${basedir}/config/jenkins/phpunit.xml"/>
            <arg value="--group=${s}"/>
            <arg value="--debug"/>
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit"  depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" >
            <arg value="--configuration=${basedir}/config/jenkins/phpunit.xml"/>
            <arg value="--debug"/>
            <arg value="--stderr"/>
        </exec>
    </target>


    <target name="phpunit-file" description="Run unit tests with PHPUnit"  depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" failonerror="true">
            <arg value="--configuration=${basedir}/config/jenkins/phpunit.xml"/>
            <arg value="${s}"/>
            <arg value="--debug"/>
            <arg value="--stderr"/>
        </exec>
    </target>

    <target name="phpunit-fast-coverage" description="Run unit tests with PHPUnit"  depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" >
            <arg value="--configuration=${basedir}/config/jenkins/phpunit-fast-coverage.xml"/>
            <arg value="--debug"/>
            <arg value="--stderr"/>
        </exec>
    </target>

    <target name="phpunit-ci" description="Run unit tests with PHPUnit" depends="set-vendor">
        <exec executable="${vendor}/bin/phpunit" >
             <arg value="--configuration=${basedir}/config/jenkins/phpunitci.xml"/>
             <arg value="--stderr"/>
        </exec>
    </target>

    <target name="phpmd" description="MessDetector" depends="set-vendor">
        <exec executable="${vendor}/bin/phpmd"  >
            <arg path="${basedir}" />
            <arg value="text" />
            <arg value="${basedir}/config/jenkins/phpmd.xml" />
            <arg value="--exclude"/>
        	<arg value="test/_support/_generated"/>
        </exec>
    </target>
	<target name="phpmd-ci" description="PHPMD" depends="set-vendor">
		<exec executable="${vendor}/bin/phpmd">
			<arg path="${basedir}" />
			<arg value="xml" />
			<arg value="${basedir}/config/jenkins/phpmd.xml" />
			<arg value="--reportfile" />
			<arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude"/>
        	<arg value="test/_support/_generated"/>
		</exec>
	</target>

    <target name="phpcs" description="Code Sniffer" depends="set-vendor">
        <exec executable="${vendor}/bin/phpcs"  >
            <arg value="--standard=PSR2" />
            <arg path="${basedir}" />
            <arg value="--ignore=public" />
        	<arg value="--ignore=build" />
            <arg value="--ignore=test/_support/_generated" />
        </exec>
    </target>

  	<target name="phpcs-ci" description="PHP_CodeSniffer Continuous Integration"  depends="set-vendor">
		<exec executable="${vendor}/bin/phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=PSR2" />
			<arg path="${basedir}/" />
		    <arg value="--ignore=public" />
        	<arg value="--ignore=build" />
            <arg value="--ignore=test/_support/_generated" />
		</exec>
	</target>

	<target name="codeception-clean">
		<delete file="${basedir}/test/_support/AcceptanceTester.php"/>
		<delete file="${basedir}/test/_support/FunctionalTester.php"/>
	    <delete file="${basedir}/test/_support/UnitTester.php"/>
	</target>

    <target name="phpcpd" description="PHPCPD" depends="set-vendor, codeception-clean">
        <exec executable="${vendor}/bin/phpcpd"  >
            <arg path="${basedir}" />
        	<arg value="--exclude=language"/>
        	<arg value="--exclude=test/_support/_generated"/>
        </exec>
    </target>
    <target name="phpcpd-ci" description="Find duplicate code using PHPCPD" depends="codeception-clean, set-vendor">
		<exec executable="${vendor}/bin/phpcpd">
			<arg value="--log-pmd" />
			<arg value="${basedir}/build/logs/pmd-cpd.xml" />
			<arg path="${basedir}/" />
        	<arg value="--exclude=language"/>
        	<arg value="--exclude=test/_support/_generated"/>
		</exec>
    </target>

    <target name="functional" description="Codeception Funtional" depends="set-vendor, buildHelper">
        <exec executable="${vendor}/bin/codecept" >
            <arg value="run" />
            <arg value="functional" />
        </exec>
    </target>
    <target name="acceptance" description="Codeception Acceptance" depends="set-vendor, buildHelper">
        <exec executable="${vendor}/bin/codecept" >
            <arg value="run" />
            <arg value="acceptance" />
        </exec>
    </target>
    <target name="unit" description="Run unit tests with PHPUnit" depends="set-vendor, buildHelper">
        <exec executable="${vendor}/bin/codecept" >
            <arg value="run" />
            <arg value="unit" />
            <arg value="--xml"/>
        </exec>
    </target>


    <target name="unit-coverage" description="Run unit tests with PHPUnit" depends="set-vendor, buildHelper">
        <exec executable="${vendor}/bin/codecept" >
            <arg value="run" />
            <arg value="unit" />
            <arg value="--coverage" />
            <arg value="--coverage-html" />
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend" depends="set-vendor">
		<exec executable="${vendor}/bin/pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg
				value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg path="${basedir}/src" />
		</exec>
	</target>
	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg value="--log-csv" />
			<arg value="${basedir}/build/logs/phploc.csv" />
			<arg path="${basedir}/" />
		</exec>
	</target>

	<target name="phploc-ci"
	         depends="prepare, set-vendor"
	         description="Measure project size using PHPLOC and log result in CSV and XML format. Intended for usage within a continuous integration environment.">
	  <exec executable="${vendor}/bin/phploc">
	   <arg value="--count-tests" />
	   <arg value="--log-csv" />
	   <arg path="${basedir}/build/logs/phploc.csv" />
	   <arg value="--log-xml" />
	   <arg path="${basedir}/build/logs/phploc.xml" />
	   <arg path="${basedir}/src" />
	   <arg path="${basedir}/test" />
	  </exec>
	 </target>

	<target name="phpdox" description="Generate API documentation using phpDox">
		<exec executable="phpdox">
	    </exec>
	</target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" >
            <arg value="-l" />

            <fileset dir="${basedir}">
                <include name="**/*.php" />
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/coverage" />
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/pdepend" />
        <delete dir="${basedir}/build/phpdox" />
    </target>
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />
        <mkdir dir="${basedir}/build/phpdox" />
    </target>



	<target name="unit-set" description="Run unit tests with PHPUnit" depends="set-vendor, buildHelper">
		<exec executable="${vendor}/bin/codecept">
			<arg value="run" />
			<arg value="unit" />
			<arg value="${basedir}/test/unit/${s}" />
		</exec>
	</target>

	<target name="acceptance-set" description="Codeception Acceptance" depends="set-vendor, buildHelper">
		<exec executable="${vendor}/bin/codecept">
			<arg value="run" />
			<arg value="acceptance" />
			<arg value="${s}" />
		</exec>
	</target>

	<target name="functional-set" description="Codeception Funtional" depends="set-vendor, buildHelper">
		<exec executable="${vendor}/bin/codecept">
			<arg value="run" />
			<arg value="functional" />
			<arg value="${s}" />
		</exec>
	</target>

	<target name="codeception-set" depends="functional-set, acceptance-set"/>

	<target name="unit-coverage-set" description="Run unit tests with PHPUnit" depends="set-vendor, buildHelper">
		<exec executable="${vendor}/bin/codecept">
			<arg value="run" />
			<arg value="unit" />
			<arg value="${basedir}/test/unit/${s}" />
			<arg value="--coverage-html" />
		</exec>
	</target>

	<target name="file-check" depends="phpcs-set, phpmd-set, lint-set, cat"/>

	<target name="cat" depends="set-vendor">
	    <exec executable="cat">
	    	<arg value="${basedir}/${s}" />
		</exec>
	</target>

	<target name="phpcs-set" description="Code Sniffer" depends="set-vendor">
		<exec executable="${vendor}/bin/phpcs">
			<arg value="--standard=PSR2" />
			<arg value="${basedir}/${s}" />
			<arg value="--ignore=public" />

		</exec>
	</target>
	<target name="phpmd-set" description="MessDetector" depends="set-vendor">
		<exec executable="${vendor}/bin/phpmd">
			<arg value="${basedir}/${s}" />
			<arg value="text" />
			<arg value="${basedir}/config/jenkins/phpmd.xml" />
		</exec>
	</target>
	<target name="lint-set" description="Perform syntax check of sourcecode files">
		<exec executable="php">
			<arg value="-l" />
			<arg value="${basedir}/${s}" />
		</exec>
	</target>




    <target name="unit-group-coverage" depends="set-vendor, buildHelper">
          <exec executable="${vendor}/bin/codecept" >
	       <arg value="run" />
	       <arg value="unit" />
 	       <arg value="-g" />
           <arg value="${s}" />
  	       <arg value="--coverage-html"/>
	   </exec>
    </target>

</project>