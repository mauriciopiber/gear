<project name="<?php echo $this->project;?>" default="build" basedir=".">
    <target name="build" depends="prepare, parallel-lint, protractor, karma, jshint-ci, phpcs-ci, phpmd-ci, phpcpd-ci, buildHelper, unit-ci, phploc-ci, pdepend, phpdox" />
    <target name="dev" depends="prepare, parallel-lint, phpcs, phpmd, phpcpd, unit" />
    <target name="js" depends="prepare, protractor, karma, jshint" />

	<target name="protractor">
		 <exec executable="${basedir}/node_modules/.bin/protractor" >
		 	<arg value="protractor.conf.js" />
		 </exec>
	</target>

	<target name="karma">
		 <exec executable="${basedir}/node_modules/.bin/karma" >
		 	<arg value="start" />
		 </exec>
	</target>
	<target name="jshint-ci">
        	<exec executable="${basedir}/node_modules/.bin/jshint" >
                <arg value="--jslint-reporter" />
	        <arg value="${basedir}/public/js/app" />
	        <redirector output="build/logs/jshint.xml" alwayslog="true"/>
	    </exec>
	</target>
	<target name="jshint">
        <exec executable="${basedir}/node_modules/.bin/jshint" >
	        <arg value="${basedir}/public/js/app" />
	    </exec>
	</target>
    <target name="phpunit-benchmark" description="Run unit tests with PHPUnit">
        <exec executable="${basedir}/vendor/bin/phpunit">
          <arg value="--configuration=${basedir}/test/phpunit-benchmark.xml"/>
        </exec>
    </target>
    <target name="parallel-lint" description="Run PHP parallel lint For Continuous Integration">
        <exec executable="${basedir}/vendor/bin/parallel-lint" failonerror="true">
            <arg line="--exclude" />
            <arg path="${basedir}/vendor" />
            <arg line="--exclude" />
            <arg path="${basedir}/node_modules" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpmd" description="MessDetector">
        <exec executable="${basedir}/vendor/bin/phpmd">
            <arg path="${basedir}/module" />
            <arg value="text" />
            <arg value="${basedir}/test/phpmd.xml" />
        </exec>
    </target>
    <target name="phpmd-ci" description="PHPMD">
        <exec executable="${basedir}/vendor/bin/phpmd">
            <arg path="${basedir}/module" />
            <arg value="xml" />
            <arg value="${basedir}/test/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="test/_support/_generated" />
        </exec>
    </target>
    <target name="phpcs-docs" description="Code Sniffer">
        <exec executable="${basedir}/vendor/bin/phpcs">
            <arg value="--standard=${basedir}/test/docs-phpcs.xml" />
            <arg path="${basedir}/module" />
        </exec>
    </target>
    <target name="phpcs" description="Code Sniffer">
        <exec executable="${basedir}/vendor/bin/phpcs">
            <arg value="--standard=PSR2" />
            <arg path="${basedir}/module" />
        </exec>
    </target>
    <target name="phpcs-ci" description="PHP_CodeSniffer Continuous Integration">
        <exec executable="${basedir}/vendor/bin/phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=PSR2" />
            <arg path="${basedir}/module" />
        </exec>
    </target>

    <target name="phpcpd" description="PHPCPD" depends="codeception-clean">
        <exec executable="${basedir}/vendor/bin/phpcpd">
            <arg path="${basedir}/module" />
        </exec>
    </target>
    <target name="phpcpd-ci" description="Find duplicate code using PHPCPD" depends="codeception-clean">
        <exec executable="${basedir}/vendor/bin/phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}/module" />
        </exec>
    </target>

    <target name="buildHelper">
        <exec executable="${basedir}/vendor/bin/codecept">
            <arg value="build" />
        </exec>
    </target>

    <target name="codeception-clean">
        <delete file="${basedir}/test/_support/AcceptanceTester.php" />
        <delete file="${basedir}/test/_support/FunctionalTester.php" />
        <delete file="${basedir}/test/_support/UnitTester.php" />
    </target>

    <target name="unit-ci" depends="prepare, buildHelper" description="Run unit tests with Codeception For Continuous Integration">
        <exec executable="${basedir}/vendor/bin/codecept">
            <arg value="run" />
            <arg value="unit" />
            <arg value="--xml" />
            <arg value="--coverage-xml" />
            <arg value="--coverage-html" />
        </exec>
    </target>
    <!-- most important action for acceptance/functional until then. -->
    <target name="unit" depends="prepare, buildHelper">
        <exec executable="${basedir}/vendor/bin/codecept">
            <arg value="run" />
            <arg value="unit" />
        </exec>
    </target>
    <target name="unit-group" depends="buildHelper">
        <exec executable="${basedir}/vendor/bin/codecept">
            <arg value="run" />
            <arg value="unit" />
            <arg value="-g" />
            <arg value="${s}" />
        </exec>
    </target>
    <target name="unit-coverage" description="Run unit tests with PHPUnit" depends="buildHelper">
        <exec executable="${basedir}/vendor/bin/codecept">
            <arg value="run" />
            <arg value="unit" />
            <arg value="--coverage" />
            <arg value="--coverage-html" />
        </exec>
    </target>
    <target name="unit-group-coverage" depends="buildHelper">
        <exec executable="${basedir}/vendor/bin/codecept">
            <arg value="run" />
            <arg value="unit" />
            <arg value="-g" />
            <arg value="${s}" />
            <arg value="--coverage-html" />
        </exec>
    </target>
    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="${basedir}/vendor/bin/pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/module" />
        </exec>
    </target>
    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="${basedir}/vendor/bin/phploc">
            <arg path="${basedir}/module" />
        </exec>
    </target>
    <target name="phploc-ci" depends="prepare" description="Measure project size using PHPLOC and log result in CSV and XML format. Intended for usage within a continuous integration environment.">
        <exec executable="${basedir}/vendor/bin/phploc">
            <arg value="--count-tests" />
            <arg value="--log-csv" />
            <arg path="${basedir}/build/logs/phploc.csv" />
            <arg value="--log-xml" />
            <arg path="${basedir}/build/logs/phploc.xml" />
            <arg path="${basedir}/module" />
            <arg path="${basedir}/test" />
        </exec>
    </target>
    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="phpdox" />
    </target>
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api" />
        <delete dir="${basedir}/build/coverage" />
        <delete dir="${basedir}/build/logs" />
        <delete dir="${basedir}/build/pdepend" />
        <delete dir="${basedir}/build/phpdox" />
    </target>
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />
        <mkdir dir="${basedir}/build/phpdox" />
    </target>

</project>