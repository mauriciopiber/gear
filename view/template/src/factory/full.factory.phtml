namespace <?php echo $this->module;?>\Factory;

use Zend\ServiceManager\ServiceLocatorAwareInterface;
use Zend\ServiceManager\ServiceLocatorInterface;
use Security\Hydrator\DateHydrator;
use <?php echo $this->module;?>\Factory\AbstractFactory;

class <?php echo $this->class;?> extends AbstractFactory
{
    public function createService(ServiceLocatorInterface $serviceLocator)
    {
        $form = new \<?php echo $this->module;?>\Form\<?php echo str_replace('Factory', '', $this->class)?>Form(
            $serviceLocator->get('doctrine.entitymanager.orm_default')
        );

        $filter = $serviceLocator->get('<?php echo $this->module;?>/Filter/<?php echo str_replace('Factory', '', $this->class)?>Filter');
        $form->setInputFilter($filter->getInputFilter());

        $entityManager = $serviceLocator->get('doctrine.entitymanager.orm_default');
        $hydrator = new DateHydrator($entityManager, '<?php echo $this->module;?>\Entity\<?php echo str_replace('Factory', '', $this->class)?>');

        $form->setHydrator($hydrator);

        return $form;
    }
}
