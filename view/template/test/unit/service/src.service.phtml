namespace <?php echo $this->module;?>\<?php echo $this->module;?>Test\ServiceTest;

/**
 * @group Service
 */
class <?php echo $this->serviceNameClass;?>Test extends \PHPUnit_Framework_TestCase
{
    protected $<?php echo $this->serviceNameUline;?>;

    protected function setUp()
    {
        $this->bootstrap = new \<?php echo $this->module;?>\ZendServiceLocator();
    }

    protected function tearDown()
    {
        unset($this->bootstrap);
    }

    public function get<?php echo $this->serviceNameClass;?>()
    {
        if (!isset($this-><?php echo $this->serviceNameUline;?>)) {
            $this-><?php echo $this->serviceNameUline;?> =
                $this->bootstrap->getServiceLocator()->get(
                    '<?php echo $this->module;?>\Service\<?php echo $this->serviceNameClass;?>'
                );
        }
        return $this-><?php echo $this->serviceNameUline;?>;
    }

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->serviceNameClass.PHP_EOL;?>
     */
    public function testServiceLocator()
    {
        $serviceLocator = $this->get<?php echo $this->serviceNameClass;?>()->getServiceLocator();
        $this->assertInstanceOf('Zend\ServiceManager\ServiceManager', $serviceLocator);
    }

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->serviceNameClass.PHP_EOL;?>
    */
    public function testCallUsingServiceLocator()
    {
        $<?php echo $this->serviceNameUline;?> = $this->get<?php echo $this->serviceNameClass;?>();
        $this->assertInstanceOf('<?php echo $this->module;?>\Service\<?php echo $this->serviceNameClass;?>', $<?php echo $this->serviceNameUline;?>);
    }

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->serviceNameClass.PHP_EOL;?>
    */
    public function testCallClassName()
    {
        $<?php echo $this->serviceNameUline;?> = $this->get<?php echo $this->serviceNameClass;?>();
        $className = $<?php echo $this->serviceNameUline;?>->getClassName();
        $this->assertEquals('<?php echo $this->serviceNameClass;?>', $className);
    }
<?php echo $this->partialLoop('template/miscellaneous/test-injection-partial.phtml', $this->injection);?>
}
