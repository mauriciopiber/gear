namespace <?php echo $this->module;?>Test\RepositoryTest;

use GearBaseTest\AbstractTestCase;
use <?php echo $this->module;?>\Repository\<?php echo $this->className;?>Trait;
/**
 * @group Repository
 */
class <?php echo $this->className;?>Test extends AbstractTestCase
{
    use <?php echo $this->className;?>Trait;

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->className.PHP_EOL;?>
     */
    public function testServiceLocator()
    {
        $serviceLocator = $this->get<?php echo $this->className;?>()->getServiceLocator();
        $this->assertInstanceOf('Zend\ServiceManager\ServiceManager', $serviceLocator);
    }

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->className.PHP_EOL;?>
    */
    public function testGet()
    {
        $<?php echo $this->var;?> = $this->get<?php echo $this->className;?>();
        $this->assertInstanceOf('<?php echo $this->module;?>\Repository\<?php echo $this->className;?>', $<?php echo $this->var;?>);
    }

    /**
     * @group <?php echo $this->module.PHP_EOL;?>
     * @group <?php echo $this->className.PHP_EOL;?>
    */
    public function testSet()
    {
        $mock<?php echo $this->className;?> = $this->getMockSingleClass('<?php echo $this->module;?>\Repository\<?php echo $this->className;?>');
        $this->set<?php echo $this->className;?>($mock<?php echo $this->className;?>);
        $this->assertEquals($mock<?php echo $this->className;?>, $this->get<?php echo $this->className;?>());
    }
<?php echo $this->functions;?>
}
