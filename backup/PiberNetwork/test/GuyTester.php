<?php
namespace PiberNetwork;
//[STAMP***REMOVED*** a431e9820469492bf257af109bd98ac7

// This class was automatically generated by build task
// You should not change it manually as it will be overwritten on next build
// @codingStandardsIgnoreFile


use Codeception\Module\Filesystem;
use Codeception\Module\FunctionalHelper;
use Codeception\Module\WebDriver;
use Codeception\Module\Db;

/**
 * Inherited Methods
 * @method void wantToTest($text)
 * @method void wantTo($text)
 * @method void execute($callable)
 * @method void expectTo($prediction)
 * @method void expect($prediction)
 * @method void amGoingTo($argumentation)
 * @method void am($role)
 * @method void lookForwardTo($achieveValue)
 * @method void comment($description)
 * @method void haveFriend($name)
*/
/**
 * @author Maurício Piber Fão
 * @SuppressWarnings(PHPMD)
 */
class GuyTester extends \Codeception\Actor
{


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Sets 'url' configuration parameter to hosts subdomain.
     * It does not open a page on subdomain. Use `amOnPage` for that
     *
     * ``` php

     *
     * @param $subdomain
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::amOnSubdomain()
     */
    public function amOnSubdomain($subdomain) {
        return $this->scenario->runStep(new \Codeception\Step\Condition('amOnSubdomain', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Makes a screenshot of current window and saves it to `tests/_output/debug`.
     *
     * ``` php

     *
     * @param $name
     * @see \Codeception\Module\WebDriver::makeScreenshot()
     */
    public function makeScreenshot($name) {
        return $this->scenario->runStep(new \Codeception\Step\Action('makeScreenshot', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Resize current window
     *
     * Example:

     *
     * @param int $width
     * @param int $height
     * @see \Codeception\Module\WebDriver::resizeWindow()
     */
    public function resizeWindow($width, $height) {
        return $this->scenario->runStep(new \Codeception\Step\Action('resizeWindow', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that cookie is set.
     *
     * @param $cookie
     *
     * @return mixed
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeCookie()
     */
    public function canSeeCookie($cookie) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCookie', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that cookie is set.
     *
     * @param $cookie
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::seeCookie()
     */
    public function seeCookie($cookie) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCookie', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that cookie doesn't exist
     *
     * @param $cookie
     *
     * @return mixed
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeCookie()
     */
    public function cantSeeCookie($cookie) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCookie', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that cookie doesn't exist
     *
     * @param $cookie
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::dontSeeCookie()
     */
    public function dontSeeCookie($cookie) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCookie', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Sets a cookie.
     *
     * @param $cookie
     * @param $value
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::setCookie()
     */
    public function setCookie($cookie, $value) {
        return $this->scenario->runStep(new \Codeception\Step\Action('setCookie', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Unsets cookie
     *
     * @param $cookie
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::resetCookie()
     */
    public function resetCookie($cookie) {
        return $this->scenario->runStep(new \Codeception\Step\Action('resetCookie', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Grabs a cookie value.
     *
     * @param $cookie
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::grabCookie()
     */
    public function grabCookie($cookie) {
        return $this->scenario->runStep(new \Codeception\Step\Action('grabCookie', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Opens the page.
     * Requires relative uri as parameter
     *
     * Example:
     *
     * ``` php

     *
     * @param $page
     * @see \Codeception\Module\WebDriver::amOnPage()
     */
    public function amOnPage($page) {
        return $this->scenario->runStep(new \Codeception\Step\Condition('amOnPage', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Check if current page contains the text specified.
     * Specify the css selector to match only specific region.
     *
     * Examples:
     *
     * ``` php

     *
     * @param      $text
     * @param null $selector
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::see()
     */
    public function canSee($text, $selector = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('see', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Check if current page contains the text specified.
     * Specify the css selector to match only specific region.
     *
     * Examples:

     * ```
     *
     * @param      $text
     * @param null $selector
     * @see \Codeception\Module\WebDriver::see()
     */
    public function see($text, $selector = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('see', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Check if current page doesn't contain the text specified.
     * Specify the css selector to match only specific region.
     *

     * @param      $text
     * @param null $selector
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSee()
     */
    public function cantSee($text, $selector = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSee', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Check if current page doesn't contain the text specified.

     * @param      $text
     * @param null $selector
     * @see \Codeception\Module\WebDriver::dontSee()
     */
    public function dontSee($text, $selector = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSee', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page source contains text.
     *

     * @param $text
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeInPageSource()
     */
    public function canSeeInPageSource($text) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInPageSource', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page source contains text.
     *
     * ```php

     *
     * @param $text
     * @see \Codeception\Module\WebDriver::seeInPageSource()
     */
    public function seeInPageSource($text) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInPageSource', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page source does not contain text.
     *
     * @param $text
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeInPageSource()
     */
    public function cantSeeInPageSource($text) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInPageSource', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page source does not contain text.
     *
     * @param $text
     * @see \Codeception\Module\WebDriver::dontSeeInPageSource()
     */
    public function dontSeeInPageSource($text) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInPageSource', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Perform a click on link or button.
     * Link or button are found by their names or CSS selector.
     * Submits a form if button is a submit type.
     *
     * If link is an image it's found by alt attribute value of image.
     * If button is image button is found by it's value
     * If link or button can't be found by name they are searched by CSS selector.
     *
     * The second parameter is a context: CSS or XPath locator to narrow the search.
     *
     * Examples:

     * @param $link
     * @param $context
     * @see \Codeception\Module\WebDriver::click()
     */
    public function click($link, $context = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('click', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if there is a link with text specified.
     * Specify url to match link with exact this url.
     *
     * Examples:

     * ```
     *
     * @param      $text
     * @param null $url
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeLink()
     */
    public function canSeeLink($text, $url = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeLink', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if there is a link with text specified.
     * Specify url to match link with exact this url.
     *
     * Examples:
     *

     *
     * @param      $text
     * @param null $url
     * @see \Codeception\Module\WebDriver::seeLink()
     */
    public function seeLink($text, $url = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeLink', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if page doesn't contain the link with text specified.
     * Specify url to narrow the results.
     *

     * @param      $text
     * @param null $url
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeLink()
     */
    public function cantSeeLink($text, $url = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeLink', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if page doesn't contain the link with text specified.
     * Specify url to narrow the results.
     *
     * Examples:

     *
     * @param      $text
     * @param null $url
     * @see \Codeception\Module\WebDriver::dontSeeLink()
     */
    public function dontSeeLink($text, $url = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeLink', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current uri contains a value
     *

     *
     * @param $uri
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeInCurrentUrl()
     */
    public function canSeeInCurrentUrl($uri) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInCurrentUrl', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current uri contains a value
     *

     *
     * @param $uri
     * @see \Codeception\Module\WebDriver::seeInCurrentUrl()
     */
    public function seeInCurrentUrl($uri) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInCurrentUrl', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url is equal to value.

     * ```
     *
     * @param $uri
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeCurrentUrlEquals()
     */
    public function canSeeCurrentUrlEquals($uri) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCurrentUrlEquals', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url is equal to value.
     * Unlike `seeInCurrentUrl` performs a strict check.

     *
     * @param $uri
     * @see \Codeception\Module\WebDriver::seeCurrentUrlEquals()
     */
    public function seeCurrentUrlEquals($uri) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCurrentUrlEquals', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url is matches a RegEx value

     *
     * @param $uri
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeCurrentUrlMatches()
     */
    public function canSeeCurrentUrlMatches($uri) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCurrentUrlMatches', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url is matches a RegEx value

     *
     * @param $uri
     * @see \Codeception\Module\WebDriver::seeCurrentUrlMatches()
     */
    public function seeCurrentUrlMatches($uri) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCurrentUrlMatches', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current uri does not contain a value
     *
     * ``` php

     * $I->dontSeeInCurrentUrl('/users/');
     * ?>
     * ```
     *
     * @param $uri
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeInCurrentUrl()
     */
    public function cantSeeInCurrentUrl($uri) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInCurrentUrl', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current uri does not contain a value
     *
     * ``` php

     * $I->dontSeeInCurrentUrl('/users/');
     * ?>
     * ```
     *
     * @param $uri
     * @see \Codeception\Module\WebDriver::dontSeeInCurrentUrl()
     */
    public function dontSeeInCurrentUrl($uri) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInCurrentUrl', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url is not equal to value.
     * Unlike `dontSeeInCurrentUrl` performs a strict check.
     *

     * // current url is not root

     * ```
     *
     * @param $uri
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeCurrentUrlEquals()
     */
    public function cantSeeCurrentUrlEquals($uri) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCurrentUrlEquals', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url is not equal to value.
     * Unlike `dontSeeInCurrentUrl` performs a strict check.
     *

     * // current url is not root
     * $I->dontSeeCurrentUrlEquals('/');
     * ?>
     * ```
     *
     * @param $uri
     * @see \Codeception\Module\WebDriver::dontSeeCurrentUrlEquals()
     */
    public function dontSeeCurrentUrlEquals($uri) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCurrentUrlEquals', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url does not match a RegEx value
     *
     * ``` php
 atch root url
     * $I->dontSeeCurrentUrlMatches('~$/users/(\d+)~');
     * ?>
     * ```
     *
     * @param $uri
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeCurrentUrlMatches()
     */
    public function cantSeeCurrentUrlMatches($uri) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCurrentUrlMatches', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that current url does not match a RegEx value
     *
     url
     * $I->dontSeeCurrentUrlMatches('~$/users/(\d+)~');
     * ?>
     * ```
     *
     * @param $uri
     * @see \Codeception\Module\WebDriver::dontSeeCurrentUrlMatches()
     */
    public function dontSeeCurrentUrlMatches($uri) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCurrentUrlMatches', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Takes a parameters from current URI by RegEx.
     * If no url provided returns full URI.
     *
      rabFromCurrentUrl();
     * ?>
     * ```
     *
     * @param null $uri
     *
     * @internal param $url
     * @return mixed
     * @see \Codeception\Module\WebDriver::grabFromCurrentUrl()
     */
    public function grabFromCurrentUrl($uri = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('grabFromCurrentUrl', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Assert if the specified checkbox is checked.
     * Use css selector or xpath to match.
     *
     * Ex oxIsChecked('#agree'); // I suppose user agreed to terms
     * $I->seeCheckboxIsChecked('#signup_form input[type=checkbox***REMOVED***'); // I suppose user agreed to terms, If there is only one checkbox in form.
     * $I->seeCheckboxIsChecked('//form/input[@type=checkbox and @name=agree***REMOVED***');
     * ?>
     * ```
     *
     * @param $checkbox
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeCheckboxIsChecked()
     */
    public function canSeeCheckboxIsChecked($checkbox) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCheckboxIsChecked', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Assert if the specified checkbox is checked.
     * Use css selector or xpath to match.
     *
     * Example:
     *
    Checked('//form/input[@type=checkbox and @name=agree***REMOVED***');
     * ?>
     * ```
     *
     * @param $checkbox
     * @see \Codeception\Module\WebDriver::seeCheckboxIsChecked()
     */
    public function seeCheckboxIsChecked($checkbox) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCheckboxIsChecked', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Assert if the specified checkbox is unchecked.
     * Use css selector or xpath to match.
     *
     * Example:
      heckboxIsChecked('#signup_form input[type=checkbox***REMOVED***'); // I suppose user didn't check the first checkbox in form.
     * ?>
     * ```
     *
     * @param $checkbox
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeCheckboxIsChecked()
     */
    public function cantSeeCheckboxIsChecked($checkbox) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCheckboxIsChecked', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Assert if the specified checkbox is unchecked.
     * Use css selector or xpath to match.
     *

     * ```
     *
     * @param $checkbox
     * @see \Codeception\Module\WebDriver::dontSeeCheckboxIsChecked()
     */
    public function dontSeeCheckboxIsChecked($checkbox) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCheckboxIsChecked', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that an input field or textarea contains value.
     * Field is matched either by label or CSS or Xpath
     *
     * Example:
     *
     * ` form input[type=hidden***REMOVED***','hidden_value');
     * $I->seeInField('#searchform input','Search');
     * $I->seeInField('//form/*[@name=search***REMOVED***','Search');
     * $I->seeInField(['name' => 'search'***REMOVED***, 'Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeInField()
     */
    public function canSeeInField($field, $value) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInField', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that an input field or textarea contains value.
     * Field is matched either by label or CSS or Xpath
     *
     * Example:
     *
     * archform input','Search');
     * $I->seeInField('//form/*[@name=search***REMOVED***','Search');
     * $I->seeInField(['name' => 'search'***REMOVED***, 'Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * @see \Codeception\Module\WebDriver::seeInField()
     */
    public function seeInField($field, $value) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInField', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that an input field or textarea doesn't contain value.
     * Field is matched either by label or CSS or Xpath
     * Example:
     *
     * `` Field('form input[type=hidden***REMOVED***','hidden_value');
     * $I->dontSeeInField('#searchform input','Search');
     * $I->dontSeeInField('//form/*[@name=search***REMOVED***','Search');
     * $I->seeInField(['name' => 'search'***REMOVED***, 'Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeInField()
     */
    public function cantSeeInField($field, $value) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInField', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that an input field or textarea doesn't contain value.
     * Field is matched either by label or CSS or Xpath
     * Example:
     * nField('form textarea[name=body***REMOVED***','Type your comment here');
     * $I->dontSeeInField('form input[type=hidden***REMOVED***','hidden_value');
     * $I->dontSeeInField('#searchform input','Search');
     * $I->dontSeeInField('//form/*[@name=search***REMOVED***','Search');
     * $I->seeInField(['name' => 'search'***REMOVED***, 'Search');
     * ?>
     * ```
     *
     * @param $field
     * @param $value
     * @see \Codeception\Module\WebDriver::dontSeeInField()
     */
    public function dontSeeInField($field, $value) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInField', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Selects an option in select tag or in radio button group.
     *
     * Example:
     *
     * >selectOption('form select[name=account***REMOVED***', 'Premium');
     * $I->selectOption('form input[name=payment***REMOVED***', 'Monthly');
     * $I->selectOption('//form/select[@name=account***REMOVED***', 'Monthly');
     * ?>
     * ```
     *
     * Can select multiple options if second argument is array:

     *
     * @param $select
     * @param $option
     * @see \Codeception\Module\WebDriver::selectOption()
     */
    public function selectOption($select, $option) {
        return $this->scenario->runStep(new \Codeception\Step\Action('selectOption', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     *
     * @see \Codeception\Module\WebDriver::unselectOption()
     */
    public function unselectOption($select, $option) {
        return $this->scenario->runStep(new \Codeception\Step\Action('unselectOption', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Ticks a checkbox.
     * For radio buttons use `selectOption` method.
     *
     * Example:
     *
     * ``` php

     *
     * @param $option
     * @see \Codeception\Module\WebDriver::checkOption()
     */
    public function checkOption($option) {
        return $this->scenario->runStep(new \Codeception\Step\Action('checkOption', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Unticks a checkbox.
     *
     * Example:
     *
     *
     * ```
     *
     * @param $option
     * @see \Codeception\Module\WebDriver::uncheckOption()
     */
    public function uncheckOption($option) {
        return $this->scenario->runStep(new \Codeception\Step\Action('uncheckOption', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Fills a text field or textarea with value.
     *
     * Example:
     *

     *
     * @param $field
     * @param $value
     * @see \Codeception\Module\WebDriver::fillField()
     */
    public function fillField($field, $value) {
        return $this->scenario->runStep(new \Codeception\Step\Action('fillField', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Attaches file from Codeception data directory to upload field.
     *
     * Example:

     *
     * @param $field
     * @param $filename
     * @see \Codeception\Module\WebDriver::attachFile()
     */
    public function attachFile($field, $filename) {
        return $this->scenario->runStep(new \Codeception\Step\Action('attachFile', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * @return string
     * @see \Codeception\Module\WebDriver::getVisibleText()
     */
    public function getVisibleText() {
        return $this->scenario->runStep(new \Codeception\Step\Action('getVisibleText', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Finds and returns text contents of element.
     * Element is searched by CSS selector, XPath or matcher by regex.
     *
     * Example:
     *
     * ``` php
     *  ding = $I->grabTextFrom('descendant-or-self::h1');
     * $value = $I->grabTextFrom('~<input value=(.*?)***REMOVED***~sgi');
     * ?>
     * ```
     *
     * @param $cssOrXPathOrRegex
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::grabTextFrom()
     */
    public function grabTextFrom($cssOrXPathOrRegex) {
        return $this->scenario->runStep(new \Codeception\Step\Action('grabTextFrom', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Grabs attribute value from an element.
     * Fails if element is not found.
     *
     * ``` php
     *
     *
     *
     * @param $cssOrXpath
     * @param $attribute
     * @internal param $element
     * @return mixed
     * @see \Codeception\Module\WebDriver::grabAttributeFrom()
     */
    public function grabAttributeFrom($cssOrXpath, $attribute) {
        return $this->scenario->runStep(new \Codeception\Step\Action('grabAttributeFrom', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Finds and returns field and returns it's value.
     * Searches by field name, then by CSS, then by XPath
     *
     * Example:
     *
     * ``` php
     * ame = $I->grabValueFrom('input[name=username***REMOVED***');
     * $name = $I->grabValueFrom('descendant-or-self::form/descendant::input[@name = 'username'***REMOVED***');
     * $name = $I->grabValueFrom(['name' => 'username'***REMOVED***);
     * ?>
     * ```
     *
     * @param $field
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::grabValueFrom()
     */
    public function grabValueFrom($field) {
        return $this->scenario->runStep(new \Codeception\Step\Action('grabValueFrom', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks for a visible element on a page, matching it by CSS or XPath
     *
     * ```
     * @param $selector
     * @param array $attributes
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeElement()
     */
    public function canSeeElement($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeElement', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks for a visible element on a page, matching it by CSS or XPath
     * Element('//form/input[1***REMOVED***');
     * ?>
     * ```
     * @param $selector
     * @param array $attributes
     * @see \Codeception\Module\WebDriver::seeElement()
     */
    public function seeElement($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeElement', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that element is invisible or not present on page.
     *
     * ``` php
     *  tor
     * @param array $attributes
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeElement()
     */
    public function cantSeeElement($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeElement', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * C elector
     * @param array $attributes
     * @see \Codeception\Module\WebDriver::dontSeeElement()
     */
    public function dontSeeElement($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeElement', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if element exists on a page even it is invisible.
     *
     * ``` php
     *
     *
     * @param $selector
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeElementInDOM()
     */
    public function canSeeElementInDOM($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeElementInDOM', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if element exists on a page even it is invisible.
     *
     *
     *
     * @param $selector
     * @see \Codeception\Module\WebDriver::seeElementInDOM()
     */
    public function seeElementInDOM($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeElementInDOM', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Opposite to `seeElementInDOM`.
     *
     * @param $selector
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeElementInDOM()
     */
    public function cantSeeElementInDOM($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeElementInDOM', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Opposite to `seeElementInDOM`.
     *
     * @param $selector
     * @see \Codeception\Module\WebDriver::dontSeeElementInDOM()
     */
    public function dontSeeElementInDOM($selector, $attributes = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeElementInDOM', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if option is selected in select field.
     *
     *
     *
     * @param $selector
     * @param $optionText
     *
     * @return mixed
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeOptionIsSelected()
     */
    public function canSeeOptionIsSelected($selector, $optionText) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeOptionIsSelected', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if option is selected in select field.
     *
     * ``` php
     *
     * ```
     *
     * @param $selector
     * @param $optionText
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::seeOptionIsSelected()
     */
    public function seeOptionIsSelected($selector, $optionText) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeOptionIsSelected', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     *
     * @param $selector
     * @param $optionText
     *
     * @return mixed
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeOptionIsSelected()
     */
    public function cantSeeOptionIsSelected($selector, $optionText) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeOptionIsSelected', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if option is not selected in select field.
     *

     * @param $selector
     * @param $optionText
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::dontSeeOptionIsSelected()
     */
    public function dontSeeOptionIsSelected($selector, $optionText) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeOptionIsSelected', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page title contains text.
     *
     *
     * @param $title
     *
     * @return mixed
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeInTitle()
     */
    public function canSeeInTitle($title) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInTitle', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page title contains text.
     *
     * @param $title
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::seeInTitle()
     */
    public function seeInTitle($title) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInTitle', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page title does not contain text.
     *
     * @param $title
     *
     * @return mixed
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::dontSeeInTitle()
     */
    public function cantSeeInTitle($title) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInTitle', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that page title does not contain text.
     *
     * @param $title
     *
     * @return mixed
     * @see \Codeception\Module\WebDriver::dontSeeInTitle()
     */
    public function dontSeeInTitle($title) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInTitle', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Accepts JavaScript native popup window created by `window.alert`|`window.confirm`|`window.prompt`.
     * Don't confuse it with modal windows, created by [various libraries***REMOVED***(http://jster.net/category/windows-modals-popups).
     *
     * @see \Codeception\Module\WebDriver::acceptPopup()
     */
    public function acceptPopup() {
        return $this->scenario->runStep(new \Codeception\Step\Action('acceptPopup', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Dismisses active JavaScript popup created by `window.alert`|`window.confirm`|`window.prompt`.
     * @see \Codeception\Module\WebDriver::cancelPopup()
     */
    public function cancelPopup() {
        return $this->scenario->runStep(new \Codeception\Step\Action('cancelPopup', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that active JavaScript popup created by `window.alert`|`window.confirm`|`window.prompt` contain text.
     *
     * @param $text
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\WebDriver::seeInPopup()
     */
    public function canSeeInPopup($text) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInPopup', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks that active JavaScript popup created by `window.alert`|`window.confirm`|`window.prompt` contain text.
     *
     * @param $text
     * @see \Codeception\Module\WebDriver::seeInPopup()
     */
    public function seeInPopup($text) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInPopup', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Enters text into native JavaScript prompt popup created by `window.prompt`.
     *
     * @param $keys
     * @see \Codeception\Module\WebDriver::typeInPopup()
     */
    public function typeInPopup($keys) {
        return $this->scenario->runStep(new \Codeception\Step\Action('typeInPopup', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Reloads current page
     * @see \Codeception\Module\WebDriver::reloadPage()
     */
    public function reloadPage() {
        return $this->scenario->runStep(new \Codeception\Step\Action('reloadPage', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Moves back in history
     * @see \Codeception\Module\WebDriver::moveBack()
     */
    public function moveBack() {
        return $this->scenario->runStep(new \Codeception\Step\Action('moveBack', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Moves forward in history
     * @see \Codeception\Module\WebDriver::moveForward()
     */
    public function moveForward() {
        return $this->scenario->runStep(new \Codeception\Step\Action('moveForward', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Submits a form located on page.
     * Specify the form by it's css or xpath selector.
     * Fill the form fields values as array. Hidden fields can't be accessed.
     *
     * This command itself triggers the request to form's action.
     *


     *
     * ```
     *
     * @param $selector
     * @param $params
     * @throws \Codeception\Exception\ElementNotFound
     * @see \Codeception\Module\WebDriver::submitForm()
     */
    public function submitForm($selector, $params) {
        return $this->scenario->runStep(new \Codeception\Step\Action('submitForm', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Waits for element to change or for $timeout seconds to pass. Element "change" is determined
     * by a callback function which is called repeatedly until the return value evaluates to true.
     *

     *
     * @param $element
     * @param \Closure $callback
     * @param int $timeout seconds
     * @throws \Codeception\Exception\ElementNotFound
     * @see \Codeception\Module\WebDriver::waitForElementChange()
     */
    public function waitForElementChange($element, $callback, $timeout = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('waitForElementChange', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Waits for element to appear on page for $timeout seconds to pass.
     * If element not appears, timeout exception is thrown.

     *
     * @param $element
     * @param int $timeout seconds
     * @throws \Exception
     * @see \Codeception\Module\WebDriver::waitForElement()
     */
    public function waitForElement($element, $timeout = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('waitForElement', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Waits for element to be visible on the page for $timeout seconds to pass.
      ElementVisible('#agree_button', 30); // secs
     * $I->click('#agree_button');
     * ?>
     * ```
     *
     * @param $element
     * @param int $timeout seconds
     * @throws \Exception
     * @see \Codeception\Module\WebDriver::waitForElementVisible()
     */
    public function waitForElementVisible($element, $timeout = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('waitForElementVisible', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Waits for element to not be visible on the page for $timeout seconds to pass.
     * If element stays visible, timeout exception is thrown.

     *
     * @param $element
     * @param int $timeout seconds
     * @throws \Exception
     * @see \Codeception\Module\WebDriver::waitForElementNotVisible()
     */
    public function waitForElementNotVisible($element, $timeout = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('waitForElementNotVisible', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Waits for text to appear on the page for a specific amount of time.
     * Can also be passed a selector to search in.
     * If text does not appear, timeout exception is thrown.


     *
     * @param string $text
     * @param int $timeout seconds
     * @param null $selector
     * @throws \Exception
     * @internal param string $element
     * @see \Codeception\Module\WebDriver::waitForText()
     */
    public function waitForText($text, $timeout = null, $selector = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('waitForText', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Explicit wait.
     *
     * @param int $timeout secs
     * @throws \Codeception\Exception\TestRuntime
     * @see \Codeception\Module\WebDriver::wait()
     */
    public function wait($timeout) {
        return $this->scenario->runStep(new \Codeception\Step\Action('wait', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Low-level API method.
     * If Codeception commands are not enough, use Selenium WebDriver methods directly
     *
     * ``` php
     * $I->executeInSelenium(function(\WebDriver $webdriver) {
     *   $webdriver->get('http://google.com');
     * });
     * ```
     *
     * Use [WebDriver Session API***REMOVED***(https://github.com/facebook/php-webdriver)
     * Not recommended this command too be used on regular basis.
     * If Codeception lacks important Selenium methods implement then and submit patches.
     *
     * @param callable $function
     * @see \Codeception\Module\WebDriver::executeInSelenium()
     */
    public function executeInSelenium($function) {
        return $this->scenario->runStep(new \Codeception\Step\Action('executeInSelenium', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Switch to another window identified by its name.
     *
     * The window can only be identified by its name. If the $name parameter is blank it will switch to the parent window.
     *
     * Example:

     * ```
     *
     * @param string|null $name
     * @see \Codeception\Module\WebDriver::switchToWindow()
     */
    public function switchToWindow($name = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('switchToWindow', func_get_args()));
    }


    /**

     *
     * ```
     *
     * @param string|null $name
     * @see \Codeception\Module\WebDriver::switchToIFrame()
     */
    public function switchToIFrame($name = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('switchToIFrame', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Executes JavaScript and waits for it to return true or for the timeout.
     *
     * In this example we will wait for all jQuery ajax requests are finished or 60 secs otherwise.
     *

     *
     * @param string $script
     * @param int $timeout seconds
     * @see \Codeception\Module\WebDriver::waitForJS()
     */
    public function waitForJS($script, $timeout = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('waitForJS', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Executes custom JavaScript
     *
     * In this example we will use jQuery to get a value and assign this value to a variable.

     * @return mixed
     * @see \Codeception\Module\WebDriver::executeJS()
     */
    public function executeJS($script) {
        return $this->scenario->runStep(new \Codeception\Step\Action('executeJS', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Maximizes current window
     * @see \Codeception\Module\WebDriver::maximizeWindow()
     */
    public function maximizeWindow() {
        return $this->scenario->runStep(new \Codeception\Step\Action('maximizeWindow', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Performs a simple mouse drag and drop operation.
     *

     *
     * @param string $source (CSS ID or XPath)
     * @param string $target (CSS ID or XPath)
     * @see \Codeception\Module\WebDriver::dragAndDrop()
     */
    public function dragAndDrop($source, $target) {
        return $this->scenario->runStep(new \Codeception\Step\Action('dragAndDrop', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Move mouse over the first element matched by css or xPath on page
     *
     * https://code.google.com/p/selenium/wiki/JsonWireProtocol#/session/:sessionId/moveto
     *
     * @param string $cssOrXPath css or xpath of the web element
     * @param int $offsetX
     * @param int $offsetY
     *
     * @throws \Codeception\Exception\ElementNotFound
     * @return null
     * @see \Codeception\Module\WebDriver::moveMouseOver()
     */
    public function moveMouseOver($cssOrXPath, $offsetX = null, $offsetY = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('moveMouseOver', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Performs contextual click with right mouse button on element matched by CSS or XPath.
     *
     * @param $cssOrXPath
     * @throws \Codeception\Exception\ElementNotFound
     * @see \Codeception\Module\WebDriver::clickWithRightButton()
     */
    public function clickWithRightButton($cssOrXPath) {
        return $this->scenario->runStep(new \Codeception\Step\Action('clickWithRightButton', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Pauses test execution in debug mode.
     * To proceed test press "ENTER" in console.
     *
     * This method is recommended to use in test development, for additional page analysis, locator searing, etc.
     * @see \Codeception\Module\WebDriver::pauseExecution()
     */
    public function pauseExecution() {
        return $this->scenario->runStep(new \Codeception\Step\Action('pauseExecution', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Performs a double click on element matched by CSS or XPath.
     *
     * @param $cssOrXPath
     * @throws \Codeception\Exception\ElementNotFound
     * @see \Codeception\Module\WebDriver::doubleClick()
     */
    public function doubleClick($cssOrXPath) {
        return $this->scenario->runStep(new \Codeception\Step\Action('doubleClick', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Presses key on element found by css, xpath is focused

     *
     * @param $element
     * @param $char can be char or array with modifier. You can provide several chars.
     * @throws \Codeception\Exception\ElementNotFound
     * @see \Codeception\Module\WebDriver::pressKey()
     */
    public function pressKey($element, $char) {
        return $this->scenario->runStep(new \Codeception\Step\Action('pressKey', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Append text to an element
     * Can add another selection to a select box
     *

     *
     * @param string $field
     * @param string $value
     * @throws \Codeception\Exception\ElementNotFound
     * @see \Codeception\Module\WebDriver::appendField()
     */
    public function appendField($field, $value) {
        return $this->scenario->runStep(new \Codeception\Step\Action('appendField', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Inserts SQL record into database. This record will be erased after the test.
     *
     * ``` php

     * @param $table
     * @param array $data
     * @return integer $id
     * @see \Codeception\Module\Db::haveInDatabase()
     */
    public function haveInDatabase($table, $data) {
        return $this->scenario->runStep(new \Codeception\Step\Action('haveInDatabase', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if a row with given column values exists.
     * Provide table name and column values.
     *
     * Example:

     *
     * ``` sql
     * SELECT COUNT(*) FROM `users` WHERE `name` = 'Davert' AND `email` = 'davert@mail.com'
     * ```
     * Fails if no such user found.
     *
     * @param       $table
     * @param array $criteria
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\Db::seeInDatabase()
     */
    public function canSeeInDatabase($table, $criteria = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInDatabase', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Checks if a row with given column values exists.
     * Provide table name and column values.
     *
     * Example:

     * Will generate:
     *
     * ``` sql
     * SELECT COUNT(*) FROM `users` WHERE `name` = 'Davert' AND `email` = 'davert@mail.com'
     * ```
     * Fails if no such user found.
     *
     * @param       $table
     * @param array $criteria
     * @see \Codeception\Module\Db::seeInDatabase()
     */
    public function seeInDatabase($table, $criteria = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInDatabase', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Effect is opposite to ->seeInDatabase
     *
     * Checks if there is no record with such column values in database.
     * Provide table name and column values.
     *
     * Example:

     * Will generate:
     *
     * ``` sql
     * SELECT COUNT(*) FROM `users` WHERE `name` = 'Davert' AND `email` = 'davert@mail.com'
     * ```
     * Fails if such user was found.
     *
     * @param       $table
     * @param array $criteria
     * Conditional Assertion: Test won't be stopped on fail
     * @see \Codeception\Module\Db::dontSeeInDatabase()
     */
    public function cantSeeInDatabase($table, $criteria = null) {
        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInDatabase', func_get_args()));
    }
    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Effect is opposite to ->seeInDatabase
     *
     * Checks if there is no record with such column values in database.
     * Provide table name and column values.
     *
     * Example:

     * ```
     * Will generate:
     *
     * ``` sql
     * SELECT COUNT(*) FROM `users` WHERE `name` = 'Davert' AND `email` = 'davert@mail.com'
     * ```
     * Fails if such user was found.
     *
     * @param       $table
     * @param array $criteria
     * @see \Codeception\Module\Db::dontSeeInDatabase()
     */
    public function dontSeeInDatabase($table, $criteria = null) {
        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInDatabase', func_get_args()));
    }


    /**
     * [!***REMOVED*** Method is generated. Documentation taken from corresponding module.
     *
     * Fetches a single column value from a database.
     * Provide table name, desired column and criteria.

     *
     * @version 1.1
     *
     * @param       $table
     * @param       $column
     * @param array $criteria
     *
     * @return mixed
     * @see \Codeception\Module\Db::grabFromDatabase()
     */
    public function grabFromDatabase($table, $column, $criteria = null) {
        return $this->scenario->runStep(new \Codeception\Step\Action('grabFromDatabase', func_get_args()));
    }

}