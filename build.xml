<?xml version="1.0" encoding="UTF-8"?>
<project name="gear" default="build" basedir=".">
  <target name="set-vendor" depends="isRunningAsModule, isRunningAsVendor, isRunningAsProject"/>
  <target name="isRunningAsModule" depends="check.runningAsModule" if="dir.exists">
    <property name="vendor" value="${basedir}/../../vendor"/>
  </target>
  <target name="isRunningAsVendor" depends="check.runningAsVendor" if="dir.exists">
    <property name="vendor" value="${basedir}/../../../vendor"/>
  </target>
  <target name="isRunningAsProject" depends="check.runningAsProject" if="dir.exists">
    <property name="vendor" value="${vendor}/vendor"/>
  </target>
  <target name="check.runningAsModule">
    <condition property="dir.exists">
      <available file="${basedir}/../../vendor" type="dir"/>
    </condition>
  </target>
  <target name="check.runningAsVendor">
    <condition property="dir.exists">
      <available file="${basedir}/../../../vendor" type="dir"/>
    </condition>
  </target>
  <target name="check.runningAsProject">
    <condition property="dir.exists">
      <available file="${vendor}/vendor" type="dir"/>
    </condition>
  </target>
  <target name="build" depends="prepare, set-vendor, parallel-lint, phpcs-ci, phpmd-ci, phpcpd-ci, unit-ci, phploc-ci, pdepend, phpdox"/>
  <target name="quality" depends="prepare,lint,phpcs,phpmd,phpcpd,unit"/>
  <target name="buildHelper">
    <exec executable="${vendor}/bin/codecept">
      <arg value="build"/>
    </exec>
  </target>
  <target name="unit-group" depends=" buildHelper">
    <exec executable="${vendor}/bin/codecept">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="-g"/>
      <arg value="${s}"/>
    </exec>
  </target>
  <!-- most important action for acceptance/functional until then. -->
  <target name="codeception-report" depends="">
    <exec executable="${vendor}/bin/codecept">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="--xml"/>
    </exec>
  </target>
  <target name="single-unit">
    <exec executable="${vendor}/bin/codecept">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="${s}"/>
    </exec>
  </target>
  <target name="phpunit" description="Run unit tests with PHPUnit" depends="set-vendor">
    <exec executable="${vendor}/bin/phpunit">
      <arg value="--configuration=${basedir}/config/jenkins/phpunit.xml"/>
    </exec>
  </target>
  <target name="phpunit-ci" description="Run unit tests with PHPUnit" depends="set-vendor">
    <exec executable="${vendor}/bin/phpunit">
      <arg value="--configuration=${basedir}/config/jenkins/phpunitci.xml"/>
      <arg value="--stderr"/>
    </exec>
  </target>
  <!-- cli actions -->
  <target name="phpmd" description="MessDetector" depends="set-vendor">
    <exec executable="${vendor}/bin/phpmd">
      <arg path="${basedir}"/>
      <arg value="text"/>
      <arg value="${basedir}/config/jenkins/phpmd.xml"/>
    </exec>
  </target>
  <target name="phpmd-ci" description="PHPMD" depends="set-vendor">
    <exec executable="${vendor}/bin/phpmd">
      <arg path="${basedir}/src/Gear/View/Helper"/>
      <arg value="xml"/>
      <arg value="${basedir}/config/jenkins/phpmd.xml"/>
      <arg value="--reportfile"/>
      <arg value="${basedir}/build/logs/pmd.xml"/>
    </exec>
  </target>
  <target name="phpcs" description="Code Sniffer" depends="set-vendor">
    <exec executable="${vendor}/bin/phpcs">
      <arg value="--standard=PSR2"/>
      <arg path="${basedir}/src/Gear/Service"/>
    </exec>
  </target>
  <target name="phpcs-ci" description="PHP_CodeSniffer Continuous Integration" depends="set-vendor">
    <exec executable="${vendor}/bin/phpcs" output="/dev/null">
      <arg value="--report=checkstyle"/>
      <arg value="--report-file=${basedir}/build/logs/checkstyle.xml"/>
      <arg value="--standard=PSR2"/>
      <arg path="${basedir}/src/Gear/Service"/>
    </exec>
  </target>
  <target name="phpcpd" description="PHPCPD" depends="set-vendor">
    <exec executable="${vendor}/bin/phpcpd">
      <arg path="${basedir}/src"/>
    </exec>
  </target>
  <target name="phpcpd-ci" description="Find duplicate code using PHPCPD" depends="set-vendor">
    <exec executable="${vendor}/bin/phpcpd">
      <arg value="--log-pmd"/>
      <arg value="${basedir}/build/logs/pmd-cpd.xml"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>
  <target name="unit" description="Run unit tests with PHPUnit" depends="set-vendor">
    <exec executable="${vendor}/bin/codecept">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="-f"/>
    </exec>
  </target>
  <target name="unit-coverage" description="Run unit tests with PHPUnit" depends="set-vendor">
    <exec executable="${vendor}/bin/codecept">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="--coverage-html"/>
    </exec>
  </target>
  <target name="pdepend" description="Calculate software metrics using PHP_Depend" depends="set-vendor">
    <exec executable="${vendor}/bin/pdepend">
      <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml"/>
      <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg"/>
      <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>
  <target name="phploc" description="Measure project size using PHPLOC">
    <exec executable="${vendor}/bin/phploc">
      <arg value="--log-csv"/>
      <arg value="${basedir}/build/logs/phploc.csv"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>
  <target name="phploc-ci" depends="set-vendor" description="Measure project size using PHPLOC and log result in CSV and XML format. Intended for usage within a continuous integration environment.">
    <exec executable="${vendor}/bin/phploc">
      <arg value="--count-tests"/>
      <arg value="--log-csv"/>
      <arg path="${basedir}/build/logs/phploc.csv"/>
      <arg value="--log-xml"/>
      <arg path="${basedir}/build/logs/phploc.xml"/>
      <arg path="${basedir}/src"/>
    </exec>
  </target>
  <target name="phpdox" description="Generate API documentation using phpDox" depends="set-vendor">
    <exec executable="phpdox"/>
  </target>
  <target name="lint" description="Perform syntax check of sourcecode files">
    <apply executable="php">
      <arg value="-l"/>
      <fileset dir="${basedir}/src">
        <include name="**/*.php"/>
        <modified/>
      </fileset>
      <fileset dir="${basedir}/test">
        <include name="**/*.php"/>
        <modified/>
      </fileset>
      <fileset dir="${basedir}/config">
        <include name="**/*.php"/>
        <modified/>
      </fileset>
    </apply>
  </target>
  <target name="clean" description="Cleanup build artifacts">
    <delete dir="${basedir}/build/api"/>
    <delete dir="${basedir}/build/coverage"/>
    <delete dir="${basedir}/build/logs"/>
    <delete dir="${basedir}/build/pdepend"/>
    <delete dir="${basedir}/build/phpdox"/>
  </target>
  <target name="prepare" depends="clean" description="Prepare for build">
    <mkdir dir="${basedir}/build/api"/>
    <mkdir dir="${basedir}/build/coverage"/>
    <mkdir dir="${basedir}/build/logs"/>
    <mkdir dir="${basedir}/build/pdepend"/>
    <mkdir dir="${basedir}/build/phpdox"/>
  </target>
  <target name="parallel-lint" depends="set-vendor" description="Run PHP parallel lint For Continuous Integration">
    <exec executable="${vendor}/bin/parallel-lint" failonerror="true">
      <arg line="--exclude"/>
      <arg path="${basedir}/vendor"/>
      <arg path="${basedir}"/>
    </exec>
  </target>
  <target name="unit-ci" depends="set-vendor" description="Run unit tests with Codeception For Continuous Integration">
    <exec executable="${vendor}/bin/codecept" failonerror="true">
      <arg value="run"/>
      <arg value="unit"/>
      <arg value="--xml"/>
      <arg value="--coverage-xml"/>
      <arg value="--coverage-html"/>
    </exec>
  </target>
</project>
